#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from app import process_message

def test_user_scenario():
    # –¢–æ—á–Ω–æ —Ç–∞–∫–µ –∂–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —è–∫ —É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    user_message = """üõµ –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è —â–æ–¥–æ —Ä—É—Ö—É –≤–æ—Ä–æ–∂–∏—Ö —É–¥–∞—Ä–Ω–∏—Ö –ë–ø–õ–ê:
1. –ë–ø–õ–ê –∑ –∞–∫–≤–∞—Ç–æ—Ä—ñ—ó –ß–æ—Ä–Ω–æ–≥–æ –º–æ—Ä—è –∫—É—Ä—Å–æ–º –Ω–∞ –Ω.–ø.–í–∏–ª–∫–æ–≤–æ (–û–¥–µ—â–∏–Ω–∞);
2. –ë–ø–õ–ê –Ω–∞ —Å—Ö–æ–¥—ñ –ß–µ—Ä–Ω—ñ–≥—ñ–≤—â–∏–Ω–∏ –∫—É—Ä—Å–æ–º –Ω–∞ –Ω.–ø.–ë–∞—Ç—É—Ä–∏–Ω.
3. –ë–ø–õ–ê –Ω–∞ –ø—ñ–≤–¥–µ–Ω–Ω–æ–º—É –∑–∞—Ö–æ–¥—ñ –î–Ω—ñ–ø—Ä–æ–ø–µ—Ç—Ä–æ–≤—â–∏–Ω–∏, –∫—É—Ä—Å - –ø—ñ–≤–¥–µ–Ω–Ω–æ-–∑–∞—Ö—ñ–¥–Ω–∏–π/–ø—ñ–≤–¥–µ–Ω–Ω–æ-—Å—Ö—ñ–¥–Ω–∏–π."""
    
    print("üéØ === FINAL TEST: User Scenario ===")
    print(f"–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:\n{user_message}\n")
    
    # –í–∏–∫–ª–∏–∫–∞—Ç–∏ process_message
    tracks = process_message(user_message, "user_test", "2024-01-01 12:00:00", "test_channel")
    
    print("üìä === –†–ï–ó–£–õ–¨–¢–ê–¢ ===")
    if tracks:
        print(f"‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ –º–∞—Ä–∫–µ—Ä—ñ–≤: {len(tracks)}")
        print()
        for i, track in enumerate(tracks, 1):
            place = track.get('place', track.get('name', 'Unknown'))
            lat = track.get('lat')
            lon = track.get('lon', track.get('lng'))
            source = track.get('source_match', 'unknown')
            icon = track.get('marker_icon', 'unknown.png')
            
            print(f"üîπ –ú–∞—Ä–∫–µ—Ä {i}: {place}")
            print(f"   üìç –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–∏: ({lat}, {lon})")
            print(f"   üéØ –î–∂–µ—Ä–µ–ª–æ: {source}")
            print(f"   üñºÔ∏è –Ü–∫–æ–Ω–∫–∞: {icon}")
            print()
        
        print("üéâ === –£–°–ü–Ü–•! ===")
        print("–¢–µ–ø–µ—Ä numbered UAV lists –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Å—Ç–≤–æ—Ä—é—é—Ç—å –º–∞—Ä–∫–µ—Ä–∏ –¥–ª—è –≤—Å—ñ—Ö –º—ñ—Å—Ç!")
        print("–ü—Ä–æ–±–ª–µ–º—É –∑ '–Ω.–ø.' prefix –≤–∏—Ä—ñ—à–µ–Ω–æ! ‚úÖ")
        
    else:
        print("‚ùå –ú–∞—Ä–∫–µ—Ä–∏ –Ω–µ —Å—Ç–≤–æ—Ä–µ–Ω—ñ")
        print("–ü—Ä–æ–±–ª–µ–º–∞ —â–µ –∑–∞–ª–∏—à–∞—î—Ç—å—Å—è")

if __name__ == "__main__":
    test_user_scenario()
