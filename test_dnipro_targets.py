#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
Test Dnipro high-speed targets message to ensure it uses raketa.png not shahed.png
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from app import process_message

def test_dnipro_targets_message():
    print("=== –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –≤–∏—Å–æ–∫–æ—à–≤–∏–¥–∫—ñ—Å–Ω—ñ —Ü—ñ–ª—ñ ===")
    
    # –¢–µ—Å—Ç–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –î–Ω—ñ–ø—Ä–æ –∑ –≤–∏—Å–æ–∫–æ—à–≤–∏–¥–∫—ñ—Å–Ω–∏–º–∏ —Ü—ñ–ª—è–º–∏
    test_message = "**üöÄ –î–Ω—ñ–ø—Ä–æ (–î–Ω—ñ–ø—Ä–æ–ø–µ—Ç—Ä–æ–≤—Å—å–∫–∞ –æ–±–ª.)** –ó–∞–≥—Ä–æ–∑–∞ –∑–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è –≤–∏—Å–æ–∫–æ—à–≤–∏–¥–∫—ñ—Å–Ω–∏—Ö —Ü—ñ–ª–µ–π. –ù–µ–≥–∞–π–Ω–æ –ø—Ä—è–º—É–π—Ç–µ –≤ —É–∫—Ä–∏—Ç—Ç—è!"
    
    print(f"–í—Ö—ñ–¥–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:\n{test_message}")
    print("\n" + "="*50)
    
    result = process_message(test_message, "test_dnipro", "2025-09-08 12:00:00", "test_channel")
    
    print(f"\n–†–µ–∑—É–ª—å—Ç–∞—Ç –ø–∞—Ä—Å–∏–Ω–≥—É:")
    print(f"- –¢–∏–ø —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É: {type(result)}")
    
    if result and isinstance(result, list) and len(result) > 0:
        print(f"- –ö—ñ–ª—å–∫—ñ—Å—Ç—å –º–∞—Ä–∫–µ—Ä—ñ–≤: {len(result)}")
        
        marker = result[0]
        place = marker.get('place', 'N/A')
        coordinates = (marker.get('lat'), marker.get('lng'))
        threat_type = marker.get('threat_type', 'N/A')
        icon = marker.get('marker_icon', 'N/A')
        source = marker.get('source_match', 'N/A')
        
        print(f"\n–ú–∞—Ä–∫–µ—Ä:")
        print(f"  - –ú—ñ—Å—Ü–µ: {place}")
        print(f"  - –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–∏: {coordinates}")
        print(f"  - –¢–∏–ø –∑–∞–≥—Ä–æ–∑–∏: {threat_type}")
        print(f"  - –Ü–∫–æ–Ω–∫–∞: {icon}")
        print(f"  - –î–∂–µ—Ä–µ–ª–æ: {source}")
        
        # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—ñ
        if place.lower() == '–¥–Ω—ñ–ø—Ä–æ':
            print(f"  ‚úÖ –ú–Ü–°–¶–ï: –ü—Ä–∞–≤–∏–ª—å–Ω–æ —Ä–æ–∑–ø—ñ–∑–Ω–∞–Ω–æ –î–Ω—ñ–ø—Ä–æ")
        else:
            print(f"  ‚ùå –ú–Ü–°–¶–ï: –û—á—ñ–∫—É–≤–∞–≤—Å—è –î–Ω—ñ–ø—Ä–æ, –æ—Ç—Ä–∏–º–∞–Ω–æ {place}")
            
        if icon == 'raketa.png':
            print(f"  ‚úÖ –Ü–ö–û–ù–ö–ê: –ü—Ä–∞–≤–∏–ª—å–Ω–æ –≤–∏–∑–Ω–∞—á–µ–Ω–æ raketa.png –¥–ª—è –≤–∏—Å–æ–∫–æ—à–≤–∏–¥–∫—ñ—Å–Ω–∏—Ö —Ü—ñ–ª–µ–π")
        elif icon == 'shahed.png':
            print(f"  ‚ùå –Ü–ö–û–ù–ö–ê: –ü–û–ú–ò–õ–ö–ê! –í–∏—Å–æ–∫–æ—à–≤–∏–¥–∫—ñ—Å–Ω—ñ —Ü—ñ–ª—ñ –ø–æ–≤–∏–Ω–Ω—ñ –º–∞—Ç–∏ raketa.png, –∞ –Ω–µ shahed.png")
        else:
            print(f"  ‚ö†Ô∏è  –Ü–ö–û–ù–ö–ê: –ù–µ–æ—á—ñ–∫—É–≤–∞–Ω–∞ —ñ–∫–æ–Ω–∫–∞ {icon}")
            
        if threat_type == 'raketa':
            print(f"  ‚úÖ –¢–ò–ü: –ü—Ä–∞–≤–∏–ª—å–Ω–æ –∫–ª–∞—Å–∏—Ñ—ñ–∫–æ–≤–∞–Ω–æ —è–∫ —Ä–∞–∫–µ—Ç–Ω–∞ –∑–∞–≥—Ä–æ–∑–∞")
        else:
            print(f"  ‚ö†Ô∏è  –¢–ò–ü: –¢–∏–ø –∑–∞–≥—Ä–æ–∑–∏ {threat_type}")
            
    else:
        print("‚ùå –ü–û–ú–ò–õ–ö–ê: –ú–∞—Ä–∫–µ—Ä –Ω–µ —Å—Ç–≤–æ—Ä–µ–Ω–æ")
    
    print("\n" + "="*50)
    
    # –î–æ–¥–∞—Ç–∫–æ–≤–∏–π —Ç–µ—Å—Ç - —Ñ—Ä–∞–∑–∞ "—Ü—ñ–ª—å –Ω–∞ –¥–Ω—ñ–ø—Ä–æ/–æ–±–ª–∞—Å—Ç—å"
    print("\n=== –î–æ–¥–∞—Ç–∫–æ–≤–∏–π —Ç–µ—Å—Ç: '—Ü—ñ–ª—å –Ω–∞ –¥–Ω—ñ–ø—Ä–æ/–æ–±–ª–∞—Å—Ç—å' ===")
    test_message2 = "—Ü—ñ–ª—å –Ω–∞ –¥–Ω—ñ–ø—Ä–æ/–æ–±–ª–∞—Å—Ç—å"
    
    print(f"–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: {test_message2}")
    result2 = process_message(test_message2, "test_target", "2025-09-08 12:00:00", "test_channel")
    
    if result2 and isinstance(result2, list) and len(result2) > 0:
        marker2 = result2[0]
        place2 = marker2.get('place', 'N/A')
        icon2 = marker2.get('marker_icon', 'N/A')
        
        print(f"  - –ú—ñ—Å—Ü–µ: {place2}")
        print(f"  - –Ü–∫–æ–Ω–∫–∞: {icon2}")
        
        if icon2 == 'raketa.png':
            print(f"  ‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ: '—Ü—ñ–ª—å' ‚Üí raketa.png")
        else:
            print(f"  ‚ùå –ü–æ–º–∏–ª–∫–∞: '—Ü—ñ–ª—å' –ø–æ–≤–∏–Ω–Ω–∞ –±—É—Ç–∏ raketa.png, –∞ –Ω–µ {icon2}")
    else:
        print("  ‚ùå –ú–∞—Ä–∫–µ—Ä –Ω–µ —Å—Ç–≤–æ—Ä–µ–Ω–æ –¥–ª—è '—Ü—ñ–ª—å –Ω–∞ –¥–Ω—ñ–ø—Ä–æ/–æ–±–ª–∞—Å—Ç—å'")
    
    print("\n" + "="*50)
    return result

if __name__ == "__main__":
    test_dnipro_targets_message()
