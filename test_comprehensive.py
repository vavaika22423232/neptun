#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Test various message types to ensure trajectory fix doesn't break other patterns
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from app import process_message

def test_various_patterns():
    """Test multiple message types."""
    print("üß™ COMPREHENSIVE MESSAGE TESTS")
    print("=" * 60)
    
    test_cases = [
        # Trajectory messages (should create NO markers)
        ("6 —à–∞—Ö–µ–¥—ñ–≤ –∑ –ø–æ–ª—Ç–∞–≤—â–∏–Ω–∏ –Ω–∞ –∫–∏—ó–≤—â–∏–Ω—É/—á–µ—Ä–∫–∞—â–∏–Ω—É", "‚ùå Trajectory - no markers"),
        ("2 —à–∞—Ö–µ–¥–∏ –∑ –¥–æ–Ω–µ—á—á–∏–Ω–∏ –Ω–∞ —Ö–∞—Ä–∫—ñ–≤—â–∏–Ω—É", "‚ùå Trajectory - no markers"),
        
        # Regular multi-city messages (should create markers)
        ("–ù–∞ –•–∞—Ä–∫—ñ–≤—â–∏–Ω—ñ: 1 —à–∞—Ö–µ–¥ –Ω–∞ –°–∞–≤–∏–Ω—Ü—ñ, 1 —à–∞—Ö–µ–¥ –Ω–∞ –ì—É—Å–∞—Ä—ñ–≤–∫—É", "‚úÖ Multi-city - create markers"),
        ("–°—É–º—â–∏–Ω–∞: —à–∞—Ö–µ–¥ –Ω–∞ –ö–æ–Ω–æ—Ç–æ–ø", "‚úÖ Single city - create marker"),
        
        # Mixed patterns
        ("–ü–æ–ª—Ç–∞–≤—â–∏–Ω–∞, –ö–∏—ó–≤—â–∏–Ω–∞ - —à–∞—Ö–µ–¥–∏", "‚úÖ Multi-region threat - create markers"),
    ]
    
    for i, (message, expected) in enumerate(test_cases, 1):
        print(f"\n--- Test {i}: {expected} ---")
        print(f"Message: '{message}'")
        
        try:
            result = process_message(message, f'test_{i}', '2024-12-21', 'test_channel')
            markers = result
            
            marker_count = len(markers) if markers else 0
            print(f"Result: {marker_count} markers created")
            
            if markers:
                for j, marker in enumerate(markers, 1):
                    place = marker.get('place', 'N/A')
                    source = marker.get('source_match', 'N/A')
                    print(f"  {j}. {place} (source: {source})")
            
        except Exception as e:
            print(f"Error: {e}")

if __name__ == "__main__":
    test_various_patterns()
