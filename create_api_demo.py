#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç—É—é –¥–µ–º–æ —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è API –º–∞—Ä–∫–µ—Ä–æ–≤
"""

import requests
import json

def create_api_demo_page():
    """–°–æ–∑–¥–∞–µ—Ç HTML —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ API –º–∞—Ä–∫–µ—Ä–æ–≤"""
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ API
    try:
        response = requests.get('http://localhost:5000/api_alerts')
        if response.status_code == 200:
            api_data = response.json()
            markers = api_data.get('markers', [])
        else:
            markers = []
    except:
        markers = []
    
    html = f"""
<!DOCTYPE html>
<html lang="uk">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Ukraine Alert API - –î–µ–º–æ –º–∞—Ä–∫–µ—Ä—ã</title>
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css" />
    <style>
        body {{ margin: 0; padding: 20px; font-family: Arial, sans-serif; }}
        #map {{ height: 600px; border: 2px solid #333; border-radius: 8px; }}
        .info {{ background: #f0f0f0; padding: 15px; margin-bottom: 20px; border-radius: 8px; }}
        .marker-info {{ background: white; padding: 10px; margin: 5px 0; border-radius: 5px; border-left: 4px solid #007cba; }}
        .stats {{ display: flex; gap: 20px; margin-bottom: 20px; }}
        .stat {{ background: #007cba; color: white; padding: 10px 15px; border-radius: 5px; text-align: center; }}
        .refresh-btn {{ background: #28a745; color: white; padding: 10px 20px; border: none; border-radius: 5px; cursor: pointer; }}
        .refresh-btn:hover {{ background: #218838; }}
    </style>
</head>
<body>
    <h1>üá∫üá¶ Ukraine Alert API - –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –º–∞—Ä–∫–µ—Ä–æ–≤</h1>
    
    <div class="stats">
        <div class="stat">
            <div><strong>{len(markers)}</strong></div>
            <div>–ú–∞—Ä–∫–µ—Ä—ñ–≤ –Ω–∞ –∫–∞—Ä—Ç—ñ</div>
        </div>
        <div class="stat">
            <div><strong>{len(set(m.get('threat_type', 'unknown') for m in markers))}</strong></div>
            <div>–¢–∏–ø—ñ–≤ –∑–∞–≥—Ä–æ–∑</div>
        </div>
        <div class="stat">
            <div><strong>{len(set(m.get('region', 'unknown') for m in markers))}</strong></div>
            <div>–†–µ–≥—ñ–æ–Ω—ñ–≤</div>
        </div>
    </div>
    
    <button class="refresh-btn" onclick="location.reload()">üîÑ –û–Ω–æ–≤–∏—Ç–∏ –¥–∞–Ω—ñ</button>
    
    <div id="map"></div>
    
    <div class="info">
        <h3>üìç –ú–∞—Ä–∫–µ—Ä–∏ –Ω–∞ –∫–∞—Ä—Ç—ñ:</h3>
"""
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–∞—Ä–∫–µ—Ä–∞—Ö
    for i, marker in enumerate(markers[:10]):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 10
        threat_icon = {
            'air_alert': '‚úàÔ∏è',
            'artillery': 'üí•',
            'urban_combat': 'üèôÔ∏è',
            'chemical': '‚ò¢Ô∏è',
            'nuclear': '‚ò¢Ô∏è'
        }.get(marker.get('threat_type', 'unknown'), 'üö®')
        
        html += f"""
        <div class="marker-info">
            <strong>{threat_icon} {marker.get('region', 'Unknown')}</strong><br>
            –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–∏: {marker.get('lat', 0):.4f}, {marker.get('lng', 0):.4f}<br>
            –¢–∏–ø –∑–∞–≥—Ä–æ–∑–∏: {marker.get('threat_type', 'unknown')}<br>
            –ß–∞—Å: {marker.get('timestamp', 'unknown')}
        </div>
        """
    
    if len(markers) > 10:
        html += f"<p><em>... —Ç–∞ —â–µ {len(markers) - 10} –º–∞—Ä–∫–µ—Ä—ñ–≤</em></p>"
    
    html += """
    </div>

    <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script>
    <script>
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞—Ä—Ç—ã
        const map = L.map('map').setView([48.3794, 31.1656], 6);
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '¬© OpenStreetMap contributors'
        }).addTo(map);
        
        // –î–∞–Ω–Ω—ã–µ –º–∞—Ä–∫–µ—Ä–æ–≤
        const markers = """ + json.dumps(markers) + """;
        
        // –î–æ–±–∞–≤–ª—è–µ–º –º–∞—Ä–∫–µ—Ä—ã –Ω–∞ –∫–∞—Ä—Ç—É
        markers.forEach(marker => {
            const threatIcons = {
                'air_alert': '‚úàÔ∏è',
                'artillery': 'üí•', 
                'urban_combat': 'üèôÔ∏è',
                'chemical': '‚ò¢Ô∏è',
                'nuclear': '‚ò¢Ô∏è'
            };
            
            const icon = threatIcons[marker.threat_type] || 'üö®';
            
            const markerIcon = L.divIcon({
                html: `<div style="
                    background: #ff4444;
                    border: 2px solid #fff;
                    border-radius: 50%;
                    width: 40px;
                    height: 40px;
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    font-size: 20px;
                    box-shadow: 0 2px 5px rgba(0,0,0,0.3);
                ">${icon}</div>`,
                className: 'api-alert-marker',
                iconSize: [40, 40],
                iconAnchor: [20, 20]
            });
            
            L.marker([marker.lat, marker.lng], {icon: markerIcon})
                .bindPopup(`
                    <div>
                        <h4>üá∫üá¶ ${marker.region}</h4>
                        <p><strong>–¢–∏–ø:</strong> ${marker.threat_type}</p>
                        <p><strong>–ß–∞—Å:</strong> ${new Date(marker.timestamp).toLocaleString('uk-UA')}</p>
                        <p><strong>–î–∂–µ—Ä–µ–ª–æ:</strong> Ukraine Alert API</p>
                    </div>
                `)
                .addTo(map);
        });
        
        console.log(`üá∫üá¶ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ ${markers.length} –º–∞—Ä–∫–µ—Ä—ñ–≤ –∑ Ukraine Alert API`);
    </script>
</body>
</html>
    """
    
    return html

if __name__ == "__main__":
    html = create_api_demo_page()
    with open('/Users/vladimirmalik/Desktop/render2/api_demo.html', 'w', encoding='utf-8') as f:
        f.write(html)
    print("‚úÖ –î–µ–º–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å–æ–∑–¥–∞–Ω–∞: api_demo.html")
    print("üåê –û—Ç–∫—Ä–æ–π—Ç–µ —Ñ–∞–π–ª –≤ –±—Ä–∞—É–∑–µ—Ä–µ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ API –º–∞—Ä–∫–µ—Ä–æ–≤")
