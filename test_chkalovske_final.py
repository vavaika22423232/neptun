#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ß–∫–∞–ª–æ–≤—Å—å–∫–æ–≥–æ
–ü–æ—Å–ª–µ –≤–Ω–µ–¥—Ä–µ–Ω–∏—è —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–π –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from app import spacy_enhanced_geocoding, normalize_ukrainian_toponym

def test_chkalovske_final():
    """–§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ß–∫–∞–ª–æ–≤—Å—å–∫–æ–≥–æ —Å —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–π –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–µ–π"""
    
    print("üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –¥–ª—è –ß–∫–∞–ª–æ–≤—Å—å–∫–æ–≥–æ")
    print("=" * 60)
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º NLP - –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ app.py
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    test_messages = [
        "1 –ë–ø–õ–ê –Ω–∞ –ß–∫–∞–ª–æ–≤—Å—å–∫–µ",
        "–ë–ø–õ–ê –∫—É—Ä—Å–æ–º –Ω–∞ –ß–∫–∞–ª–æ–≤—Å—å–∫–µ", 
        "–£–¥–∞—Ä –ø–æ –ß–∫–∞–ª–æ–≤—Å—å–∫–æ–º—É",
        "–í–∏–±—É—Ö–∏ –≤ –ß–∫–∞–ª–æ–≤—Å—å–∫–æ–º—É",
        "–û–±—Å—Ç—Ä—ñ–ª –ß–∫–∞–ª–æ–≤—Å—å–∫–æ–≥–æ —Ä–∞–π–æ–Ω—É"
    ]
    
    print("üìã –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ –ø–∞–¥–µ–∂–∏:")
    print()
    
    for i, message in enumerate(test_messages, 1):
        print(f"üìù –¢–µ—Å—Ç {i}: '{message}'")
        
        try:
            results = spacy_enhanced_geocoding(message)
            
            if results:
                for result in results:
                    name = result.get('name', 'Unknown')
                    normalized = result.get('normalized', 'None')
                    coords = result.get('coords')
                    
                    if '—á–∫–∞–ª–æ–≤' in name.lower():
                        print(f"   ‚úÖ {name} ‚Üí {normalized}")
                        if coords:
                            lat, lon = coords
                            print(f"      üìç –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: ({lat:.4f}, {lon:.4f})")
                            
                            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–ª–∞—Å—Ç—å –ø–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º
                            if 49.5 <= lat <= 50.0 and 36.5 <= lon <= 37.5:
                                print(f"      üéØ –ü–†–ê–í–ò–õ–¨–ù–û: –•–∞—Ä–∫—ñ–≤—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å")
                            elif 47.5 <= lat <= 48.5 and 37.5 <= lon <= 38.5:
                                print(f"      ‚ùå –ù–ï–ü–†–ê–í–ò–õ–¨–ù–û: –î–æ–Ω–µ—Ü—å–∫–∞ –æ–±–ª–∞—Å—Ç—å")
                            else:
                                print(f"      ‚ùì –Ü–Ω—à–∞ –æ–±–ª–∞—Å—Ç—å")
                        else:
                            print(f"      ‚ö†Ô∏è  –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω—ñ")
                        print()
            else:
                print(f"   ‚ùå –¢–æ–ø–æ–Ω—ñ–º–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω—ñ")
                print()
                
        except Exception as e:
            print(f"   üí• –ü–æ–º–∏–ª–∫–∞: {e}")
            print()
    
    print("üß™ –¢–µ—Å—Ç—É—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é –Ω–æ—Ä–º–∞–ª—ñ–∑–∞—Ü—ñ—ó –Ω–∞–ø—Ä—è–º—É:")
    print("-" * 40)
    
    test_variants = [
        "—á–∫–∞–ª–æ–≤—Å—å–∫–µ",
        "—á–∫–∞–ª–æ–≤—Å—å–∫–∏–π", 
        "—á–∫–∞–ª–æ–≤—Å—å–∫–æ–≥–æ",
        "—á–∫–∞–ª–æ–≤—Å—å–∫–æ–º—É"
    ]
    
    for variant in test_variants:
        normalized = normalize_ukrainian_toponym(variant, variant)  # original_text, lemmatized_name
        print(f"   '{variant}' ‚Üí '{normalized}'")
    
    print()
    print("‚ú® –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    test_chkalovske_final()
