#!/bin/bash
# –°–∫—Ä–∏–ø—Ç –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–∞ GMhost

echo "üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø –ù–ê –°–ï–†–í–ï–†–ï"
echo "===================================="

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
check_processes() {
    echo "üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø—É—â–µ–Ω–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ Python:"
    ps aux | grep python | grep -v grep || echo "‚ùå –ü—Ä–æ—Ü–µ—Å—Å—ã Python –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
    echo ""
    
    echo "üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ app.py:"
    ps aux | grep app.py | grep -v grep || echo "‚ùå app.py –Ω–µ –∑–∞–ø—É—â–µ–Ω"
    echo ""
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ—Ä—Ç–æ–≤
check_ports() {
    echo "üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–Ω—è—Ç—ã—Ö –ø–æ—Ä—Ç–æ–≤:"
    netstat -tulpn 2>/dev/null | grep :5000 || echo "‚ùå –ü–æ—Ä—Ç 5000 –Ω–µ –∑–∞–Ω—è—Ç"
    echo ""
    
    echo "üåê –í—Å–µ Python –ø—Ä–æ—Ü–µ—Å—Å—ã –Ω–∞ –ø–æ—Ä—Ç–∞—Ö:"
    netstat -tulpn 2>/dev/null | grep python || echo "‚ùå Python –Ω–µ —Å–ª—É—à–∞–µ—Ç –ø–æ—Ä—Ç–æ–≤"
    echo ""
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–æ–≥–æ–≤
check_logs() {
    echo "üìù –ü–æ–∏—Å–∫ –ª–æ–≥–æ–≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –º–µ—Å—Ç–∞ –ª–æ–≥–æ–≤
    if [ -f "app.log" ]; then
        echo "‚úÖ –ù–∞–π–¥–µ–Ω app.log:"
        tail -20 app.log
    else
        echo "‚ùå app.log –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
    echo ""
    
    if [ -f "server.log" ]; then
        echo "‚úÖ –ù–∞–π–¥–µ–Ω server.log:"
        tail -20 server.log
    else
        echo "‚ùå server.log –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
    echo ""
    
    # –°–∏—Å—Ç–µ–º–Ω—ã–µ –ª–æ–≥–∏
    echo "üìù –°–∏—Å—Ç–µ–º–Ω—ã–µ –ª–æ–≥–∏ (–ø–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏):"
    journalctl --user -n 10 2>/dev/null || echo "‚ùå journalctl –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    echo ""
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ–∞–π–ª–æ–≤
check_files() {
    echo "üìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–∂–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤:"
    
    files=("app.py" ".env" "messages.json" "requirements.txt")
    for file in "${files[@]}"; do
        if [ -f "$file" ]; then
            size=$(ls -lh "$file" | awk '{print $5}')
            echo "‚úÖ $file - –Ω–∞–π–¥–µ–Ω ($size)"
        else
            echo "‚ùå $file - –ù–ï –ù–ê–ô–î–ï–ù"
        fi
    done
    echo ""
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ API
check_api() {
    echo "üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ API endpoints:"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π API
    if command -v curl &> /dev/null; then
        echo "üì° –ü—Ä–æ–≤–µ—Ä–∫–∞ /api/messages:"
        curl -s -f http://localhost:5000/api/messages | head -200 || echo "‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
        echo ""
        
        echo "üì° –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã:"
        curl -s -f http://localhost:5000/ | head -100 || echo "‚ùå –°–∞–π—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
        echo ""
    else
        echo "‚ùå curl –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, API –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–µ–ª—å–∑—è"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
check_dependencies() {
    echo "üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π:"
    
    required=("flask" "telethon" "spacy" "requests" "pytz")
    for pkg in "${required[@]}"; do
        python3 -c "import $pkg; print('‚úÖ $pkg - —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')" 2>/dev/null || echo "‚ùå $pkg - –ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù"
    done
    echo ""
}

# –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π messages.json
check_messages_file() {
    echo "üì® –ê–Ω–∞–ª–∏–∑ messages.json:"
    
    if [ -f "messages.json" ]; then
        size=$(ls -lh messages.json | awk '{print $5}')
        lines=$(wc -l < messages.json)
        echo "‚úÖ messages.json –Ω–∞–π–¥–µ–Ω: $size, $lines —Å—Ç—Ä–æ–∫"
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏
        echo "üìÑ –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –≤ messages.json:"
        tail -10 messages.json
        echo ""
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞—Ç—É –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è
        mod_time=$(ls -l messages.json | awk '{print $6, $7, $8}')
        echo "üïê –ü–æ—Å–ª–µ–¥–Ω–µ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ: $mod_time"
    else
        echo "‚ùå messages.json –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
    echo ""
}

# –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∑–∞–ø—É—Å–∫–∞
create_test_run() {
    echo "üß™ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞ –∑–∞–ø—É—Å–∫–∞:"
    
    cat > test_app.py << 'EOF'
#!/usr/bin/env python3
import sys
import os
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.DEBUG,
    format='%(asctime)s %(levelname)s %(name)s: %(message)s',
    handlers=[
        logging.FileHandler('debug.log'),
        logging.StreamHandler(sys.stdout)
    ]
)

print("üöÄ –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º")
print("üìù –õ–æ–≥–∏ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ debug.log")

try:
    print("üì¶ –ò–º–ø–æ—Ä—Ç –º–æ–¥—É–ª–µ–π...")
    import app
    print("‚úÖ app.py –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
    
    print("üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...")
    if hasattr(app, 'API_ID') and app.API_ID:
        print(f"‚úÖ TELEGRAM_API_ID: {app.API_ID}")
    else:
        print("‚ùå TELEGRAM_API_ID –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
    
    if hasattr(app, 'client') and app.client:
        print("‚úÖ Telegram –∫–ª–∏–µ–Ω—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
    else:
        print("‚ùå Telegram –∫–ª–∏–µ–Ω—Ç –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
    
    print("üåê –ó–∞–ø—É—Å–∫ Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–∞ localhost:5001...")
    if hasattr(app, 'app'):
        app.app.run(host='127.0.0.1', port=5001, debug=True)
    else:
        print("‚ùå Flask app –Ω–µ –Ω–∞–π–¥–µ–Ω")
        
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    import traceback
    traceback.print_exc()
EOF
    
    chmod +x test_app.py
    echo "‚úÖ –°–æ–∑–¥–∞–Ω test_app.py –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏"
    echo "üèÉ –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python3 test_app.py"
    echo ""
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    check_processes
    check_ports
    check_files
    check_messages_file
    check_dependencies
    check_logs
    check_api
    create_test_run
    
    echo "üí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:"
    echo "1. –ï—Å–ª–∏ app.py –Ω–µ –∑–∞–ø—É—â–µ–Ω: python3 app.py"
    echo "2. –î–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏: python3 test_app.py"
    echo "3. –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤: tail -f debug.log"
    echo "4. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å .env —Ñ–∞–π–ª –Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å API –∫–ª—é—á–µ–π"
    echo ""
    echo "üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
}

# –ó–∞–ø—É—Å–∫
main "$@"
