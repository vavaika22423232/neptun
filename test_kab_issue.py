#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, –ø–æ—á–µ–º—É –ö–ê–ë—ã –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç shahed.png –≤–º–µ—Å—Ç–æ avia.png
"""

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –ø–∞–ø–∫—É –≤ sys.path —á—Ç–æ–±—ã –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å app.py
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

try:
    from app import process_message
    
    def test_kab_issue():
        print("=== –¢–µ—Å—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ö–ê–ë–æ–≤ ===\n")
        
        test_messages = [
            {
                'message': 'üí£ –•–æ—Ç—ñ–Ω—å (–°—É–º—Å—å–∫–∞ –æ–±–ª.) –ó–∞–≥—Ä–æ–∑–∞ –∑–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è –ö–ê–ë—ñ–≤. –ù–µ–≥–∞–π–Ω–æ –ø—Ä—è–º—É–π—Ç–µ –≤ —É–∫—Ä–∏—Ç—Ç—è!',
                'expected_icon': 'avia.png',
                'expected_category': 'avia',
                'description': '–ö–ê–ë—ã (—É–ø—Ä–∞–≤–ª—è–µ–º—ã–µ –∞–≤–∏–∞—Ü–∏–æ–Ω–Ω—ã–µ –±–æ–º–±—ã)'
            },
            {
                'message': 'üõ∏ –¢–µ—Å—Ç–æ–≤–µ –º—ñ—Å—Ç–æ (–°—É–º—Å—å–∫–∞ –æ–±–ª.) –ó–∞–≥—Ä–æ–∑–∞ –ë–ø–õ–ê!',
                'expected_icon': 'shahed.png', 
                'expected_category': 'shahed',
                'description': '–ë–ø–õ–ê (–¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è)'
            },
            {
                'message': '‚úàÔ∏è –¢–µ—Å—Ç–æ–≤–µ –º—ñ—Å—Ç–æ (–°—É–º—Å—å–∫–∞ –æ–±–ª.) –ó–∞–≥—Ä–æ–∑–∞ —Ç–∞–∫—Ç–∏—á–Ω–æ—ó –∞–≤—ñ–∞—Ü—ñ—ó!',
                'expected_icon': 'avia.png',
                'expected_category': 'avia', 
                'description': '–¢–∞–∫—Ç–∏—á–µ—Å–∫–∞—è –∞–≤–∏–∞—Ü–∏—è'
            }
        ]
        
        for test in test_messages:
            print(f"–¢–µ—Å—Ç: {test['description']}")
            print(f"–°–æ–æ–±—â–µ–Ω–∏–µ: {test['message']}")
            
            try:
                result = process_message(test['message'], "test_1", "2025-09-13", "test_channel")
                
                if result and len(result) > 0:
                    message_data = result[0]
                    threat_type = message_data.get('threat_type', '–Ω–µ –Ω–∞–π–¥–µ–Ω–æ')
                    marker_icon = message_data.get('marker_icon', '–Ω–µ –Ω–∞–π–¥–µ–Ω–æ')
                    place = message_data.get('place', '–Ω–µ –Ω–∞–π–¥–µ–Ω–æ')
                    
                    print(f"  –†–µ–∑—É–ª—å—Ç–∞—Ç:")
                    print(f"    –ú–µ—Å—Ç–æ: {place}")
                    print(f"    –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {threat_type}")
                    print(f"    –ò–∫–æ–Ω–∫–∞: {marker_icon}")
                    print(f"    –û–∂–∏–¥–∞–µ—Ç—Å—è: {test['expected_category']}/{test['expected_icon']}")
                    
                    if threat_type == test['expected_category'] and marker_icon == test['expected_icon']:
                        print(f"  ‚úÖ –ü–†–ê–í–ò–õ–¨–ù–û")
                    else:
                        print(f"  ‚ùå –ù–ï–ü–†–ê–í–ò–õ–¨–ù–û")
                        
                        # –ê–Ω–∞–ª–∏–∑ —Ç–µ–∫—Å—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
                        msg_lower = test['message'].lower()
                        print(f"  –ê–Ω–∞–ª–∏–∑ —Ç–µ–∫—Å—Ç–∞:")
                        
                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ø–∞–¥–∞–µ—Ç –ø–æ–¥ –¥—Ä–æ–Ω—ã
                        drone_keywords = ['shahed','—à–∞—Ö–µ–¥','—à–∞—Ö–µ–¥—ñ','—à–∞—Ö–µ–¥—ñ–≤','geran','–≥–µ—Ä–∞–Ω—å','–¥—Ä–æ–Ω','–¥—Ä–æ–Ω–∏','–±–ø–ª–∞','uav']
                        found_drone = [kw for kw in drone_keywords if kw in msg_lower]
                        if found_drone:
                            print(f"    ‚ùå –ù–∞–π–¥–µ–Ω—ã –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –¥—Ä–æ–Ω–æ–≤: {found_drone}")
                        
                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ö–ê–ë—ã
                        kab_keywords = ['–∫–∞–±','kab','—É–º–ø–∫','umpk','–º–æ–¥—É–ª—å','fab','—É–º–ø–±','—Ñ–∞–±','–∫–∞–±—É']
                        found_kab = [kw for kw in kab_keywords if kw in msg_lower]
                        if found_kab:
                            print(f"    ‚úÖ –ù–∞–π–¥–µ–Ω—ã –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –ö–ê–ë–æ–≤: {found_kab}")
                        
                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤–∏–∞—Ü–∏—é
                        avia_keywords = ['–ª—ñ—Ç–∞–∫','—Å–∞–º–æ–ª','avia','tactical','—Ç–∞–∫—Ç–∏—á–Ω','fighter','–∏—Å—Ç—Ä–µ–±–∏—Ç','jets']
                        found_avia = [kw for kw in avia_keywords if kw in msg_lower]
                        if found_avia:
                            print(f"    ‚úÖ –ù–∞–π–¥–µ–Ω—ã –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –∞–≤–∏–∞—Ü–∏–∏: {found_avia}")
                            
                else:
                    print(f"  ‚ùå –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ")
                    
            except Exception as e:
                print(f"  ‚ùå –û–®–ò–ë–ö–ê: {e}")
            
            print()

    if __name__ == "__main__":
        test_kab_issue()

except ImportError as e:
    print(f"–û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
    print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ app.py –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ç–æ–π –∂–µ –ø–∞–ø–∫–µ")
