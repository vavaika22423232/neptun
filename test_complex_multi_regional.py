#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
Test complex multi-regional message with pipes and different cities
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from app import process_message

def test_complex_multi_regional():
    print("=== –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è —Å–∫–ª–∞–¥–Ω–æ–≥–æ –±–∞–≥–∞—Ç–æ—Ä–µ–≥—ñ–æ–Ω–∞–ª—å–Ω–æ–≥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è ===")
    
    # –¢–æ—á–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    test_message = """—á–µ—Ä–Ω—ñ–≥—ñ–≤—â–∏–Ω–∞ (–Ω–æ–≤–≥–æ—Ä–æ–¥-—Å—ñ–≤–µ—Ä—Å—å–∫–∏–π —Ä-–Ω) —Ç–∞ –æ–¥–µ—â–∏–Ω–∞ - –∑–∞–≥—Ä–æ–∑–∞ –∑–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è –≤–æ—Ä–æ–≥–æ–º —É–¥–∞—Ä–Ω–∏—Ö –±–ø–ª–∞. | –æ–¥–µ—â–∏–Ω–∞ - —à–∞—Ö–µ–¥–∏ –Ω–∞ –≤–∏–ª–∫–æ–≤–æ
„Ö§ | –≥—Ä—É–ø–∞ 8—Ö –±–ø–ª–∞ —É –Ω–∞–ø—Ä—è–º–∫—É —ñ–∑–º–∞—ó–ª—å—Å—å–∫–æ–≥–æ —Ä–∞–π–æ–Ω—É –æ–¥–µ—â–∏–Ω–∏, –≤–∏–ª–∫–æ–≤–µ."""
    
    print(f"–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:\n{test_message}")
    print("\n" + "="*70)
    
    # –†–æ–∑–±–µ—Ä–µ–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–∞ —á–∞—Å—Ç–∏–Ω–∏
    lines = test_message.strip().split('\n')
    print(f"\n–†—è–¥–∫–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:")
    for i, line in enumerate(lines, 1):
        print(f"  {i}: '{line}'")
    
    # –û—á—ñ–∫—É–≤–∞–Ω—ñ –º—ñ—Ç–∫–∏
    expected_cities = [
        "–ù–æ–≤–≥–æ—Ä–æ–¥-–°—ñ–≤–µ—Ä—Å—å–∫–∏–π (–ß–µ—Ä–Ω—ñ–≥—ñ–≤—â–∏–Ω–∞)",
        "–í–∏–ª–∫–æ–≤–µ (–û–¥–µ—â–∏–Ω–∞)", 
        "–Ü–∑–º–∞—ó–ª (–û–¥–µ—â–∏–Ω–∞)"  # –º–æ–∂–ª–∏–≤–æ
    ]
    
    print(f"\n–û—á—ñ–∫—É–≤–∞–Ω—ñ –º—ñ—Ç–∫–∏: {expected_cities}")
    
    # –¢–µ—Å—Ç—É—î–º–æ –æ–±—Ä–æ–±–∫—É
    result = process_message(test_message, "test_complex", "2025-09-08 12:00:00", "test_channel")
    
    if result and isinstance(result, list):
        print(f"\n‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç: {len(result)} –º–∞—Ä–∫–µ—Ä—ñ–≤ —Å—Ç–≤–æ—Ä–µ–Ω–æ")
        
        regions_found = {}
        cities_found = []
        
        for i, marker in enumerate(result, 1):
            place = marker.get('place', 'N/A')
            coords = (marker.get('lat'), marker.get('lng'))
            icon = marker.get('marker_icon', 'N/A')
            source = marker.get('source_match', 'N/A')
            threat_type = marker.get('threat_type', 'N/A')
            
            print(f"\n–ú–∞—Ä–∫–µ—Ä {i}:")
            print(f"  üìç –ú—ñ—Å—Ü–µ: {place}")
            print(f"  üó∫Ô∏è  –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–∏: {coords}")
            print(f"  üî∂ –Ü–∫–æ–Ω–∫–∞: {icon}")
            print(f"  üîç –î–∂–µ—Ä–µ–ª–æ: {source}")
            print(f"  ‚ö†Ô∏è  –¢–∏–ø: {threat_type}")
            
            cities_found.append(place)
            
            # –ö–ª–∞—Å–∏—Ñ—ñ–∫–∞—Ü—ñ—è –∑–∞ —Ä–µ–≥—ñ–æ–Ω–∞–º–∏
            place_lower = place.lower()
            if '–Ω–æ–≤–≥–æ—Ä–æ–¥' in place_lower or '—á–µ—Ä–Ω—ñ–≥—ñ–≤' in place_lower:
                regions_found['–ß–µ—Ä–Ω—ñ–≥—ñ–≤—â–∏–Ω–∞'] = place
            elif '–≤–∏–ª–∫–æ–≤–µ' in place_lower or '–≤–∏–ª–∫–æ–≤–æ' in place_lower or '–æ–¥–µ—Å' in place_lower or '—ñ–∑–º–∞—ó–ª' in place_lower:
                regions_found['–û–¥–µ—â–∏–Ω–∞'] = place
        
        print(f"\n" + "="*70)
        print("üìä –ê–ù–ê–õ–Ü–ó –†–ï–ó–£–õ–¨–¢–ê–¢–Ü–í:")
        
        expected_regions = ['–ß–µ—Ä–Ω—ñ–≥—ñ–≤—â–∏–Ω–∞', '–û–¥–µ—â–∏–Ω–∞']
        
        for region in expected_regions:
            if region in regions_found:
                print(f"  ‚úÖ {region}: {regions_found[region]}")
            else:
                print(f"  ‚ùå {region}: –ù–ï –ó–ù–ê–ô–î–ï–ù–û")
        
        print(f"\nüéØ –ó–Ω–∞–π–¥–µ–Ω—ñ –º—ñ—Å—Ç–∞: {cities_found}")
        
        # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ—ó –ø—Ä–æ–±–ª–µ–º–∏
        if len(result) == 1 and any('–æ–¥–µ—Å' in city.lower() for city in cities_found):
            print(f"\n‚ö†Ô∏è  –ü–†–û–ë–õ–ï–ú–ê: –°—Ç–≤–æ—Ä–µ–Ω–∞ —Ç—ñ–ª—å–∫–∏ –º—ñ—Ç–∫–∞ –≤ –û–¥–µ—Å—ñ –∑–∞–º—ñ—Å—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∏—Ö –º—ñ—Å—Ç")
            print(f"   –û—á—ñ–∫—É–≤–∞–ª–æ—Å—è: –í–∏–ª–∫–æ–≤–µ, –º–æ–∂–ª–∏–≤–æ –ù–æ–≤–≥–æ—Ä–æ–¥-–°—ñ–≤–µ—Ä—Å—å–∫–∏–π")
            print(f"   –û—Ç—Ä–∏–º–∞–Ω–æ: {cities_found[0]}")
        elif len(result) >= 2:
            print(f"\nüéâ –î–û–ë–†–ï: –°—Ç–≤–æ—Ä–µ–Ω–æ {len(result)} –º—ñ—Ç–æ–∫ –¥–ª—è —Ä—ñ–∑–Ω–∏—Ö –º—ñ—Å—Ç")
        else:
            print(f"\n‚ö†Ô∏è  –†–ï–ó–£–õ–¨–¢–ê–¢: {len(result)} –º—ñ—Ç–æ–∫")
            
    else:
        print("‚ùå –ü–û–ú–ò–õ–ö–ê: –ú–∞—Ä–∫–µ—Ä–∏ –Ω–µ —Å—Ç–≤–æ—Ä–µ–Ω—ñ")

if __name__ == "__main__":
    test_complex_multi_regional()
