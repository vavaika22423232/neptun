#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç —Ä–∞–±–æ—Ç—ã —Å Ukraine Alert API —Å —Ä–∞–∑–Ω—ã–º–∏ —Ñ–æ—Ä–º–∞—Ç–∞–º–∏ —Ç–æ–∫–µ–Ω–∞
"""

import requests
import json
import base64

# –ù–∞—à —Ç–æ–∫–µ–Ω —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–≤–æ–µ—Ç–æ—á–∏–µ, –≤–æ–∑–º–æ–∂–Ω–æ —ç—Ç–æ username:password
API_TOKEN = "57fe8a39:7698ad50f0f15d502b280a83019bab25"
BASE_URL = "https://api.ukrainealarm.com"

def test_basic_auth():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º Basic Authentication"""
    print("üîê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Basic Authentication...")
    
    # –†–∞–∑–¥–µ–ª—è–µ–º —Ç–æ–∫–µ–Ω –Ω–∞ username:password
    if ':' in API_TOKEN:
        username, password = API_TOKEN.split(':', 1)
        print(f"   Username: {username}")
        print(f"   Password: {password[:8]}...")
        
        # –°–æ–∑–¥–∞–µ–º Basic Auth –∑–∞–≥–æ–ª–æ–≤–æ–∫
        credentials = f"{username}:{password}"
        encoded_credentials = base64.b64encode(credentials.encode('utf-8')).decode('utf-8')
        
        headers = {
            "Authorization": f"Basic {encoded_credentials}",
            "Content-Type": "application/json"
        }
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã
        endpoints = ["/api/v3/alerts", "/api/v3/regions", "/api/v3/alerts/status"]
        
        for endpoint in endpoints:
            try:
                url = f"{BASE_URL}{endpoint}"
                response = requests.get(url, headers=headers, timeout=10)
                
                print(f"  {endpoint}: {response.status_code}")
                
                if response.status_code == 200:
                    try:
                        data = response.json()
                        print(f"    ‚úÖ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã!")
                        
                        if endpoint == "/api/v3/alerts" and data:
                            print(f"    üìä –¢—Ä–µ–≤–æ–≥: {len(data)}")
                            if data:
                                print("    üìã –ü—Ä–∏–º–µ—Ä —Ç—Ä–µ–≤–æ–≥–∏:")
                                example = data[0]
                                print(f"    {json.dumps(example, indent=6, ensure_ascii=False)[:500]}...")
                                
                        elif endpoint == "/api/v3/regions" and data:
                            if "states" in data:
                                print(f"    üèòÔ∏è –†–µ–≥–∏–æ–Ω–æ–≤: {len(data['states'])}")
                                
                    except json.JSONDecodeError as e:
                        print(f"    ‚ùå JSON –æ—à–∏–±–∫–∞: {e}")
                        
                elif response.status_code == 401:
                    print(f"    ‚ùå –ù–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω")
                elif response.status_code == 403:
                    print(f"    ‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω")
                else:
                    print(f"    ‚ö†Ô∏è –ö–æ–¥: {response.status_code}")
                    
            except requests.exceptions.RequestException as e:
                print(f"  {endpoint}: –û—à–∏–±–∫–∞ - {e}")
                
def test_header_variations():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤"""
    print("\nüîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤...")
    
    variations = [
        {"Authorization": API_TOKEN},
        {"Authorization": f"Token {API_TOKEN}"},  
        {"X-Authorization": API_TOKEN},
        {"Api-Key": API_TOKEN},
        {"X-Api-Key": API_TOKEN},
    ]
    
    test_endpoint = "/api/v3/alerts"
    
    for i, headers in enumerate(variations):
        try:
            url = f"{BASE_URL}{test_endpoint}"
            response = requests.get(url, headers=headers, timeout=5)
            print(f"  –í–∞—Ä–∏–∞–Ω—Ç {i+1} {headers}: {response.status_code}")
            
        except requests.exceptions.RequestException as e:
            print(f"  –í–∞—Ä–∏–∞–Ω—Ç {i+1}: –û—à–∏–±–∫–∞ - {e}")

if __name__ == "__main__":
    test_basic_auth()
    test_header_variations()
