#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import sys
sys.path.append('/Users/vladimirmalik/Desktop/render2')

# –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –≤–∞—à–µ–≥–æ –ø—Ä–∏–º–µ—Ä–∞
test_message = """–ó–∞–≥—Ä–æ–∑–∞ –∑–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è –ë–ü–õ–ê. –ü–µ—Ä–µ–π–¥—ñ—Ç—å –≤ —É–∫—Ä–∏—Ç—Ç—è! | üõ∏ –õ—å–≤—ñ–≤ (–õ—å–≤—ñ–≤—Å—å–∫–∞ –æ–±–ª.)
–ó–∞–≥—Ä–æ–∑–∞ –∑–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è –ë–ü–õ–ê. –ü–µ—Ä–µ–π–¥—ñ—Ç—å –≤ —É–∫—Ä–∏—Ç—Ç—è! | 4—Ö –ë–ø–õ–ê –∫—É—Ä—Å–æ–º –Ω–∞ –î–æ–±—Ä–æ—Ç–≤—ñ—Ä (–º—É–ª—å—Ç–∏—Ä–µ–≥—ñ–æ–Ω–∞–ª—å–Ω–µ) | üõ∏ –ë—É—Å—å–∫ (–õ—å–≤—ñ–≤—Å—å–∫–∞ –æ–±–ª.)
–ó–∞–≥—Ä–æ–∑–∞ –∑–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è –ë–ü–õ–ê. –ü–µ—Ä–µ–π–¥—ñ—Ç—å –≤ —É–∫—Ä–∏—Ç—Ç—è!"""

print("=== –ê–ù–ê–õ–ò–ó –ü–†–û–ë–õ–ï–ú–ù–û–ì–û –°–û–û–ë–©–ï–ù–ò–Ø ===")
print("–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è:")
print(test_message)
print()

# –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Å–æ–æ–±—â–µ–Ω–∏—è
lines = test_message.split('\n')
print("=== –°–¢–†–£–ö–¢–£–†–ê –°–û–û–ë–©–ï–ù–ò–Ø –ü–û –°–¢–†–û–ö–ê–ú ===")
for i, line in enumerate(lines, 1):
    print(f"–°—Ç—Ä–æ–∫–∞ {i}: {line}")
    
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞–∂–¥—É—é —Å—Ç—Ä–æ–∫—É
    line_lower = line.lower()
    if '–±–ø–ª–∞' in line_lower or '–±–ø–ªa' in line_lower:
        print(f"  ‚Üí –°–æ–¥–µ—Ä–∂–∏—Ç —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –ë–ü–õ–ê")
    if '–∫—É—Ä—Å' in line_lower:
        print(f"  ‚Üí –°–æ–¥–µ—Ä–∂–∏—Ç —Å–ª–æ–≤–æ '–∫—É—Ä—Å'")
    if '–ª—å–≤—ñ–≤' in line_lower:
        print(f"  ‚Üí –°–æ–¥–µ—Ä–∂–∏—Ç —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –õ—å–≤–æ–≤–∞")
    if '–¥–æ–±—Ä–æ—Ç–≤—ñ—Ä' in line_lower:
        print(f"  ‚Üí –°–æ–¥–µ—Ä–∂–∏—Ç —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –î–æ–±—Ä–æ—Ç–≤–æ—Ä–∞")
    if '–º—É–ª—å—Ç–∏—Ä–µ–≥—ñ–æ–Ω–∞–ª—å–Ω–µ' in line_lower:
        print(f"  ‚Üí –ü–æ–º–µ—á–µ–Ω–æ –∫–∞–∫ –º—É–ª—å—Ç–∏—Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω–æ–µ")
    print()

print("=== –ê–ù–ê–õ–ò–ó –ü–ê–¢–¢–ï–†–ù–û–í –ü–ê–†–°–ò–ù–ì–ê ===")

# –ü—Ä–æ–≤–µ—Ä–∏–º –ø–∞—Ç—Ç–µ—Ä–Ω—ã –¥–ª—è multi-regional UAV
import re

# –ü–∞—Ç—Ç–µ—Ä–Ω—ã –∏–∑ –∫–æ–¥–∞
patterns = [
    r'(\d+)?[x—Ö]?\s*–±–ø–ª–∞\s+–∫—É—Ä—Å–æ–º?\s+–Ω–∞\s+([–ê-–Ø–Ü–á–Ñ–Å–∞-—è—ñ—ó—î—ë\'\-\s]+?)(?:\s|$|[,\.\!\?])',
    r'–±–ø–ª–∞\s+–∫—É—Ä—Å–æ–º?\s+–Ω–∞\s+([–ê-–Ø–Ü–á–Ñ–Å–∞-—è—ñ—ó—î—ë\'\-\s]+?)(?:\s|$|[,\.\!\?])',
    r'(\d+)?[x—Ö]?\s*–±–ø–ª–∞\s+–Ω–∞\s+([–ê-–Ø–Ü–á–Ñ–Å–∞-—è—ñ—ó—î—ë\'\-\s]+?)(?:\s|$|[,\.\!\?])'
]

print("–ü–æ–∏—Å–∫ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π –ø–æ –ø–∞—Ç—Ç–µ—Ä–Ω–∞–º:")
for i, pattern in enumerate(patterns, 1):
    print(f"\n–ü–∞—Ç—Ç–µ—Ä–Ω {i}: {pattern}")
    
    matches = re.finditer(pattern, test_message, re.IGNORECASE)
    found_matches = list(matches)
    
    if found_matches:
        for match in found_matches:
            if len(match.groups()) == 2:
                count_str, city_raw = match.groups()
            else:
                count_str = None
                city_raw = match.group(1)
            
            print(f"  ‚úÖ –ù–∞–π–¥–µ–Ω–æ: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ='{count_str}', –≥–æ—Ä–æ–¥='{city_raw}'")
    else:
        print(f"  ‚ùå –°–æ–≤–ø–∞–¥–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")

print()
print("=== –ü–†–û–í–ï–†–ö–ê –£–°–õ–û–í–ò–ô MULTI-REGIONAL ===")

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π –¥–ª—è multi-regional –ø–∞—Ä—Å–∏–Ω–≥–∞
region_count = 0
uav_count = 0

for line in lines:
    line_lower = line.lower().strip()
    if not line_lower:
        continue
        
    # –°—á–∏—Ç–∞–µ–º —Ä–µ–≥–∏–æ–Ω—ã
    if any(region in line_lower for region in ['—â–∏–Ω–∞:', '–æ–±–ª–∞—Å—Ç—å:', '–∫—Ä–∞–π:', '–æ–±–ª.)']):
        region_count += 1
        print(f"–ù–∞–π–¥–µ–Ω —Ä–µ–≥–∏–æ–Ω: {line}")
    
    # –°—á–∏—Ç–∞–µ–º UAV
    if '–±–ø–ª–∞' in line_lower and ('–∫—É—Ä—Å' in line_lower or '–Ω–∞ ' in line_lower):
        uav_count += 1
        print(f"–ù–∞–π–¥–µ–Ω UAV: {line}")

print(f"\n–†–µ–≥–∏–æ–Ω–æ–≤: {region_count}")
print(f"UAV —É–ø–æ–º–∏–Ω–∞–Ω–∏–π: {uav_count}")

if region_count >= 2 and uav_count >= 3:
    print("‚úÖ –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –∫—Ä–∏—Ç–µ—Ä–∏—è–º multi-regional")
else:
    print("‚ùå –ù–ï —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –∫—Ä–∏—Ç–µ—Ä–∏—è–º multi-regional")
    print("–ü—Ä–∏—á–∏–Ω–∞: –Ω—É–∂–Ω–æ –º–∏–Ω–∏–º—É–º 2 —Ä–µ–≥–∏–æ–Ω–∞ –∏ 3 UAV —É–ø–æ–º–∏–Ω–∞–Ω–∏—è")

print()
print("=== –î–ò–ê–ì–ù–û–ó –ü–†–û–ë–õ–ï–ú–´ ===")
print("–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã, –ø–æ—á–µ–º—É –î–æ–±—Ä–æ—Ç–≤—ñ—Ä –Ω–µ —Å–æ–∑–¥–∞–µ—Ç –æ—Ç–¥–µ–ª—å–Ω—É—é –º–µ—Ç–∫—É:")
print("1. –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –∫—Ä–∏—Ç–µ—Ä–∏—è–º multi-regional –ø–∞—Ä—Å–∏–Ω–≥–∞")
print("2. –ü–∞—Ç—Ç–µ—Ä–Ω '4—Ö –ë–ø–õ–ê –∫—É—Ä—Å–æ–º –Ω–∞ –î–æ–±—Ä–æ—Ç–≤—ñ—Ä' –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–µ—Ç—Å—è –∏–∑-–∑–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞")
print("3. –°–∏—Å—Ç–µ–º–∞ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —ç—Ç–æ –∫–∞–∫ –æ–±—ã—á–Ω–æ–µ —Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")
print("4. –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –æ—Ç–¥–∞–µ—Ç—Å—è –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ –õ—å–≤—ñ–≤ –∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Å–æ–æ–±—â–µ–Ω–∏—è")
