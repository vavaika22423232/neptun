#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, —á—Ç–æ –ù—ñ–∫–æ–ø–æ–ª—å (—É–∫—Ä–∞–∏–Ω—Å–∫–∏–π –≤–∞—Ä–∏–∞–Ω—Ç) –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç obstril.png –¥–ª—è –æ–±—Å—Ç—Ä–µ–ª–æ–≤
"""

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –ø–∞–ø–∫—É –≤ sys.path —á—Ç–æ–±—ã –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å app.py
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

try:
    from app import process_message
    
    def test_nikopol_processing():
        print("=== –¢–µ—Å—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π —Å –ù—ñ–∫–æ–ø–æ–ª—å ===\n")
        
        test_messages = [
            {
                'text': 'üí• –ù—ñ–∫–æ–ø–æ–ª—å (–î–Ω—ñ–ø—Ä–æ–ø–µ—Ç—Ä–æ–≤—Å—å–∫–∞ –æ–±–ª.) –ó–∞–≥—Ä–æ–∑–∞ –æ–±—Å—Ç—Ä—ñ–ª—É! –ü–µ—Ä–µ–π–¥—ñ—Ç—å –≤ —É–∫—Ä–∏—Ç—Ç—è!',
                'description': '–ù—ñ–∫–æ–ø–æ–ª—å (—É–∫—Ä–∞–∏–Ω—Å–∫–∏–π) + –æ–±—Å—Ç—Ä–µ–ª ‚Üí –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å obstril.png'
            },
            {
                'text': 'üõ∏ –ù—ñ–∫–æ–ø–æ–ª—å (–î–Ω—ñ–ø—Ä–æ–ø–µ—Ç—Ä–æ–≤—Å—å–∫–∞ –æ–±–ª.) –ó–∞–≥—Ä–æ–∑–∞ –ë–ø–õ–ê!',
                'description': '–ù—ñ–∫–æ–ø–æ–ª—å (—É–∫—Ä–∞–∏–Ω—Å–∫–∏–π) + –ë–ø–õ–ê ‚Üí –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å fpv.png'
            },
            {
                'text': 'üí• –ù–∏–∫–æ–ø–æ–ª—å (–î–Ω—ñ–ø—Ä–æ–ø–µ—Ç—Ä–æ–≤—Å—å–∫–∞ –æ–±–ª.) –ó–∞–≥—Ä–æ–∑–∞ –æ–±—Å—Ç—Ä—ñ–ª—É!',
                'description': '–ù–∏–∫–æ–ø–æ–ª—å (—Ä—É—Å—Å–∫–∏–π) + –æ–±—Å—Ç—Ä–µ–ª ‚Üí –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å obstril.png'
            }
        ]
        
        for i, test in enumerate(test_messages, 1):
            print(f"–¢–µ—Å—Ç {i}: {test['description']}")
            print(f"–°–æ–æ–±—â–µ–Ω–∏–µ: {test['text']}")
            
            try:
                result = process_message(test['text'], f"test_{i}", "2025-09-13", "test_channel")
                
                if result and len(result) > 0:
                    message_data = result[0]
                    marker_icon = message_data.get('marker_icon', '–Ω–µ –Ω–∞–π–¥–µ–Ω–æ')
                    threat_type = message_data.get('threat_type', '–Ω–µ –Ω–∞–π–¥–µ–Ω–æ')
                    place = message_data.get('place', '–Ω–µ –Ω–∞–π–¥–µ–Ω–æ')
                    
                    print(f"  –†–µ–∑—É–ª—å—Ç–∞—Ç:")
                    print(f"    –ú–µ—Å—Ç–æ: {place}")
                    print(f"    –¢–∏–ø —É–≥—Ä–æ–∑—ã: {threat_type}")
                    print(f"    –ò–∫–æ–Ω–∫–∞: {marker_icon}")
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                    if '–æ–±—Å—Ç—Ä—ñ–ª' in test['text'].lower() or '–æ–±—Å—Ç—Ä–µ–ª' in test['text'].lower():
                        if marker_icon == 'obstril.png':
                            print(f"  ‚úÖ –ü–†–ê–í–ò–õ–¨–ù–û: obstril.png –¥–ª—è –æ–±—Å—Ç—Ä–µ–ª–∞")
                        else:
                            print(f"  ‚ùå –ù–ï–ü–†–ê–í–ò–õ–¨–ù–û: –æ–∂–∏–¥–∞–ª—Å—è obstril.png, –ø–æ–ª—É—á–µ–Ω {marker_icon}")
                    elif '–±–ø–ª–∞' in test['text'].lower():
                        if marker_icon == 'fpv.png':
                            print(f"  ‚úÖ –ü–†–ê–í–ò–õ–¨–ù–û: fpv.png –¥–ª—è FPV –≥–æ—Ä–æ–¥–∞")
                        else:
                            print(f"  ‚ùå –ù–ï–ü–†–ê–í–ò–õ–¨–ù–û: –æ–∂–∏–¥–∞–ª—Å—è fpv.png –¥–ª—è FPV –≥–æ—Ä–æ–¥–∞, –ø–æ–ª—É—á–µ–Ω {marker_icon}")
                else:
                    print(f"  ‚ùå –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ")
                    
            except Exception as e:
                print(f"  ‚ùå –û–®–ò–ë–ö–ê: {e}")
            
            print()

    if __name__ == "__main__":
        test_nikopol_processing()

except ImportError as e:
    print(f"–û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
    print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ app.py –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ç–æ–π –∂–µ –ø–∞–ø–∫–µ")
