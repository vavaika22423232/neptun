#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ä—É—á–Ω–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ messages.json –Ω–∞ —Å–µ—Ä–≤–µ—Ä
"""

import requests
import json
import os
from datetime import datetime

def upload_messages_to_server():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –ª–æ–∫–∞–ª—å–Ω—ã–π messages.json –Ω–∞ —Å–µ—Ä–≤–µ—Ä"""
    
    # –ß–∏—Ç–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª
    local_file = "messages.json"
    if not os.path.exists(local_file):
        print("‚ùå –õ–æ–∫–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª messages.json –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    with open(local_file, 'r', encoding='utf-8') as f:
        messages = json.load(f)
    
    print(f"üìÑ –õ–æ–∫–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª —Å–æ–¥–µ—Ä–∂–∏—Ç {len(messages)} —Å–æ–æ–±—â–µ–Ω–∏–π")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    if messages:
        print("\nüìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è:")
        for msg in messages[-3:]:
            print(f"  ‚Ä¢ {msg.get('place', 'N/A')} - {msg.get('date', 'N/A')} - {msg.get('threat_type', 'N/A')}")
    
    # –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ª–æ–≥–∏–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    # –ü–æ—Å–∫–æ–ª—å–∫—É —É –Ω–∞—Å –Ω–µ—Ç FTP –∏–ª–∏ SSH –¥–æ—Å—Ç—É–ø–∞, —Å–æ–∑–¥–∞–¥–∏–º —Ñ–∞–π–ª –¥–ª—è —Ä—É—á–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏
    
    # –°–æ–∑–¥–∞–µ–º –∫–æ–ø–∏—é –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏
    server_copy = "messages_for_server.json"
    with open(server_copy, 'w', encoding='utf-8') as f:
        json.dump(messages, f, ensure_ascii=False, indent=2)
    
    print(f"\n‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª {server_copy} –¥–ª—è —Ä—É—á–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä")
    print("üìÅ –ó–∞–≥—Ä—É–∑–∏—Ç–µ —ç—Ç–æ—Ç —Ñ–∞–π–ª –Ω–∞ —Å–µ—Ä–≤–µ—Ä –∫–∞–∫ messages.json")
    
    return True

def check_server_data():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ"""
    server_url = "http://195.226.192.65"
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã
        endpoints = [
            "/data?timeRange=40",
            "/messages.json",
            "/api/messages"
        ]
        
        for endpoint in endpoints:
            try:
                response = requests.get(f"{server_url}{endpoint}", timeout=10)
                print(f"üîó {endpoint}: {response.status_code}")
                
                if response.status_code == 200:
                    try:
                        data = response.json()
                        if isinstance(data, list):
                            print(f"   üìä –ù–∞–π–¥–µ–Ω–æ {len(data)} —ç–ª–µ–º–µ–Ω—Ç–æ–≤")
                        elif isinstance(data, dict):
                            if 'tracks' in data:
                                print(f"   üìä –¢—Ä–µ–∫–æ–≤: {len(data.get('tracks', []))}")
                            else:
                                print(f"   üìä –ö–ª—é—á–∏: {list(data.keys())}")
                    except:
                        print(f"   üìÑ –†–∞–∑–º–µ—Ä –æ—Ç–≤–µ—Ç–∞: {len(response.text)} —Å–∏–º–≤–æ–ª–æ–≤")
                else:
                    print(f"   ‚ùå –û—à–∏–±–∫–∞: {response.text[:100]}")
            except Exception as e:
                print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞: {e}")

if __name__ == "__main__":
    print("üöÄ NEPTUN - –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö")
    print("=" * 50)
    
    print("\n1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–∫–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö...")
    upload_messages_to_server()
    
    print("\n2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ...")
    check_server_data()
    
    print("\n" + "=" * 50)
    print("üìã –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
    print("1. –ó–∞–≥—Ä—É–∑–∏—Ç–µ messages_for_server.json –Ω–∞ —Å–µ—Ä–≤–µ—Ä –∫–∞–∫ messages.json")
    print("2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –∑–∞–ø—É—â–µ–Ω daemon –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π")
    print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ–∞–π–ª—É messages.json –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ")
