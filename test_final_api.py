#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç Ukraine Alert API —Å –ø–æ–ª—É—á–µ–Ω–∏–µ–º —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
"""

import requests
import json
from datetime import datetime

API_TOKEN = "57fe8a39:7698ad50f0f15d502b280a83019bab25"
BASE_URL = "https://api.ukrainealarm.com"

def get_current_alerts():
    """–ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–∏–µ —Ç—Ä–µ–≤–æ–≥–∏"""
    print("üö® –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–∏—Ö —Ç—Ä–µ–≤–æ–≥...")
    
    headers = {"Authorization": API_TOKEN}
    
    try:
        response = requests.get(f"{BASE_URL}/api/v3/alerts", headers=headers, timeout=10)
        
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ —Ç—Ä–µ–≤–æ–≥: {len(data)}")
            
            active_alerts = []
            for alert in data:
                if alert.get("activeAlerts"):
                    active_alerts.extend(alert["activeAlerts"])
                    
                    print(f"\nüìç {alert.get('regionName', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ä–µ–≥–∏–æ–Ω')}")
                    print(f"   –¢–∏–ø: {alert.get('regionType', 'unknown')}")
                    print(f"   ID: {alert.get('regionId', 'unknown')}")
                    print(f"   –û–±–Ω–æ–≤–ª–µ–Ω–æ: {alert.get('lastUpdate', 'unknown')}")
                    
                    for active_alert in alert.get("activeAlerts", []):
                        alert_type = active_alert.get("type", "UNKNOWN")
                        last_update = active_alert.get("lastUpdate", "unknown")
                        print(f"   üî¥ {alert_type} - {last_update}")
            
            print(f"\nüìä –ò—Ç–æ–≥–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ç—Ä–µ–≤–æ–≥: {len(active_alerts)}")
            return data
            
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
            return None
            
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
        return None

def get_regions():
    """–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ä–µ–≥–∏–æ–Ω–æ–≤"""
    print("\nüèòÔ∏è –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ä–µ–≥–∏–æ–Ω–æ–≤...")
    
    headers = {"Authorization": API_TOKEN}
    
    try:
        response = requests.get(f"{BASE_URL}/api/v3/regions", headers=headers, timeout=10)
        
        if response.status_code == 200:
            data = response.json()
            
            if "states" in data:
                states = data["states"]
                print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ –æ–±–ª–∞—Å—Ç–µ–π: {len(states)}")
                
                # –ü–æ–∫–∞–∑–∞—Ç—å –ø–µ—Ä–≤—ã–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–µ–≥–∏–æ–Ω–æ–≤
                for i, state in enumerate(states[:3]):
                    print(f"\nüìç {state.get('regionName', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ–±–ª–∞—Å—Ç—å')}")
                    print(f"   ID: {state.get('regionId', 'unknown')}")
                    print(f"   –¢–∏–ø: {state.get('regionType', 'unknown')}")
                    
                    # –ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ç–µ–π (—Ä–∞–π–æ–Ω—ã)
                    children = state.get("regionChildIds", [])
                    if children:
                        print(f"   –†–∞–π–æ–Ω–æ–≤: {len(children)}")
                        if children:
                            first_child = children[0]
                            print(f"   –ü—Ä–∏–º–µ—Ä —Ä–∞–π–æ–Ω–∞: {first_child.get('regionName', 'unknown')}")
                
                return data
            else:
                print("‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö")
                return None
                
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
            return None
            
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
        return None

def get_status():
    """–ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å API"""
    print("\nüìà –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ API...")
    
    headers = {"Authorization": API_TOKEN}
    
    try:
        response = requests.get(f"{BASE_URL}/api/v3/alerts/status", headers=headers, timeout=10)
        
        if response.status_code == 200:
            data = response.json()
            last_action = data.get("lastActionIndex", 0)
            print(f"‚úÖ –ü–æ—Å–ª–µ–¥–Ω–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ: {last_action}")
            return last_action
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
            return None
            
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
        return None

if __name__ == "__main__":
    print("üá∫üá¶ Ukraine Alert API - –§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç")
    print("=" * 50)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
    status = get_status()
    regions = get_regions()
    alerts = get_current_alerts()
    
    print("\n" + "=" * 50)
    print("üéØ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
    print(f"   –°—Ç–∞—Ç—É—Å API: {'‚úÖ' if status else '‚ùå'}")
    print(f"   –†–µ–≥–∏–æ–Ω—ã: {'‚úÖ' if regions else '‚ùå'}")
    print(f"   –¢—Ä–µ–≤–æ–≥–∏: {'‚úÖ' if alerts else '‚ùå'}")
    
    if alerts and regions:
        print("\nüöÄ API –≥–æ—Ç–æ–≤ –∫ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏!")
