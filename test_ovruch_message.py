#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
Test Ovurch BPLA message parsing to ensure it creates marker in Ovurch, not Zhytomyr
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from app import process_message

def test_ovruch_message():
    print("=== –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –û–≤—Ä—É—á ===")
    
    # –¢–µ—Å—Ç–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –û–≤—Ä—É—á (–ñ–∏—Ç–æ–º–∏—Ä—Å—å–∫–∞ –æ–±–ª.)
    test_message = "üõ∏ –û–≤—Ä—É—á (–ñ–∏—Ç–æ–º–∏—Ä—Å—å–∫–∞ –æ–±–ª.)\n–ó–∞–≥—Ä–æ–∑–∞ –∑–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è –ë–ü–õ–ê. –ü–µ—Ä–µ–π–¥—ñ—Ç—å –≤ —É–∫—Ä–∏—Ç—Ç—è!"
    
    print(f"–í—Ö—ñ–¥–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:\n{test_message}")
    print("\n" + "="*50)
    
    result = process_message(test_message, "test_123", "2025-09-08 12:00:00", "test_channel")
    
    print(f"\n–†–µ–∑—É–ª—å—Ç–∞—Ç –ø–∞—Ä—Å–∏–Ω–≥—É:")
    print(f"- –¢–∏–ø —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É: {type(result)}")
    print(f"- –†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
    
    if result and isinstance(result, list):
        print(f"- –ö—ñ–ª—å–∫—ñ—Å—Ç—å –º–∞—Ä–∫–µ—Ä—ñ–≤: {len(result)}")
        
        for i, marker in enumerate(result, 1):
            print(f"\n–ú–∞—Ä–∫–µ—Ä {i}:")
            print(f"  - –ú—ñ—Å—Ü–µ: {marker.get('place', 'N/A')}")
            print(f"  - –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–∏: ({marker.get('lat', 'N/A')}, {marker.get('lng', 'N/A')})")
            print(f"  - –¢–∏–ø –∑–∞–≥—Ä–æ–∑–∏: {marker.get('threat_type', 'N/A')}")
            print(f"  - –Ü–∫–æ–Ω–∫–∞: {marker.get('marker_icon', 'N/A')}")
            print(f"  - –î–∂–µ—Ä–µ–ª–æ: {marker.get('source_match', 'N/A')}")
                
            # –ü–µ—Ä–µ–≤—ñ—Ä–∏–º–æ, —â–æ —Ü–µ —Å–∞–º–µ –û–≤—Ä—É—á, –∞ –Ω–µ –ñ–∏—Ç–æ–º–∏—Ä
            place_name = marker.get('place', '').lower()
            if '–æ–≤—Ä—É—á' in place_name:
                print(f"  ‚úÖ –ü–†–ê–í–ò–õ–¨–ù–û: –ú–∞—Ä–∫–µ—Ä —Å—Ç–≤–æ—Ä–µ–Ω–æ –¥–ª—è –û–≤—Ä—É—á–∞")
                # –ü–µ—Ä–µ–≤—ñ—Ä–∏–º–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∏ –û–≤—Ä—É—á–∞
                if marker.get('lat') == 51.3244 and marker.get('lng') == 28.8006:
                    print(f"  ‚úÖ –ö–û–û–†–î–ò–ù–ê–¢–ò: –ü—Ä–∞–≤–∏–ª—å–Ω—ñ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∏ –û–≤—Ä—É—á–∞")
                else:
                    print(f"  ‚ö†Ô∏è  –ö–û–û–†–î–ò–ù–ê–¢–ò: –ù–µ–æ—á—ñ–∫—É–≤–∞–Ω—ñ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∏")
            elif '–∂–∏—Ç–æ–º–∏—Ä' in place_name:
                print(f"  ‚ùå –ü–û–ú–ò–õ–ö–ê: –ú–∞—Ä–∫–µ—Ä —Å—Ç–≤–æ—Ä–µ–Ω–æ –¥–ª—è –ñ–∏—Ç–æ–º–∏—Ä–∞ –∑–∞–º—ñ—Å—Ç—å –û–≤—Ä—É—á–∞")
            else:
                print(f"  ‚ö†Ô∏è  –£–í–ê–ì–ê: –ù–µ–æ—á—ñ–∫—É–≤–∞–Ω–µ –º—ñ—Å—Ç–æ: {place_name}")
    else:
        print("‚ùå –ü–û–ú–ò–õ–ö–ê: –ú–∞—Ä–∫–µ—Ä–∏ –Ω–µ —Å—Ç–≤–æ—Ä–µ–Ω—ñ –∞–±–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç")
    
    print("\n" + "="*50)
    return result

if __name__ == "__main__":
    test_ovruch_message()
