#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
Test multi-region UAV messages to check why only Chernihiv marker is created
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from app import process_message

def test_multi_region_uav():
    print("=== –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –±–∞–≥–∞—Ç–æ—Ä–µ–≥—ñ–æ–Ω–∞–ª—å–Ω–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –ë–ü–õ–ê ===")
    
    # –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ 3 —Ä—ñ–∑–Ω–∏—Ö —Ä–µ–≥—ñ–æ–Ω—ñ–≤
    test_messages = [
        "üõµ –í–æ—Ä–æ–∂—ñ —É–¥–∞—Ä–Ω—ñ –ë–ø–õ–ê –Ω–∞ —Å—Ö–æ–¥—ñ –ë–æ–≥–æ–¥—É—Ö—ñ–≤—Å—å–∫–æ–≥–æ —Ä–∞–π–æ–Ω—É (–•–∞—Ä–∫—ñ–≤—â–∏–Ω–∞), –∫—É—Ä—Å - —Å—Ö—ñ–¥–Ω–∏–π/–ø—ñ–≤–¥–µ–Ω–Ω–∏–π.",
        "üõµ –ë–ø–õ–ê –Ω–∞ –∑–∞—Ö–æ–¥—ñ –≤—ñ–¥ –•–∞—Ä–∫–æ–≤–∞, –∫—É—Ä—Å - –ø—ñ–≤–¥–µ–Ω–Ω–æ-—Å—Ö—ñ–¥–Ω–∏–π.", 
        "üõµ –í–æ—Ä–æ–∂—ñ —É–¥–∞—Ä–Ω—ñ –ë–ø–õ–ê –Ω–∞ –ø—ñ–≤–Ω–æ—á—ñ —Ç–∞ –ø—ñ–≤–Ω—ñ—á–Ω–æ–º—É —Å—Ö–æ–¥—ñ –ß–µ—Ä–Ω—ñ–≥—ñ–≤—â–∏–Ω–∏, –∫—É—Ä—Å - –ø—ñ–≤–¥–µ–Ω–Ω–æ-–∑–∞—Ö—ñ–¥–Ω–∏–π."
    ]
    
    # –¢–µ—Å—Ç—É—î–º–æ –∫–æ–∂–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –æ–∫—Ä–µ–º–æ
    print("\n=== –û–ö–†–ï–ú–Ü –¢–ï–°–¢–ò ===")
    for i, message in enumerate(test_messages, 1):
        print(f"\nüìç –¢–µ—Å—Ç {i}:")
        print(f"–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: {message}")
        
        result = process_message(message, f"test_{i}", "2025-09-08 12:00:00", "test_channel")
        
        if result and isinstance(result, list):
            print(f"  - –ö—ñ–ª—å–∫—ñ—Å—Ç—å –º–∞—Ä–∫–µ—Ä—ñ–≤: {len(result)}")
            for j, marker in enumerate(result, 1):
                place = marker.get('place', 'N/A')
                coords = (marker.get('lat'), marker.get('lng'))
                print(f"    –ú–∞—Ä–∫–µ—Ä {j}: {place} {coords}")
        else:
            print(f"  ‚ùå –ú–∞—Ä–∫–µ—Ä–∏ –Ω–µ —Å—Ç–≤–æ—Ä–µ–Ω—ñ")
    
    # –¢–µ—Å—Ç—É—î–º–æ –æ–±'—î–¥–Ω–∞–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è (—è–∫ –ø—Ä–∏—Ö–æ–¥–∏—Ç—å –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞)
    print(f"\n=== –û–ë'–Ñ–î–ù–ê–ù–ò–ô –¢–ï–°–¢ ===")
    combined_message = "\n".join(test_messages)
    print(f"–û–±'—î–¥–Ω–∞–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:\n{combined_message}")
    
    result = process_message(combined_message, "test_combined", "2025-09-08 12:00:00", "test_channel")
    
    if result and isinstance(result, list):
        print(f"\n  - –ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –º–∞—Ä–∫–µ—Ä—ñ–≤: {len(result)}")
        for i, marker in enumerate(result, 1):
            place = marker.get('place', 'N/A')
            coords = (marker.get('lat'), marker.get('lng'))
            source = marker.get('source_match', 'N/A')
            print(f"    –ú–∞—Ä–∫–µ—Ä {i}: {place} {coords} (–¥–∂–µ—Ä–µ–ª–æ: {source})")
            
        # –ê–Ω–∞–ª—ñ–∑ –ø–æ —Ä–µ–≥—ñ–æ–Ω–∞—Ö
        regions_found = {}
        for marker in result:
            place = marker.get('place', '')
            if '—Ö–∞—Ä–∫—ñ–≤' in place.lower() or '–±–æ–≥–æ–¥—É—Ö—ñ–≤' in place.lower():
                regions_found['–•–∞—Ä–∫—ñ–≤—â–∏–Ω–∞'] = place
            elif '—á–µ—Ä–Ω—ñ–≥—ñ–≤' in place.lower() or '—á–µ—Ä–Ω—ñ–≥—ñ–≤—â–∏–Ω–∞' in place.lower():
                regions_found['–ß–µ—Ä–Ω—ñ–≥—ñ–≤—â–∏–Ω–∞'] = place
                
        print(f"\n  üìä –ê–Ω–∞–ª—ñ–∑ –ø–æ —Ä–µ–≥—ñ–æ–Ω–∞—Ö:")
        expected_regions = ['–•–∞—Ä–∫—ñ–≤—â–∏–Ω–∞', '–ß–µ—Ä–Ω—ñ–≥—ñ–≤—â–∏–Ω–∞']
        for region in expected_regions:
            if region in regions_found:
                print(f"    ‚úÖ {region}: {regions_found[region]}")
            else:
                print(f"    ‚ùå {region}: –ù–ï –ó–ù–ê–ô–î–ï–ù–û")
                
        if len(regions_found) < 2:
            print(f"\n  ‚ö†Ô∏è  –ü–†–û–ë–õ–ï–ú–ê: –û—á—ñ–∫—É–≤–∞–ª–æ—Å—è –º—ñ–Ω—ñ–º—É–º 2 —Ä–µ–≥—ñ–æ–Ω–∏, –∑–Ω–∞–π–¥–µ–Ω–æ {len(regions_found)}")
    else:
        print(f"  ‚ùå –ú–∞—Ä–∫–µ—Ä–∏ –Ω–µ —Å—Ç–≤–æ—Ä–µ–Ω—ñ")

if __name__ == "__main__":
    test_multi_region_uav()
