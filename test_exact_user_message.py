#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
Test the exact user message that was problematic
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from app import process_message

def test_exact_user_message():
    print("=== –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è —Ç–æ—á–Ω–æ–≥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ ===")
    
    # –¢–æ—á–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    exact_message = """üõµ –í–æ—Ä–æ–∂—ñ —É–¥–∞—Ä–Ω—ñ –ë–ø–õ–ê –Ω–∞ —Å—Ö–æ–¥—ñ –ë–æ–≥–æ–¥—É—Ö—ñ–≤—Å—å–∫–æ–≥–æ —Ä–∞–π–æ–Ω—É (–•–∞—Ä–∫—ñ–≤—â–∏–Ω–∞), –∫—É—Ä—Å - —Å—Ö—ñ–¥–Ω–∏–π/–ø—ñ–≤–¥–µ–Ω–Ω–∏–π.
üõµ –ë–ø–õ–ê –Ω–∞ –∑–∞—Ö–æ–¥—ñ –≤—ñ–¥ –•–∞—Ä–∫–æ–≤–∞, –∫—É—Ä—Å - –ø—ñ–≤–¥–µ–Ω–Ω–æ-—Å—Ö—ñ–¥–Ω–∏–π.
üõµ –í–æ—Ä–æ–∂—ñ —É–¥–∞—Ä–Ω—ñ –ë–ø–õ–ê –Ω–∞ –ø—ñ–≤–Ω–æ—á—ñ —Ç–∞ –ø—ñ–≤–Ω—ñ—á–Ω–æ–º—É —Å—Ö–æ–¥—ñ –ß–µ—Ä–Ω—ñ–≥—ñ–≤—â–∏–Ω–∏, –∫—É—Ä—Å - –ø—ñ–≤–¥–µ–Ω–Ω–æ-–∑–∞—Ö—ñ–¥–Ω–∏–π."""
    
    print(f"–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:\n{exact_message}")
    print("\n" + "="*60)
    
    result = process_message(exact_message, "exact_test", "2025-09-08 12:00:00", "test_channel")
    
    if result and isinstance(result, list):
        print(f"\n‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç: {len(result)} –º–∞—Ä–∫–µ—Ä—ñ–≤ —Å—Ç–≤–æ—Ä–µ–Ω–æ")
        
        regions_found = {}
        for i, marker in enumerate(result, 1):
            place = marker.get('place', 'N/A')
            coords = (marker.get('lat'), marker.get('lng'))
            source = marker.get('source_match', 'N/A')
            
            print(f"\n–ú–∞—Ä–∫–µ—Ä {i}:")
            print(f"  üìç –ú—ñ—Å—Ü–µ: {place}")
            print(f"  üó∫Ô∏è  –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–∏: {coords}")
            print(f"  üîç –î–∂–µ—Ä–µ–ª–æ: {source}")
            
            # –ö–ª–∞—Å–∏—Ñ—ñ–∫–∞—Ü—ñ—è –∑–∞ —Ä–µ–≥—ñ–æ–Ω–∞–º–∏
            place_lower = place.lower()
            if '—Ö–∞—Ä–∫—ñ–≤' in place_lower or '–±–æ–≥–æ–¥—É—Ö—ñ–≤' in place_lower:
                regions_found['–•–∞—Ä–∫—ñ–≤—â–∏–Ω–∞'] = place
            elif '—á–µ—Ä–Ω—ñ–≥—ñ–≤' in place_lower:
                regions_found['–ß–µ—Ä–Ω—ñ–≥—ñ–≤—â–∏–Ω–∞'] = place
        
        print(f"\n" + "="*60)
        print("üìä –ü–Ü–î–°–£–ú–û–ö –ü–û –†–ï–ì–Ü–û–ù–ê–•:")
        
        expected_regions = ['–•–∞—Ä–∫—ñ–≤—â–∏–Ω–∞', '–ß–µ—Ä–Ω—ñ–≥—ñ–≤—â–∏–Ω–∞']
        all_found = True
        
        for region in expected_regions:
            if region in regions_found:
                print(f"  ‚úÖ {region}: {regions_found[region]}")
            else:
                print(f"  ‚ùå {region}: –ù–ï –ó–ù–ê–ô–î–ï–ù–û")
                all_found = False
        
        if all_found:
            print(f"\nüéâ –£–°–ü–Ü–•: –í—Å—ñ —Ä–µ–≥—ñ–æ–Ω–∏ –∑–Ω–∞–π–¥–µ–Ω—ñ! –ü—Ä–æ–±–ª–µ–º—É –≤–∏—Ä—ñ—à–µ–Ω–æ.")
        else:
            print(f"\n‚ö†Ô∏è  –ü–†–û–ë–õ–ï–ú–ê: –ù–µ –≤—Å—ñ —Ä–µ–≥—ñ–æ–Ω–∏ –∑–Ω–∞–π–¥–µ–Ω—ñ.")
            
        if len(result) >= 2:
            print(f"üéØ –ú–ê–†–ö–ï–†–Ü–í: {len(result)} (–º—ñ–Ω—ñ–º—É–º 2 –æ—á—ñ–∫—É–≤–∞–ª–æ—Å—è)")
        else:
            print(f"‚ö†Ô∏è  –ú–ê–†–ö–ï–†–Ü–í: {len(result)} (–æ—á—ñ–∫—É–≤–∞–ª–æ—Å—è –º—ñ–Ω—ñ–º—É–º 2)")
            
    else:
        print("‚ùå –ü–û–ú–ò–õ–ö–ê: –ú–∞—Ä–∫–µ—Ä–∏ –Ω–µ —Å—Ç–≤–æ—Ä–µ–Ω—ñ")

if __name__ == "__main__":
    test_exact_user_message()
