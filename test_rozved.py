#!/usr/bin/env python3

"""
Test reconnaissance UAV detection
"""

def test_rozved_logic():
    """Test the logic that should detect reconnaissance UAVs"""
    
    def test_classify(th: str):
        """Simplified version of the classify function for testing"""
        l = th.lower()
        # Recon / —Ä–æ–∑–≤—ñ–¥ –¥—Ä–æ–Ω–∏ -> use pvo icon (rozved.png) per user request
        if '—Ä–æ–∑–≤—ñ–¥' in l or '—Ä–æ–∑–≤—ñ–¥—É–≤–∞–ª—å' in l or '—Ä–∞–∑–≤–µ–¥' in l:
            return 'rozved', 'rozved.png'
        # Default fallback
        return 'default', 'default.png'
    
    test_messages = [
        "üëÅÔ∏è –•–æ—Ç—ñ–Ω—å (–°—É–º—Å—å–∫–∞ –æ–±–ª.)\n–ê–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å —Ä–æ–∑–≤—ñ–¥—É–≤–∞–ª—å–Ω–∏—Ö –ë–ü–õ–ê. –ú–æ–∂–ª–∏–≤–∞ —Ä–æ–±–æ—Ç–∞ –ü–ü–û.",
        "üëÅÔ∏è –°—É–º–∏ (–°—É–º—Å—å–∫–∞ –æ–±–ª.)\n–ê–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å —Ä–æ–∑–≤—ñ–¥—É–≤–∞–ª—å–Ω–∏—Ö –ë–ü–õ–ê. –ú–æ–∂–ª–∏–≤–∞ —Ä–æ–±–æ—Ç–∞ –ü–ü–û.",
        "–ê–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å —Ä–æ–∑–≤—ñ–¥—É–≤–∞–ª—å–Ω–∏—Ö –ë–ø–õ–ê —É –Ω–∞–ø—Ä—è–º–∫—É –ß–µ—Ä–Ω—ñ–≥–æ–≤–∞",
        "–†–æ–∑–≤—ñ–¥—É–≤–∞–ª—å–Ω–∏–π –¥—Ä–æ–Ω –∑–∞—Ñ—ñ–∫—Å–æ–≤–∞–Ω–∏–π –Ω–∞–¥ –ö–∏—ó–≤—â–∏–Ω–æ—é",
        "—Ä–æ–∑–≤—ñ–¥ –ë–ø–õ–ê –Ω–∞–¥ –æ–±–ª–∞—Å—Ç—é"
    ]
    
    print("üîç Testing reconnaissance UAV detection logic...")
    print("-" * 60)
    
    for i, message in enumerate(test_messages, 1):
        print(f"Test {i}: {message[:50]}...")
        threat_type, icon_file = test_classify(message)
        print(f"   Result: threat_type='{threat_type}', icon='{icon_file}'")
        
        if threat_type == 'rozved':
            print(f"   ‚úÖ Correctly detected as reconnaissance UAV")
        else:
            print(f"   ‚ùå Expected 'rozved', got '{threat_type}'")
        print()

def test_frontend_support():
    """Test if frontend has rozved support"""
    print("üñ•Ô∏è Testing frontend rozved support...")
    print("-" * 60)
    
    # Check if rozved.png files exist
    import os
    
    files_to_check = [
        "static/rozved.png",
        "static/placeholders/rozved.png"
    ]
    
    for file_path in files_to_check:
        if os.path.exists(file_path):
            print(f"   ‚úÖ {file_path} exists")
            # Check file info
            result = os.popen(f'file "{file_path}"').read().strip()
            print(f"      {result}")
        else:
            print(f"   ‚ùå {file_path} missing")
        
    print()

if __name__ == "__main__":
    test_rozved_logic()
    test_frontend_support()
