#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import sys
sys.path.append('/Users/vladimirmalik/Desktop/render2')

from app import CITY_COORDS
import re

# –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –≤–∞—à–µ–≥–æ –ø—Ä–∏–º–µ—Ä–∞
test_message = """–ó–∞–≥—Ä–æ–∑–∞ –∑–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è –ë–ü–õ–ê. –ü–µ—Ä–µ–π–¥—ñ—Ç—å –≤ —É–∫—Ä–∏—Ç—Ç—è! | üõ∏ –õ—å–≤—ñ–≤ (–õ—å–≤—ñ–≤—Å—å–∫–∞ –æ–±–ª.)
–ó–∞–≥—Ä–æ–∑–∞ –∑–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è –ë–ü–õ–ê. –ü–µ—Ä–µ–π–¥—ñ—Ç—å –≤ —É–∫—Ä–∏—Ç—Ç—è! | 4—Ö –ë–ø–õ–ê –∫—É—Ä—Å–æ–º –Ω–∞ –î–æ–±—Ä–æ—Ç–≤—ñ—Ä (–º—É–ª—å—Ç–∏—Ä–µ–≥—ñ–æ–Ω–∞–ª—å–Ω–µ) | üõ∏ –ë—É—Å—å–∫ (–õ—å–≤—ñ–≤—Å—å–∫–∞ –æ–±–ª.)
–ó–∞–≥—Ä–æ–∑–∞ –∑–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è –ë–ü–õ–ê. –ü–µ—Ä–µ–π–¥—ñ—Ç—å –≤ —É–∫—Ä–∏—Ç—Ç—è!"""

print("=== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–ê–¢–¢–ï–†–ù–û–í UAV –ö–£–†–°–û–í ===")
print("–°–æ–æ–±—â–µ–Ω–∏–µ:")
print(test_message)
print()

# –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–∞—Ç—Ç–µ—Ä–Ω—ã UAV –∫—É—Ä—Å–æ–≤
patterns = [
    r'(\d+)?[x—Ö]?\s*–±–ø–ª–∞\s+–∫—É—Ä—Å–æ–º?\s+–Ω–∞\s+([–ê-–Ø–Ü–á–Ñ–Å–∞-—è—ñ—ó—î—ë\'\-\s]+?)(?:\s|[,\.\!\?\|\(])',
    r'–±–ø–ª–∞\s+–∫—É—Ä—Å–æ–º?\s+–Ω–∞\s+([–ê-–Ø–Ü–á–Ñ–Å–∞-—è—ñ—ó—î—ë\'\-\s]+?)(?:\s|[,\.\!\?\|\(])',
    r'(\d+)?[x—Ö]?\s*–±–ø–ª–∞\s+–Ω–∞\s+([–ê-–Ø–Ü–á–Ñ–Å–∞-—è—ñ—ó—î—ë\'\-\s]+?)(?:\s|[,\.\!\?\|\(])'
]

print("=== –†–ï–ó–£–õ–¨–¢–ê–¢ –ü–û–ò–°–ö–ê –ü–ê–¢–¢–ï–†–ù–û–í ===")
found_courses = []

for i, pattern in enumerate(patterns, 1):
    print(f"\n–ü–∞—Ç—Ç–µ—Ä–Ω {i}: {pattern}")
    
    matches = re.finditer(pattern, test_message, re.IGNORECASE)
    matches_list = list(matches)
    
    if matches_list:
        for match in matches_list:
            if len(match.groups()) == 2:
                count_str, city_raw = match.groups()
            else:
                count_str = None
                city_raw = match.group(1)
            
            # –û—á–∏—â–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞
            city_clean = city_raw.strip()
            city_norm = city_clean.lower()
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
            if city_norm in CITY_COORDS:
                coords = CITY_COORDS[city_norm]
                count = int(count_str) if count_str and count_str.isdigit() else 1
                
                found_courses.append({
                    'city': city_clean,
                    'coords': coords,
                    'count': count,
                    'pattern': i
                })
                
                print(f"  ‚úÖ –ù–∞–π–¥–µ–Ω–æ: {city_clean} ({count}x) -> {coords}")
            else:
                print(f"  ‚ùå –ù–∞–π–¥–µ–Ω–æ '{city_clean}', –Ω–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç")
    else:
        print(f"  ‚ùå –°–æ–≤–ø–∞–¥–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")

print(f"\n=== –ò–¢–û–ì–û –ù–ê–ô–î–ï–ù–û UAV –ö–£–†–°–û–í: {len(found_courses)} ===")

if found_courses:
    print("\n–í—Å–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ UAV –∫—É—Ä—Å—ã:")
    for course in found_courses:
        print(f"  ‚Ä¢ {course['city']}: {course['coords']} ({course['count']}x –ë–ø–õ–ê)")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –î–æ–±—Ä–æ—Ç–≤—ñ—Ä
    dobrotvor_courses = [c for c in found_courses if '–¥–æ–±—Ä–æ—Ç–≤—ñ—Ä' in c['city'].lower()]
    
    print(f"\n=== –ü–†–û–í–ï–†–ö–ê –î–û–ë–†–û–¢–í–û–†–ê ===")
    if dobrotvor_courses:
        for course in dobrotvor_courses:
            print(f"‚úÖ –î–æ–±—Ä–æ—Ç–≤—ñ—Ä –Ω–∞–π–¥–µ–Ω: {course['coords']} ({course['count']}x –ë–ø–õ–ê)")
        print("\nüéâ –ü–†–û–ë–õ–ï–ú–ê –†–ï–®–ï–ù–ê!")
        print("–°–∏—Å—Ç–µ–º–∞ —Ç–µ–ø–µ—Ä—å –¥–æ–ª–∂–Ω–∞ —Å–æ–∑–¥–∞—Ç—å –æ—Ç–¥–µ–ª—å–Ω—É—é –º–µ—Ç–∫—É –¥–ª—è –î–æ–±—Ä–æ—Ç–≤–æ—Ä–∞")
        print("–≤ –¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –∫ –º–µ—Ç–∫–∞–º –õ—å–≤–æ–≤–∞ –∏ –ë—É—Å—å–∫–∞ –∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Å–æ–æ–±—â–µ–Ω–∏—è")
    else:
        print("‚ùå –î–æ–±—Ä–æ—Ç–≤—ñ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ UAV –∫—É—Ä—Å–∞—Ö")
        
else:
    print("‚ùå UAV –∫—É—Ä—Å—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")

print("\n=== –û–ñ–ò–î–ê–ï–ú–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢ ===")
print("–ü–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º–∞ –¥–æ–ª–∂–Ω–∞ —Å–æ–∑–¥–∞–≤–∞—Ç—å:")
print("1. –û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç–∫–∏ –∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Å–æ–æ–±—â–µ–Ω–∏—è (–õ—å–≤–æ–≤, –ë—É—Å—å–∫)")
print("2. –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–∫–∏ UAV –∫—É—Ä—Å–æ–≤ (–î–æ–±—Ä–æ—Ç–≤—ñ—Ä)")
print("3. –í—Å–µ–≥–æ –º–µ—Ç–æ–∫: –±–æ–ª—å—à–µ 1 (–≤–º–µ—Å—Ç–æ —Ç–æ–ª—å–∫–æ –õ—å–≤–æ–≤–∞)")

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –î–æ–±—Ä–æ—Ç–≤—ñ—Ä –µ—Å—Ç—å –≤ –±–∞–∑–µ
print(f"\n=== –ü–†–û–í–ï–†–ö–ê –ë–ê–ó–´ –î–ê–ù–ù–´–• ===")
if '–¥–æ–±—Ä–æ—Ç–≤—ñ—Ä' in CITY_COORDS:
    coords = CITY_COORDS['–¥–æ–±—Ä–æ—Ç–≤—ñ—Ä']
    print(f"‚úÖ –î–æ–±—Ä–æ—Ç–≤—ñ—Ä –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {coords}")
else:
    print("‚ùå –î–æ–±—Ä–æ—Ç–≤—ñ—Ä –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
