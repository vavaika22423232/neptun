#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
Debug complex multi-regional message by testing individual segments
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from app import process_message

def test_message_segments():
    print("=== –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –æ–∫—Ä–µ–º–∏—Ö —Å–µ–≥–º–µ–Ω—Ç—ñ–≤ —Å–∫–ª–∞–¥–Ω–æ–≥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è ===")
    
    # –†–æ–∑–¥—ñ–ª–∏–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–∞ –ª–æ–≥—ñ—á–Ω—ñ —á–∞—Å—Ç–∏–Ω–∏
    segments = [
        "—á–µ—Ä–Ω—ñ–≥—ñ–≤—â–∏–Ω–∞ (–Ω–æ–≤–≥–æ—Ä–æ–¥-—Å—ñ–≤–µ—Ä—Å—å–∫–∏–π —Ä-–Ω) —Ç–∞ –æ–¥–µ—â–∏–Ω–∞ - –∑–∞–≥—Ä–æ–∑–∞ –∑–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è –≤–æ—Ä–æ–≥–æ–º —É–¥–∞—Ä–Ω–∏—Ö –±–ø–ª–∞.",
        "–æ–¥–µ—â–∏–Ω–∞ - —à–∞—Ö–µ–¥–∏ –Ω–∞ –≤–∏–ª–∫–æ–≤–æ",
        "–≥—Ä—É–ø–∞ 8—Ö –±–ø–ª–∞ —É –Ω–∞–ø—Ä—è–º–∫—É —ñ–∑–º–∞—ó–ª—å—Å—å–∫–æ–≥–æ —Ä–∞–π–æ–Ω—É –æ–¥–µ—â–∏–Ω–∏, –≤–∏–ª–∫–æ–≤–µ.",
        # –î–æ–¥–∞—Ç–∫–æ–≤—ñ —Ç–µ—Å—Ç–∏
        "—á–µ—Ä–Ω—ñ–≥—ñ–≤—â–∏–Ω–∞ (–Ω–æ–≤–≥–æ—Ä–æ–¥-—Å—ñ–≤–µ—Ä—Å—å–∫–∏–π —Ä-–Ω) - –±–ø–ª–∞",
        "–Ω–æ–≤–≥–æ—Ä–æ–¥-—Å—ñ–≤–µ—Ä—Å—å–∫–∏–π —Ä-–Ω - –±–ø–ª–∞"
    ]
    
    for i, segment in enumerate(segments, 1):
        print(f"\nüìç –°–µ–≥–º–µ–Ω—Ç {i}: '{segment}'")
        
        result = process_message(segment, f"test_segment_{i}", "2025-09-08 12:00:00", "test_channel")
        
        if result and isinstance(result, list):
            print(f"  ‚úÖ –ú–∞—Ä–∫–µ—Ä—ñ–≤: {len(result)}")
            for j, marker in enumerate(result, 1):
                place = marker.get('place', 'N/A')
                coords = (marker.get('lat'), marker.get('lng'))
                source = marker.get('source_match', 'N/A')
                print(f"    {j}. {place} {coords} ({source})")
        else:
            print(f"  ‚ùå –ú–∞—Ä–∫–µ—Ä–∏ –Ω–µ —Å—Ç–≤–æ—Ä–µ–Ω—ñ")
    
    # –¢–µ—Å—Ç pipe-separated –æ–±—Ä–æ–±–∫–∏
    print(f"\n" + "="*60)
    print("üìç –¢–µ—Å—Ç pipe-separated –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:")
    
    pipe_message = "–æ–¥–µ—â–∏–Ω–∞ - —à–∞—Ö–µ–¥–∏ –Ω–∞ –≤–∏–ª–∫–æ–≤–æ | –≥—Ä—É–ø–∞ 8—Ö –±–ø–ª–∞ —É –Ω–∞–ø—Ä—è–º–∫—É —ñ–∑–º–∞—ó–ª—å—Å—å–∫–æ–≥–æ —Ä–∞–π–æ–Ω—É –æ–¥–µ—â–∏–Ω–∏, –≤–∏–ª–∫–æ–≤–µ."
    print(f"–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: {pipe_message}")
    
    result = process_message(pipe_message, "test_pipe", "2025-09-08 12:00:00", "test_channel")
    
    if result and isinstance(result, list):
        print(f"  ‚úÖ –ú–∞—Ä–∫–µ—Ä—ñ–≤: {len(result)}")
        for j, marker in enumerate(result, 1):
            place = marker.get('place', 'N/A')
            coords = (marker.get('lat'), marker.get('lng'))
            source = marker.get('source_match', 'N/A')
            print(f"    {j}. {place} {coords} ({source})")
    else:
        print(f"  ‚ùå –ú–∞—Ä–∫–µ—Ä–∏ –Ω–µ —Å—Ç–≤–æ—Ä–µ–Ω—ñ")

if __name__ == "__main__":
    test_message_segments()
