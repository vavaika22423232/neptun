#!/usr/bin/env python3
import sys
sys.path.append('.')
import app

# Test simple district message (should hit early raion_oblast processing)
simple_district = 'üõ∏ –ö–æ–Ω–æ—Ç–æ–ø—Å—å–∫–∏–π —Ä–∞–π–æ–Ω (–°—É–º—Å—å–∫–∞ –æ–±–ª.)\n–ö—É—Ä—Å –ë–ü–õ–ê. –ü—Ä—è–º—É–π—Ç–µ –≤ —É–∫—Ä–∏—Ç—Ç—è!'

print("=== SIMPLE DISTRICT TEST ===")
print(f"Message: {repr(simple_district)}")

result = app.process_message(simple_district, "test_simple", "2025-01-01 12:00:00", "test_channel")

if result and len(result) > 0:
    place = result[0].get('place', '')
    coords = (result[0].get('lat'), result[0].get('lng'))
    source_match = result[0].get('source_match', 'unknown')
    
    print(f"Place: {place}")
    print(f"Coordinates: {coords}")
    print(f"Source match: {source_match}")
    
    # Check if this hit raion_oblast_combo
    if source_match in ['raion_oblast_combo', 'raion_oblast_combo_early']:
        print("‚úÖ SUCCESS: Hit early raion_oblast processing!")
    else:
        print("‚ùå FAILED: Did not hit early raion_oblast processing")
else:
    print("‚ùå FAILED: No result returned!")

print(f"\n=== RAION_FALLBACK CHECK ===")
if hasattr(app, 'RAION_FALLBACK'):
    konot_coords = app.RAION_FALLBACK.get('–∫–æ–Ω–æ—Ç–æ–ø—Å—å–∫–∏–π')
    print(f"'–∫–æ–Ω–æ—Ç–æ–ø—Å—å–∫–∏–π' in RAION_FALLBACK: {konot_coords}")
    
    sumy_coords = app.RAION_FALLBACK.get('—Å—É–º—Å—å–∫–∏–π')  
    print(f"'—Å—É–º—Å—å–∫–∏–π' in RAION_FALLBACK: {sumy_coords}")
else:
    print("RAION_FALLBACK not found")
