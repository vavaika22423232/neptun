/**
 * JS SVG MARKERS - –ü–æ–ª–Ω–∞—è –∑–∞–º–µ–Ω–∞ PNG –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –Ω–∞ –≤–µ–∫—Ç–æ—Ä–Ω—ã–µ SVG
 * –≠–∫–æ–Ω–æ–º–∏—è —Ç—Ä–∞—Ñ–∏–∫–∞: 256KB PNG ‚Üí 15KB JS = 94% —ç–∫–æ–Ω–æ–º–∏–∏
 * –ö–∞–∂–¥–∞—è –∏–∫–æ–Ω–∫–∞ —Ç–æ—á–Ω–æ –≤–æ—Å—Å–æ–∑–¥–∞–Ω–∞ –≤ SVG —Ñ–æ—Ä–º–∞—Ç–µ
 */

const SVGMarkers = {
    // –ë–∞–∑–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    config: {
        size: 32,
        strokeWidth: 1.5,
        colors: {
            // –¶–≤–µ—Ç–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø—Ä–∏–±–ª–∏–∂–µ–Ω—ã –∫ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–º PNG
            shahed: '#FF3333',      // –Ø—Ä–∫–æ-–∫—Ä–∞—Å–Ω—ã–π –¥–ª—è –®–∞—Ö–µ–¥–æ–≤
            avia: '#FF6600',        // –û—Ä–∞–Ω–∂–µ–≤–æ-–∫—Ä–∞—Å–Ω—ã–π –¥–ª—è –∞–≤–∏–∞—Ü–∏–∏
            raketa: '#CC0000',      // –¢–µ–º–Ω–æ-–∫—Ä–∞—Å–Ω—ã–π –¥–ª—è —Ä–∞–∫–µ—Ç
            artillery: '#990033',   // –¢–µ–º–Ω–æ-–±–æ—Ä–¥–æ–≤—ã–π –¥–ª—è –∞—Ä—Ç–∏–ª–ª–µ—Ä–∏–∏
            mlrs: '#660033',        // –§–∏–æ–ª–µ—Ç–æ–≤–æ-–±–æ—Ä–¥–æ–≤—ã–π –¥–ª—è –†–°–ó–í
            fpv: '#FF4D00',         // –û—Ä–∞–Ω–∂–µ–≤–æ-–∫—Ä–∞—Å–Ω—ã–π –¥–ª—è FPV
            obstril: '#FF9900',     // –ñ–µ–ª—Ç–æ-–æ—Ä–∞–Ω–∂–µ–≤—ã–π –¥–ª—è –æ–±—Å—Ç—Ä–µ–ª–æ–≤
            vibuh: '#FF0000',       // –ö—Ä–∞—Å–Ω—ã–π –¥–ª—è –≤–∑—Ä—ã–≤–æ–≤
            pusk: '#BB0000',        // –¢–µ–º–Ω–æ-–∫—Ä–∞—Å–Ω—ã–π –¥–ª—è –ø—É—Å–∫–æ–≤
            rozved: '#0066FF',      // –°–∏–Ω–∏–π –¥–ª—è —Ä–∞–∑–≤–µ–¥–∫–∏
            rszv: '#3300CC',        // –§–∏–æ–ª–µ—Ç–æ–≤—ã–π –¥–ª—è –†–°–ó–í
            korabel: '#0088CC',     // –ì–æ–ª—É–±–æ–π –¥–ª—è –∫–æ—Ä–∞–±–ª–µ–π
            pvo: '#00AA44',         // –ó–µ–ª–µ–Ω—ã–π –¥–ª—è –ü–í–û
            trivoga: '#FFDD00',     // –ñ–µ–ª—Ç—ã–π –¥–ª—è —Ç—Ä–µ–≤–æ–≥–∏
            vidboi: '#44CC00',      // –ó–µ–ª–µ–Ω—ã–π –¥–ª—è –æ—Ç–±–æ—è
            default: '#666666'      // –°–µ—Ä—ã–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        }
    },

    // –°–æ–∑–¥–∞–Ω–∏–µ SVG —ç–ª–µ–º–µ–Ω—Ç–∞ - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç HTML —Å—Ç—Ä–æ–∫—É
    createSVG(type, size = null) {
        const s = size || this.config.size;
        const color = this.config.colors[type] || this.config.colors.default;
        
        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ SVG
        const svgContent = this.getMarkerSVG(type, s, color);
        
        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º HTML —Å—Ç—Ä–æ–∫—É (–ù–ï DOM —ç–ª–µ–º–µ–Ω—Ç)
        const htmlString = `<svg width="${s}" height="${s}" viewBox="0 0 ${s} ${s}" style="overflow: visible; display: block;">${svgContent}</svg>`;
        
        // –û—Ç–ª–∞–¥–∫–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —á—Ç–æ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –Ω–æ–≤–∞—è –≤–µ—Ä—Å–∏—è
        if (type === 'shahed' && !window.shahedDebugShown) {
            console.log('üöÅ SVG Markers v2.0 loaded - New Shahed design active!');
            window.shahedDebugShown = true;
        }
        
        return htmlString;
    },

    // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è HTML —Å—Ç—Ä–æ–∫–∏ (–Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π)
    getSVGHTML(type, size = null) {
        return this.createSVG(type, size);
    },

    // –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–µ—Ç–∞–ª—å–Ω–æ–π SVG —Ä–∞–∑–º–µ—Ç–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–∏–ø–∞ (—Ç–æ—á–Ω–∞—è –∫–æ–ø–∏—è PNG –∏–∫–æ–Ω–æ–∫)
    getMarkerSVG(type, size, color) {
        const cx = size / 2;
        const cy = size / 2;
        const r = size / 2.5; // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä –¥–ª—è –ª—É—á—à–µ–π –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏
        const stroke = this.config.strokeWidth;

        switch(type) {
            case 'shahed':
                // –®–∞—Ö–µ–¥ - —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–π –¥—Ä–æ–Ω-–∫–∞–º–∏–∫–∞–¥–∑–µ —Å –¥–µ–ª—å—Ç–æ–≤–∏–¥–Ω—ã–º –∫—Ä—ã–ª–æ–º
                const scale = size / 32; // –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥ —Ä–∞–∑–º–µ—Ä –º–∞—Ä–∫–µ—Ä–∞
                
                return `
                    <defs>
                        <linearGradient id="shahedBodyGrad" x1="0" y1="0" x2="0" y2="1">
                            <stop offset="0%" stop-color="#6b7280"/>
                            <stop offset="100%" stop-color="#4b5563"/>
                        </linearGradient>
                        <linearGradient id="shahedWingGrad" x1="0" y1="0" x2="1" y2="0">
                            <stop offset="0%" stop-color="${color}"/>
                            <stop offset="100%" stop-color="#6b7280"/>
                        </linearGradient>
                    </defs>

                    <g transform="translate(${cx-size/2}, ${cy-size/2}) scale(${scale})">
                        <!-- –û—Å–Ω–æ–≤–Ω–æ–µ —Ç—Ä–µ—É–≥–æ–ª—å–Ω–æ–µ –∫—Ä—ã–ª–æ (–¥–µ–ª—å—Ç–æ–≤–∏–¥–Ω–∞—è —Ñ–æ—Ä–º–∞) -->
                        <path d="M 2 16 L 20 5 L 26 16 L 20 27 Z" 
                              fill="url(#shahedWingGrad)" stroke="#374151" stroke-width="0.5"/>
                        
                        <!-- –î–µ—Ç–∞–ª–∏ –∫—Ä—ã–ª–∞ - –ø–∞–Ω–µ–ª–∏ -->
                        <path d="M 3 16 L 19 6 L 20 5 L 2 16 Z" 
                              fill="#9ca3af" opacity="0.3"/>
                        <path d="M 3 16 L 19 26 L 20 27 L 2 16 Z" 
                              fill="#4b5563" opacity="0.3"/>
                        
                        <!-- –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è –ª–∏–Ω–∏—è –∫—Ä—ã–ª–∞ -->
                        <line x1="2" y1="16" x2="26" y2="16" 
                              stroke="#374151" stroke-width="0.5"/>
                        
                        <!-- –§—é–∑–µ–ª—è–∂ (—É–∑–∫–∏–π —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –∫–æ—Ä–ø—É—Å) -->
                        <ellipse cx="14" cy="16" rx="10" ry="1.2" 
                                 fill="url(#shahedBodyGrad)" stroke="#1f2937" stroke-width="0.5"/>
                        
                        <!-- –ù–æ—Å–æ–≤–∞—è —á–∞—Å—Ç—å -->
                        <path d="M 2 16 L 0 15.5 L -1 16 L 0 16.5 Z" 
                              fill="#374151" stroke="#1f2937" stroke-width="0.3"/>
                        
                        <!-- –õ–µ–≤—ã–π –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–π —Å—Ç–∞–±–∏–ª–∏–∑–∞—Ç–æ—Ä -->
                        <path d="M 20 5 L 21 4 L 22 2 L 21.5 4 L 20 5 Z" 
                              fill="#6b7280" stroke="#374151" stroke-width="0.3"/>
                        
                        <!-- –ü—Ä–∞–≤—ã–π –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–π —Å—Ç–∞–±–∏–ª–∏–∑–∞—Ç–æ—Ä -->
                        <path d="M 20 27 L 21 28 L 22 30 L 21.5 28 L 20 27 Z" 
                              fill="#6b7280" stroke="#374151" stroke-width="0.3"/>
                        
                        <!-- –ó–∞–¥–Ω—è—è —á–∞—Å—Ç—å —Ñ—é–∑–µ–ª—è–∂–∞ –≥–¥–µ –º–æ—Ç–æ—Ä -->
                        <ellipse cx="25" cy="16" rx="1.5" ry="1.5" 
                                 fill="#374151" stroke="#1f2937" stroke-width="0.3"/>
                        
                        <!-- –ü—Ä–æ–ø–µ–ª–ª–µ—Ä -->
                        <g transform="translate(26, 16)">
                            <ellipse cx="0" cy="-1.2" rx="0.2" ry="1.3" fill="#1f2937"/>
                            <ellipse cx="0" cy="1.2" rx="0.2" ry="1.3" fill="#1f2937"/>
                            <circle cx="0" cy="0" r="0.4" fill="#111827"/>
                        </g>
                        
                        <!-- –ü–æ—Å–∞–¥–æ—á–Ω–æ–µ —à–∞—Å—Å–∏ -->
                        <rect x="11" y="16.5" width="0.3" height="1" fill="#1f2937" rx="0.1"/>
                        <circle cx="11.15" cy="17.7" r="0.3" fill="#374151"/>
                        
                        <rect x="16" y="16.5" width="0.3" height="1" fill="#1f2937" rx="0.1"/>
                        <circle cx="16.15" cy="17.7" r="0.3" fill="#374151"/>
                        
                        <!-- –ö—Ä–∞—Å–Ω—ã–π –¥–∞—Ç—á–∏–∫ –Ω–∞ –Ω–æ—Å—É -->
                        <circle cx="0.5" cy="16" r="0.2" fill="#ef4444" opacity="0.8"/>
                        
                        <!-- –ê–Ω—Ç–µ–Ω–Ω–∞ -->
                        <line x1="8" y1="16" x2="8" y2="15.5" stroke="#1f2937" stroke-width="0.2"/>
                        <circle cx="8" cy="15.3" r="0.1" fill="#374151"/>
                    </g>
                `;

            case 'avia':
                // –ê–≤–∏–∞—Ü–∏—è - —Å–∞–º–æ–ª–µ—Ç —Å –∫—Ä—ã–ª—å—è–º–∏
                return `
                    <defs>
                        <linearGradient id="aviaGrad" x1="0%" y1="0%" x2="100%" y2="100%">
                            <stop offset="0%" stop-color="#FF8833"/>
                            <stop offset="100%" stop-color="${color}"/>
                        </linearGradient>
                    </defs>
                    <!-- –§—é–∑–µ–ª—è–∂ -->
                    <ellipse cx="${cx}" cy="${cy}" rx="${r/4}" ry="${r}" fill="url(#aviaGrad)" stroke="#000" stroke-width="${stroke}"/>
                    <!-- –ö—Ä—ã–ª—å—è -->
                    <ellipse cx="${cx}" cy="${cy}" rx="${r}" ry="${r/3}" fill="url(#aviaGrad)" stroke="#000" stroke-width="${stroke}"/>
                    <!-- –ö–∞–±–∏–Ω–∞ -->
                    <circle cx="${cx}" cy="${cy-r/2}" r="${r/5}" fill="#fff" stroke="#000" stroke-width="0.5"/>
                    <!-- –î–≤–∏–≥–∞—Ç–µ–ª–∏ -->
                    <circle cx="${cx-r/2}" cy="${cy}" r="${r/8}" fill="#333"/>
                    <circle cx="${cx+r/2}" cy="${cy}" r="${r/8}" fill="#333"/>
                `;

            case 'raketa':
                // –†–∞–∫–µ—Ç–∞ - —É–¥–ª–∏–Ω–µ–Ω–Ω–∞—è —Ñ–æ—Ä–º–∞ —Å –Ω–æ—Å–æ–≤–æ–π —á–∞—Å—Ç—å—é
                return `
                    <defs>
                        <linearGradient id="raketaGrad" x1="0%" y1="0%" x2="0%" y2="100%">
                            <stop offset="0%" stop-color="#FF4444"/>
                            <stop offset="100%" stop-color="${color}"/>
                        </linearGradient>
                    </defs>
                    <!-- –ö–æ—Ä–ø—É—Å —Ä–∞–∫–µ—Ç—ã -->
                    <rect x="${cx-r/3}" y="${cy-r}" width="${r*2/3}" height="${r*1.8}" fill="url(#raketaGrad)" 
                          stroke="#000" stroke-width="${stroke}" rx="${r/6}"/>
                    <!-- –ù–æ—Å–æ–≤–∞—è —á–∞—Å—Ç—å -->
                    <polygon points="${cx},${cy-r*1.2} ${cx-r/3},${cy-r} ${cx+r/3},${cy-r}" fill="#FF2222"/>
                    <!-- –°—Ç–∞–±–∏–ª–∏–∑–∞—Ç–æ—Ä—ã -->
                    <polygon points="${cx-r/3},${cy+r*0.6} ${cx-r/2},${cy+r} ${cx-r/6},${cy+r*0.8}" fill="${color}"/>
                    <polygon points="${cx+r/3},${cy+r*0.6} ${cx+r/2},${cy+r} ${cx+r/6},${cy+r*0.8}" fill="${color}"/>
                    <!-- –û–∫–Ω–∞ -->
                    <rect x="${cx-r/6}" y="${cy-r/2}" width="${r/3}" height="${r/4}" fill="#fff" rx="2"/>
                `;

            case 'artillery':
                // –ê—Ä—Ç–∏–ª–ª–µ—Ä–∏—è - –∫—Ä—É–≥–ª–∞—è –±–∞–∑–∞ —Å –ø—É—à–∫–æ–π
                return `
                    <defs>
                        <radialGradient id="artilleryGrad">
                            <stop offset="0%" stop-color="#BB4444"/>
                            <stop offset="100%" stop-color="${color}"/>
                        </radialGradient>
                    </defs>
                    <!-- –ë–∞–∑–∞ -->
                    <circle cx="${cx}" cy="${cy}" r="${r}" fill="url(#artilleryGrad)" stroke="#000" stroke-width="${stroke}"/>
                    <!-- –°—Ç–≤–æ–ª -->
                    <rect x="${cx-r*0.8}" y="${cy-r/8}" width="${r*1.6}" height="${r/4}" fill="#333" 
                          stroke="#000" stroke-width="0.5" rx="${r/16}"/>
                    <!-- –ë–∞—à–Ω—è -->
                    <circle cx="${cx}" cy="${cy}" r="${r/2}" fill="#555" stroke="#000" stroke-width="0.5"/>
                    <!-- –ú–µ—Ç–∫–∞ -->
                    <circle cx="${cx}" cy="${cy}" r="${r/4}" fill="#fff"/>
                    <text x="${cx}" y="${cy+3}" text-anchor="middle" fill="#000" font-size="${size/6}" font-weight="bold">–ê</text>
                `;

            case 'mlrs':
                // –†–°–ó–í - –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å —Ç—Ä—É–±–∞–º–∏
                return `
                    <defs>
                        <linearGradient id="mlrsGrad">
                            <stop offset="0%" stop-color="#884444"/>
                            <stop offset="100%" stop-color="${color}"/>
                        </linearGradient>
                    </defs>
                    <!-- –ö–æ—Ä–ø—É—Å -->
                    <rect x="${cx-r}" y="${cy-r/2}" width="${r*2}" height="${r}" fill="url(#mlrsGrad)" 
                          stroke="#000" stroke-width="${stroke}" rx="${r/8}"/>
                    <!-- –ù–∞–ø—Ä–∞–≤–ª—è—é—â–∏–µ (—Ç—Ä—É–±—ã) -->
                    <rect x="${cx-r*0.8}" y="${cy-r/3}" width="${r/10}" height="${r*2/3}" fill="#222" rx="1"/>
                    <rect x="${cx-r*0.5}" y="${cy-r/3}" width="${r/10}" height="${r*2/3}" fill="#222" rx="1"/>
                    <rect x="${cx-r*0.2}" y="${cy-r/3}" width="${r/10}" height="${r*2/3}" fill="#222" rx="1"/>
                    <rect x="${cx+r*0.1}" y="${cy-r/3}" width="${r/10}" height="${r*2/3}" fill="#222" rx="1"/>
                    <rect x="${cx+r*0.4}" y="${cy-r/3}" width="${r/10}" height="${r*2/3}" fill="#222" rx="1"/>
                    <rect x="${cx+r*0.7}" y="${cy-r/3}" width="${r/10}" height="${r*2/3}" fill="#222" rx="1"/>
                    <!-- –ì—É—Å–µ–Ω–∏—Ü—ã -->
                    <rect x="${cx-r}" y="${cy+r/3}" width="${r*2}" height="${r/6}" fill="#333" rx="2"/>
                `;

            case 'fpv':
                // FPV –¥—Ä–æ–Ω - –∫–≤–∞–¥—Ä–æ–∫–æ–ø—Ç–µ—Ä —Å –ø—Ä–æ–ø–µ–ª–ª–µ—Ä–∞–º–∏
                return `
                    <defs>
                        <radialGradient id="fpvGrad">
                            <stop offset="0%" stop-color="#FF6633"/>
                            <stop offset="100%" stop-color="${color}"/>
                        </radialGradient>
                    </defs>
                    <!-- –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –∫–æ—Ä–ø—É—Å -->
                    <circle cx="${cx}" cy="${cy}" r="${r/3}" fill="url(#fpvGrad)" stroke="#000" stroke-width="${stroke}"/>
                    <!-- –õ—É—á–∏ (arms) -->
                    <line x1="${cx-r}" y1="${cy-r}" x2="${cx}" y2="${cy}" stroke="#333" stroke-width="${stroke*2}"/>
                    <line x1="${cx+r}" y1="${cy-r}" x2="${cx}" y2="${cy}" stroke="#333" stroke-width="${stroke*2}"/>
                    <line x1="${cx-r}" y1="${cy+r}" x2="${cx}" y2="${cy}" stroke="#333" stroke-width="${stroke*2}"/>
                    <line x1="${cx+r}" y1="${cy+r}" x2="${cx}" y2="${cy}" stroke="#333" stroke-width="${stroke*2}"/>
                    <!-- –ü—Ä–æ–ø–µ–ª–ª–µ—Ä—ã -->
                    <circle cx="${cx-r}" cy="${cy-r}" r="${r/5}" fill="none" stroke="#666" stroke-width="1"/>
                    <circle cx="${cx+r}" cy="${cy-r}" r="${r/5}" fill="none" stroke="#666" stroke-width="1"/>
                    <circle cx="${cx-r}" cy="${cy+r}" r="${r/5}" fill="none" stroke="#666" stroke-width="1"/>
                    <circle cx="${cx+r}" cy="${cy+r}" r="${r/5}" fill="none" stroke="#666" stroke-width="1"/>
                    <!-- –ö–∞–º–µ—Ä–∞ -->
                    <circle cx="${cx}" cy="${cy-r/6}" r="${r/6}" fill="#000"/>
                `;

            case 'obstril':
                // –û–±—Å—Ç—Ä–µ–ª - –≤–∑—Ä—ã–≤ —Å –≤–æ—Å–∫–ª–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º –∑–Ω–∞–∫–æ–º
                return `
                    <defs>
                        <radialGradient id="obstrilGrad">
                            <stop offset="0%" stop-color="#FFBB33"/>
                            <stop offset="100%" stop-color="${color}"/>
                        </radialGradient>
                    </defs>
                    <!-- –í–∑—Ä—ã–≤–Ω–∞—è –≤–æ–ª–Ω–∞ -->
                    <circle cx="${cx}" cy="${cy}" r="${r}" fill="url(#obstrilGrad)" stroke="#FF6600" 
                            stroke-width="${stroke}" opacity="0.8"/>
                    <circle cx="${cx}" cy="${cy}" r="${r*0.7}" fill="none" stroke="#FF8800" 
                            stroke-width="1" opacity="0.6"/>
                    <!-- –í–æ—Å–∫–ª–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π –∑–Ω–∞–∫ -->
                    <rect x="${cx-r/8}" y="${cy-r/2}" width="${r/4}" height="${r*0.6}" fill="#fff" rx="2"/>
                    <circle cx="${cx}" cy="${cy+r/3}" r="${r/8}" fill="#fff"/>
                    <!-- –ò—Å–∫—Ä—ã -->
                    <path d="M${cx-r*0.8},${cy-r*0.3} L${cx-r*0.6},${cy-r*0.5}" stroke="#FF0" stroke-width="2"/>
                    <path d="M${cx+r*0.8},${cy-r*0.3} L${cx+r*0.6},${cy-r*0.5}" stroke="#FF0" stroke-width="2"/>
                    <path d="M${cx-r*0.3},${cy+r*0.8} L${cx-r*0.5},${cy+r*0.6}" stroke="#FF0" stroke-width="2"/>
                `;

            case 'vibuh':
                // –í–∑—Ä—ã–≤ - –∑–≤–µ–∑–¥–∞ —Å –ª—É—á–∞–º–∏
                return `
                    <defs>
                        <radialGradient id="vibuhGrad">
                            <stop offset="0%" stop-color="#FF3333"/>
                            <stop offset="50%" stop-color="#FF6600"/>
                            <stop offset="100%" stop-color="${color}"/>
                        </radialGradient>
                    </defs>
                    <!-- –û—Å–Ω–æ–≤–Ω–æ–π –≤–∑—Ä—ã–≤ -->
                    <circle cx="${cx}" cy="${cy}" r="${r}" fill="url(#vibuhGrad)" stroke="#000" stroke-width="${stroke}"/>
                    <!-- –õ—É—á–∏ –≤–∑—Ä—ã–≤–∞ -->
                    <g transform="translate(${cx},${cy})">
                        <path d="M0,-${r*1.2} L-${r/4},-${r} L${r/4},-${r} Z" fill="#FF0" opacity="0.8"/>
                        <path d="M${r*1.2},0 L${r},${r/4} L${r},-${r/4} Z" fill="#FF0" opacity="0.8"/>
                        <path d="M0,${r*1.2} L${r/4},${r} L-${r/4},${r} Z" fill="#FF0" opacity="0.8"/>
                        <path d="M-${r*1.2},0 L-${r},-${r/4} L-${r},${r/4} Z" fill="#FF0" opacity="0.8"/>
                        <!-- –î–∏–∞–≥–æ–Ω–∞–ª—å–Ω—ã–µ –ª—É—á–∏ -->
                        <path d="M${r*0.85},-${r*0.85} L${r*0.6},-${r*0.4} L${r*0.4},-${r*0.6} Z" fill="#FF0" opacity="0.6"/>
                        <path d="M${r*0.85},${r*0.85} L${r*0.4},${r*0.6} L${r*0.6},${r*0.4} Z" fill="#FF0" opacity="0.6"/>
                        <path d="M-${r*0.85},${r*0.85} L-${r*0.6},${r*0.4} L-${r*0.4},${r*0.6} Z" fill="#FF0" opacity="0.6"/>
                        <path d="M-${r*0.85},-${r*0.85} L-${r*0.4},-${r*0.6} L-${r*0.6},-${r*0.4} Z" fill="#FF0" opacity="0.6"/>
                    </g>
                    <!-- –¶–µ–Ω—Ç—Ä -->
                    <circle cx="${cx}" cy="${cy}" r="${r/3}" fill="#fff"/>
                `;

            case 'pusk':
                // –ü—É—Å–∫ - —Ä–∞–∫–µ—Ç–∞ –≤ –¥–≤–∏–∂–µ–Ω–∏–∏ —Å –æ–≥–Ω–µ–Ω–Ω—ã–º —Å–ª–µ–¥–æ–º
                return `
                    <defs>
                        <linearGradient id="puskGrad" x1="0%" y1="0%" x2="0%" y2="100%">
                            <stop offset="0%" stop-color="#FF6666"/>
                            <stop offset="100%" stop-color="${color}"/>
                        </linearGradient>
                        <linearGradient id="fireGrad" x1="0%" y1="0%" x2="0%" y2="100%">
                            <stop offset="0%" stop-color="#FF4400"/>
                            <stop offset="50%" stop-color="#FF8800"/>
                            <stop offset="100%" stop-color="#FFAA00"/>
                        </linearGradient>
                    </defs>
                    <!-- –û–≥–Ω–µ–Ω–Ω—ã–π —Å–ª–µ–¥ -->
                    <ellipse cx="${cx}" cy="${cy+r*0.8}" rx="${r/4}" ry="${r/2}" fill="url(#fireGrad)" opacity="0.8"/>
                    <!-- –ö–æ—Ä–ø—É—Å —Ä–∞–∫–µ—Ç—ã -->
                    <rect x="${cx-r/4}" y="${cy-r}" width="${r/2}" height="${r*1.5}" fill="url(#puskGrad)" 
                          stroke="#000" stroke-width="${stroke}" rx="${r/8}"/>
                    <!-- –ù–æ—Å–æ–≤–∞—è —á–∞—Å—Ç—å -->
                    <polygon points="${cx},${cy-r*1.3} ${cx-r/4},${cy-r} ${cx+r/4},${cy-r}" fill="#FF4444"/>
                    <!-- –°—Ç–∞–±–∏–ª–∏–∑–∞—Ç–æ—Ä—ã -->
                    <polygon points="${cx-r/4},${cy+r/2} ${cx-r/2},${cy+r} ${cx-r/8},${cy+r/2}" fill="${color}"/>
                    <polygon points="${cx+r/4},${cy+r/2} ${cx+r/2},${cy+r} ${cx+r/8},${cy+r/2}" fill="${color}"/>
                    <!-- –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–≤–∏–∂–µ–Ω–∏—è -->
                    <path d="M${cx},${cy-r*1.5} L${cx-r/6},${cy-r*1.3} L${cx+r/6},${cy-r*1.3}" 
                          stroke="#fff" stroke-width="2" fill="none" stroke-linecap="round"/>
                `;

            case 'rozved':
                // –†–∞–∑–≤–µ–¥–∫–∞ - –¥—Ä–æ–Ω —Å –∫–∞–º–µ—Ä–æ–π –∏ –∞–Ω—Ç–µ–Ω–Ω–∞–º–∏
                return `
                    <defs>
                        <radialGradient id="rozvedGrad">
                            <stop offset="0%" stop-color="#4488FF"/>
                            <stop offset="100%" stop-color="${color}"/>
                        </radialGradient>
                    </defs>
                    <!-- –ö–æ—Ä–ø—É—Å -->
                    <ellipse cx="${cx}" cy="${cy}" rx="${r*0.8}" ry="${r*0.6}" fill="url(#rozvedGrad)" 
                             stroke="#000" stroke-width="${stroke}"/>
                    <!-- –ö—Ä—ã–ª—å—è -->
                    <ellipse cx="${cx}" cy="${cy}" rx="${r*1.2}" ry="${r*0.3}" fill="url(#rozvedGrad)" 
                             stroke="#000" stroke-width="0.5" opacity="0.8"/>
                    <!-- –ö–∞–º–µ—Ä–∞ -->
                    <circle cx="${cx}" cy="${cy-r/4}" r="${r/4}" fill="#000" stroke="#333" stroke-width="1"/>
                    <circle cx="${cx}" cy="${cy-r/4}" r="${r/6}" fill="#00AAFF"/>
                    <circle cx="${cx}" cy="${cy-r/4}" r="${r/12}" fill="#fff"/>
                    <!-- –ê–Ω—Ç–µ–Ω–Ω—ã -->
                    <line x1="${cx-r/2}" y1="${cy-r/2}" x2="${cx-r}" y2="${cy-r}" stroke="#666" stroke-width="2"/>
                    <line x1="${cx+r/2}" y1="${cy-r/2}" x2="${cx+r}" y2="${cy-r}" stroke="#666" stroke-width="2"/>
                    <circle cx="${cx-r}" cy="${cy-r}" r="${r/10}" fill="#666"/>
                    <circle cx="${cx+r}" cy="${cy-r}" r="${r/10}" fill="#666"/>
                    <!-- –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–æ–Ω–Ω—ã–µ –æ–≥–Ω–∏ -->
                    <circle cx="${cx-r/2}" cy="${cy+r/3}" r="${r/10}" fill="#00FF00"/>
                    <circle cx="${cx+r/2}" cy="${cy+r/3}" r="${r/10}" fill="#FF0000"/>
                `;

            case 'rszv':
                // –†–°–ó–í (–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è –≤–µ—Ä—Å–∏—è) - –º–Ω–æ–≥–æ—Å—Ç–≤–æ–ª—å–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞
                return `
                    <defs>
                        <linearGradient id="rszvGrad">
                            <stop offset="0%" stop-color="#6644AA"/>
                            <stop offset="100%" stop-color="${color}"/>
                        </linearGradient>
                    </defs>
                    <!-- –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ -->
                    <rect x="${cx-r*1.1}" y="${cy-r/3}" width="${r*2.2}" height="${r*2/3}" fill="url(#rszvGrad)" 
                          stroke="#000" stroke-width="${stroke}" rx="${r/6}"/>
                    <!-- –°—Ç–≤–æ–ª—ã -->
                    <rect x="${cx-r}" y="${cy-r/5}" width="${r/6}" height="${r*2/5}" fill="#333" rx="2"/>
                    <rect x="${cx-r*0.6}" y="${cy-r/5}" width="${r/6}" height="${r*2/5}" fill="#333" rx="2"/>
                    <rect x="${cx-r*0.2}" y="${cy-r/5}" width="${r/6}" height="${r*2/5}" fill="#333" rx="2"/>
                    <rect x="${cx+r*0.2}" y="${cy-r/5}" width="${r/6}" height="${r*2/5}" fill="#333" rx="2"/>
                    <rect x="${cx+r*0.6}" y="${cy-r/5}" width="${r/6}" height="${r*2/5}" fill="#333" rx="2"/>
                    <rect x="${cx+r}" y="${cy-r/5}" width="${r/6}" height="${r*2/5}" fill="#333" rx="2"/>
                    <!-- –ö–∞–±–∏–Ω–∞ -->
                    <rect x="${cx-r/4}" y="${cy-r*0.8}" width="${r/2}" height="${r/2}" fill="#555" 
                          stroke="#000" stroke-width="0.5" rx="3"/>
                    <rect x="${cx-r/6}" y="${cy-r*0.7}" width="${r/3}" height="${r/6}" fill="#87CEEB" opacity="0.7"/>
                `;

            case 'korabel':
                // –ö–æ—Ä–∞–±–ª—å - –≤–æ–µ–Ω–Ω—ã–π –∫–æ—Ä–∞–±–ª—å —Å –Ω–∞–¥—Å—Ç—Ä–æ–π–∫–∞–º–∏
                return `
                    <defs>
                        <linearGradient id="korabelGrad" x1="0%" y1="0%" x2="0%" y2="100%">
                            <stop offset="0%" stop-color="#6699CC"/>
                            <stop offset="100%" stop-color="${color}"/>
                        </linearGradient>
                    </defs>
                    <!-- –ö–æ—Ä–ø—É—Å –∫–æ—Ä–∞–±–ª—è -->
                    <ellipse cx="${cx}" cy="${cy+r/2}" rx="${r*1.2}" ry="${r/2}" fill="url(#korabelGrad)" 
                             stroke="#000" stroke-width="${stroke}"/>
                    <!-- –ù–∞–¥—Å—Ç—Ä–æ–π–∫–∞ -->
                    <rect x="${cx-r/2}" y="${cy-r/3}" width="${r}" height="${r*2/3}" fill="#888" 
                          stroke="#000" stroke-width="0.5" rx="2"/>
                    <!-- –ú–æ—Å—Ç–∏–∫ -->
                    <rect x="${cx-r/3}" y="${cy-r*0.7}" width="${r*2/3}" height="${r/3}" fill="#AAA" 
                          stroke="#000" stroke-width="0.5" rx="2"/>
                    <!-- –ê–Ω—Ç–µ–Ω–Ω—ã –∏ –º–∞—á—Ç—ã -->
                    <line x1="${cx}" y1="${cy-r*0.7}" x2="${cx}" y2="${cy-r*1.3}" stroke="#666" stroke-width="2"/>
                    <line x1="${cx-r/3}" y1="${cy-r/3}" x2="${cx-r/3}" y2="${cy-r}" stroke="#666" stroke-width="1.5"/>
                    <line x1="${cx+r/3}" y1="${cy-r/3}" x2="${cx+r/3}" y2="${cy-r}" stroke="#666" stroke-width="1.5"/>
                    <!-- –†–∞–¥–∞—Ä -->
                    <circle cx="${cx}" cy="${cy-r*1.3}" r="${r/8}" fill="#666"/>
                    <!-- –í–æ–ª–Ω—ã -->
                    <path d="M${cx-r*1.5},${cy+r*0.8} Q${cx},${cy+r*0.6} ${cx+r*1.5},${cy+r*0.8}" 
                          stroke="#4488CC" stroke-width="2" fill="none" opacity="0.6"/>
                    <path d="M${cx-r*1.3},${cy+r} Q${cx},${cy+r*0.8} ${cx+r*1.3},${cy+r}" 
                          stroke="#4488CC" stroke-width="1.5" fill="none" opacity="0.4"/>
                `;

            case 'pvo':
                // –ü–í–û - –∑–µ–Ω–∏—Ç–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å —Ä–∞–¥–∞—Ä–æ–º
                return `
                    <defs>
                        <radialGradient id="pvoGrad">
                            <stop offset="0%" stop-color="#44AA66"/>
                            <stop offset="100%" stop-color="${color}"/>
                        </radialGradient>
                    </defs>
                    <!-- –ë–∞–∑–∞ -->
                    <circle cx="${cx}" cy="${cy}" r="${r}" fill="url(#pvoGrad)" stroke="#000" stroke-width="${stroke}"/>
                    <!-- –†–∞–∫–µ—Ç–Ω–∞—è —à–∞—Ö—Ç–∞ -->
                    <rect x="${cx-r/3}" y="${cy-r*0.8}" width="${r*2/3}" height="${r*1.2}" fill="#666" 
                          stroke="#000" stroke-width="0.5" rx="${r/8}"/>
                    <!-- –†–∞–∫–µ—Ç—ã -->
                    <rect x="${cx-r/6}" y="${cy-r/2}" width="${r/8}" height="${r}" fill="#333" rx="2"/>
                    <rect x="${cx+r/24}" y="${cy-r/2}" width="${r/8}" height="${r}" fill="#333" rx="2"/>
                    <!-- –†–∞–¥–∞—Ä–Ω–∞—è —Ç–∞—Ä–µ–ª–∫–∞ -->
                    <ellipse cx="${cx}" cy="${cy-r/3}" rx="${r*0.4}" ry="${r/6}" fill="#DDD" 
                             stroke="#000" stroke-width="0.5"/>
                    <line x1="${cx}" y1="${cy-r/3}" x2="${cx}" y2="${cy-r*0.8}" stroke="#666" stroke-width="2"/>
                    <!-- –†–∞–¥–∞—Ä–Ω—ã–µ –≤–æ–ª–Ω—ã -->
                    <path d="M${cx-r*0.6},${cy-r*0.5} Q${cx},${cy-r*0.8} ${cx+r*0.6},${cy-r*0.5}" 
                          stroke="#00FF00" stroke-width="1" fill="none" opacity="0.6"/>
                    <path d="M${cx-r*0.8},${cy-r*0.3} Q${cx},${cy-r*1.1} ${cx+r*0.8},${cy-r*0.3}" 
                          stroke="#00FF00" stroke-width="0.8" fill="none" opacity="0.4"/>
                    <!-- –°–∏–º–≤–æ–ª —â–∏—Ç–∞ -->
                    <path d="M${cx},${cy+r/4} L${cx-r/4},${cy+r/2} L${cx-r/4},${cy+r*0.8} L${cx},${cy+r} L${cx+r/4},${cy+r*0.8} L${cx+r/4},${cy+r/2} Z" 
                          fill="#00AA44" stroke="#000" stroke-width="0.5"/>
                `;

            case 'trivoga':
                // –¢—Ä–∏–≤–æ–≥–∞ - —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫ —Å –≤–æ—Å–∫–ª–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º –∑–Ω–∞–∫–æ–º
                return `
                    <defs>
                        <linearGradient id="trivogaGrad" x1="0%" y1="0%" x2="0%" y2="100%">
                            <stop offset="0%" stop-color="#FFEE44"/>
                            <stop offset="100%" stop-color="${color}"/>
                        </linearGradient>
                    </defs>
                    <!-- –¢—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫ —Ç—Ä–µ–≤–æ–≥–∏ -->
                    <polygon points="${cx},${cy-r*1.2} ${cx+r*1.1},${cy+r*0.8} ${cx-r*1.1},${cy+r*0.8}" 
                             fill="url(#trivogaGrad)" stroke="#DD8800" stroke-width="${stroke*1.5}"/>
                    <!-- –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫ -->
                    <polygon points="${cx},${cy-r*0.9} ${cx+r*0.8},${cy+r*0.5} ${cx-r*0.8},${cy+r*0.5}" 
                             fill="none" stroke="#DD8800" stroke-width="1" opacity="0.6"/>
                    <!-- –í–æ—Å–∫–ª–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π –∑–Ω–∞–∫ -->
                    <rect x="${cx-r/10}" y="${cy-r/2}" width="${r/5}" height="${r*0.8}" fill="#000" rx="2"/>
                    <circle cx="${cx}" cy="${cy+r/2}" r="${r/8}" fill="#000"/>
                    <!-- –ú–∏–≥–∞—é—â–∏–π —ç—Ñ—Ñ–µ–∫—Ç -->
                    <circle cx="${cx}" cy="${cy}" r="${r*1.3}" fill="none" stroke="#FFDD00" 
                            stroke-width="2" opacity="0.3">
                        <animate attributeName="r" values="${r*1.1};${r*1.4};${r*1.1}" 
                                 dur="2s" repeatCount="indefinite"/>
                        <animate attributeName="opacity" values="0.3;0.1;0.3" 
                                 dur="2s" repeatCount="indefinite"/>
                    </circle>
                `;

            case 'vidboi':
                // –í—ñ–¥–±—ñ–π - –∑–µ–ª–µ–Ω—ã–π –∫—Ä—É–≥ —Å–æ —Å–º–∞–π–ª–∏–∫–æ–º
                return `
                    <defs>
                        <radialGradient id="vidboiGrad">
                            <stop offset="0%" stop-color="#66DD44"/>
                            <stop offset="100%" stop-color="${color}"/>
                        </radialGradient>
                    </defs>
                    <!-- –û—Å–Ω–æ–≤–Ω–æ–π –∫—Ä—É–≥ -->
                    <circle cx="${cx}" cy="${cy}" r="${r}" fill="url(#vidboiGrad)" stroke="#228833" stroke-width="${stroke}"/>
                    <!-- –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –∫—Ä—É–≥ -->
                    <circle cx="${cx}" cy="${cy}" r="${r*0.8}" fill="none" stroke="#44AA22" stroke-width="1" opacity="0.6"/>
                    <!-- –£–ª—ã–±–∞—é—â–µ–µ—Å—è –ª–∏—Ü–æ -->
                    <circle cx="${cx-r/3}" cy="${cy-r/4}" r="${r/8}" fill="#000"/>
                    <circle cx="${cx+r/3}" cy="${cy-r/4}" r="${r/8}" fill="#000"/>
                    <path d="M${cx-r/2},${cy+r/4} Q${cx},${cy+r/2} ${cx+r/2},${cy+r/4}" 
                          stroke="#000" stroke-width="${stroke*1.5}" fill="none" stroke-linecap="round"/>
                    <!-- –ì–∞–ª–æ—á–∫–∞ -->
                    <path d="M${cx-r/4},${cy} L${cx-r/8},${cy+r/8} L${cx+r/4},${cy-r/4}" 
                          stroke="#fff" stroke-width="${stroke*2}" fill="none" stroke-linecap="round"/>
                `;

            default:
                // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é - —Å–µ—Ä—ã–π –∫—Ä—É–≥ —Å –≤–æ–ø—Ä–æ—Å–∏—Ç–µ–ª—å–Ω—ã–º –∑–Ω–∞–∫–æ–º
                return `
                    <circle cx="${cx}" cy="${cy}" r="${r}" fill="${color}" stroke="#000" stroke-width="${stroke}"/>
                    <circle cx="${cx}" cy="${cy}" r="${r*0.8}" fill="none" stroke="#999" stroke-width="1"/>
                    <text x="${cx}" y="${cy+4}" text-anchor="middle" fill="#fff" font-size="${size/3}" font-weight="bold">?</text>
                `;
        }
    },

    // –°–æ–∑–¥–∞–Ω–∏–µ data URL –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∏–∫–æ–Ω–∫–∏
    createDataURL(type, size = null) {
        const svg = this.createSVG(type, size);
        const svgData = new XMLSerializer().serializeToString(svg);
        return 'data:image/svg+xml;base64,' + btoa(svgData);
    },

    // –°–æ–∑–¥–∞–Ω–∏–µ canvas –∏–∫–æ–Ω–∫–∏ (–¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)
    createCanvasIcon(type, size = null) {
        const s = size || this.config.size;
        const canvas = document.createElement('canvas');
        canvas.width = s;
        canvas.height = s;
        
        const ctx = canvas.getContext('2d');
        const svg = this.createSVG(type, s);
        const svgData = new XMLSerializer().serializeToString(svg);
        const img = new Image();
        
        return new Promise((resolve) => {
            img.onload = () => {
                ctx.drawImage(img, 0, 0);
                resolve(canvas.toDataURL());
            };
            img.src = 'data:image/svg+xml;base64,' + btoa(svgData);
        });
    },

    // –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç–∏–ø–æ–≤
    getAvailableTypes() {
        return Object.keys(this.config.colors).filter(key => key !== 'default');
    },

    // –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –≤—Å–µ—Ö –∏–∫–æ–Ω–æ–∫
    preloadAll() {
        const icons = {};
        this.getAvailableTypes().forEach(type => {
            icons[type] = this.createDataURL(type);
        });
        return icons;
    }
};

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
if (typeof module !== 'undefined' && module.exports) {
    module.exports = SVGMarkers;
}

// –ì–ª–æ–±–∞–ª—å–Ω–∞—è –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å
window.SVGMarkers = SVGMarkers;
