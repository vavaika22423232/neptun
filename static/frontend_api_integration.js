// Ukraine Alert API Integration –¥–ª—è —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
// –î–æ–±–∞–≤–∏—Ç—å —ç—Ç–æ—Ç –∫–æ–¥ –≤ templates/index.html –≤ —Å–µ–∫—Ü–∏—é JavaScript

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ Ukraine Alert API
async function fetchAPIAlerts() {
    try {
        console.log('üá∫üá¶ –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Ukraine Alert API...');
        
        const response = await fetch('/api_alerts');
        
        if (!response.ok) {
            throw new Error(`HTTP ${response.status}: ${response.statusText}`);
        }
        
        const data = await response.json();
        
        console.log(`üìä API –¥–∞–Ω–Ω—ã–µ:`, {
            total: data.total_api_alerts,
            mapped: data.mapped_alerts,
            markers: data.markers?.length || 0
        });
        
        return data.markers || [];
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ API –¥–∞–Ω–Ω—ã—Ö:', error);
        return [];
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è API –¥–∞–Ω–Ω—ã—Ö —Å —Ç–µ–ª–µ–≥—Ä–∞–º –¥–∞–Ω–Ω—ã–º–∏
async function loadCombinedData() {
    const timeRange = document.getElementById('timeRange')?.value || 120;
    
    try {
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ
        const [telegramData, apiAlerts] = await Promise.all([
            fetch(`/data?timeRange=${timeRange}`).then(r => r.json()),
            fetchAPIAlerts()
        ]);
        
        console.log(`üì° –ü–æ–ª—É—á–µ–Ω–æ –¥–∞–Ω–Ω—ã—Ö:`, {
            telegram: telegramData.geo_tracks?.length || 0,
            api: apiAlerts.length,
            events: telegramData.events?.length || 0
        });
        
        // –û–±—ä–µ–¥–∏–Ω—è–µ–º –º–∞—Ä–∫–µ—Ä—ã
        const combinedMarkers = [
            ...(telegramData.geo_tracks || []),
            ...apiAlerts.map(alert => ({
                ...alert,
                // –î–æ–±–∞–≤–ª—è–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—É—é –º–µ—Ç–∫—É –¥–ª—è API –º–∞—Ä–∫–µ—Ä–æ–≤
                isAPIAlert: true,
                // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ —Ñ–æ—Ä–º–∞—Ç —Å–æ–≤–º–µ—Å—Ç–∏–º—ã–π —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º–∏ –º–∞—Ä–∫–µ—Ä–∞–º–∏
                threat_type: alert.threat_type,
                coordinates: [alert.lat, alert.lng],
                region_name: alert.region,
                message_text: alert.message,
                timestamp_dt: alert.timestamp
            }))
        ];
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∫–∞—Ä—Ç—É
        updateMarkers(combinedMarkers);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏—è (—Ç–æ–ª—å–∫–æ —Ç–µ–ª–µ–≥—Ä–∞–º —Å–æ–±—ã—Ç–∏—è)
        if (telegramData.events) {
            updateEventsList(telegramData.events);
        }
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        displayDataStatistics({
            telegramMarkers: telegramData.geo_tracks?.length || 0,
            apiAlerts: apiAlerts.length,
            totalMarkers: combinedMarkers.length,
            events: telegramData.events?.length || 0
        });
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:', error);
        // Fallback –∫ –æ–±—ã—á–Ω—ã–º –¥–∞–Ω–Ω—ã–º
        loadData();
    }
}

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
function displayDataStatistics(stats) {
    // –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    let statsElement = document.getElementById('data-statistics');
    if (!statsElement) {
        statsElement = document.createElement('div');
        statsElement.id = 'data-statistics';
        statsElement.style.cssText = `
            position: fixed;
            top: 10px;
            right: 10px;
            background: rgba(0,0,0,0.8);
            color: white;
            padding: 10px;
            border-radius: 5px;
            font-size: 12px;
            z-index: 1000;
            max-width: 200px;
        `;
        document.body.appendChild(statsElement);
    }
    
    statsElement.innerHTML = `
        <div><strong>üìä –î–∞–Ω–Ω—ã–µ –Ω–∞ –∫–∞—Ä—Ç–µ:</strong></div>
        <div>üì± Telegram: ${stats.telegramMarkers}</div>
        <div>üá∫üá¶ API —Ç—Ä–µ–≤–æ–≥–∏: ${stats.apiAlerts}</div>
        <div><strong>üìç –í—Å–µ–≥–æ: ${stats.totalMarkers}</strong></div>
        <div>üì∞ –°–æ–±—ã—Ç–∏—è: ${stats.events}</div>
        <small>–û–±–Ω–æ–≤–ª–µ–Ω–æ: ${new Date().toLocaleTimeString()}</small>
    `;
}

// –ú–æ–¥–∏—Ñ–∏—Ü–∏—Ä—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Ñ—É–Ω–∫—Ü–∏—é updateMarkers –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ API –º–∞—Ä–∫–µ—Ä–æ–≤
const originalUpdateMarkers = window.updateMarkers;
window.updateMarkers = function(tracks) {
    if (!originalUpdateMarkers) {
        console.warn('‚ö†Ô∏è –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è updateMarkers –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
        return;
    }
    
    // –†–∞–∑–¥–µ–ª—è–µ–º –º–∞—Ä–∫–µ—Ä—ã –Ω–∞ —Ç–µ–ª–µ–≥—Ä–∞–º –∏ API
    const telegramTracks = tracks.filter(track => !track.isAPIAlert);
    const apiTracks = tracks.filter(track => track.isAPIAlert);
    
    console.log(`üó∫Ô∏è –û–±–Ω–æ–≤–ª—è–µ–º –º–∞—Ä–∫–µ—Ä—ã:`, {
        telegram: telegramTracks.length,
        api: apiTracks.length
    });
    
    // –°–Ω–∞—á–∞–ª–∞ –æ–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–ª–µ–≥—Ä–∞–º –º–∞—Ä–∫–µ—Ä—ã (–æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–∞—è –ª–æ–≥–∏–∫–∞)
    originalUpdateMarkers(telegramTracks);
    
    // –ó–∞—Ç–µ–º –¥–æ–±–∞–≤–ª—è–µ–º API –º–∞—Ä–∫–µ—Ä—ã
    apiTracks.forEach(track => {
        const marker = L.marker([track.lat, track.lng])
            .bindPopup(`
                <div class="api-alert-popup">
                    <h4>üá∫üá¶ –û—Ñ—ñ—Ü—ñ–π–Ω–∞ —Ç—Ä–∏–≤–æ–≥–∞</h4>
                    <p><strong>${track.region}</strong></p>
                    <p>–¢–∏–ø: ${track.threat_type}</p>
                    <p>–ß–∞—Å: ${new Date(track.timestamp).toLocaleString('uk-UA')}</p>
                    <small>–î–∂–µ—Ä–µ–ª–æ: Ukraine Alert API</small>
                </div>
            `);
        
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –∏–∫–æ–Ω–∫–∏ –¥–ª—è API –º–∞—Ä–∫–µ—Ä–æ–≤
        const iconClass = `api-${track.threat_type}`;
        marker.setIcon(getAPIAlertIcon(track.threat_type));
        
        if (window.markersLayer) {
            window.markersLayer.addLayer(marker);
        }
    });
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–∫–æ–Ω–æ–∫ API —Ç—Ä–µ–≤–æ–≥
function getAPIAlertIcon(threatType) {
    const iconMap = {
        'air_alert': '‚úàÔ∏è',
        'artillery': 'üí•',
        'urban_combat': 'üèôÔ∏è',
        'chemical': '‚ò¢Ô∏è',
        'nuclear': '‚ò¢Ô∏è'
    };
    
    const emoji = iconMap[threatType] || 'üö®';
    
    return L.divIcon({
        html: `<div style="
            background: #ff4444;
            border: 2px solid #fff;
            border-radius: 50%;
            width: 30px;
            height: 30px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 16px;
            box-shadow: 0 2px 5px rgba(0,0,0,0.3);
        ">${emoji}</div>`,
        className: 'api-alert-marker',
        iconSize: [30, 30],
        iconAnchor: [15, 15]
    });
}

// –ó–∞–º–µ–Ω—è–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –∑–∞–≥—Ä—É–∑–∫—É –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—É—é
if (typeof loadData === 'function') {
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
    window.originalLoadData = loadData;
    
    // –ó–∞–º–µ–Ω—è–µ–º –Ω–∞ –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é
    window.loadData = loadCombinedData;
    
    console.log('üîÑ Ukraine Alert API –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞');
}

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
setInterval(() => {
    console.log('üîÑ –ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö...');
    loadCombinedData();
}, 30000);

console.log('üá∫üá¶ Ukraine Alert API —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ –º–æ–¥—É–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω');
