#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, —á—Ç–æ –ö–ê–ë—ã –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç raketa.png (–Ω–µ avia.png –∏ –Ω–µ shahed.png)
"""

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –ø–∞–ø–∫—É –≤ sys.path —á—Ç–æ–±—ã –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å app.py
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

try:
    from app import process_message
    
    def test_kab_messages():
        print("=== –¢–µ—Å—Ç –ö–ê–ë–æ–≤ (–¥–æ–ª–∂–Ω—ã –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å raketa.png) ===\n")
        
        test_messages = [
            {
                'message': 'üí£ –•–æ—Ç—ñ–Ω—å (–°—É–º—Å—å–∫–∞ –æ–±–ª.) –ó–∞–≥—Ä–æ–∑–∞ –∑–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è –ö–ê–ë—ñ–≤. –ù–µ–≥–∞–π–Ω–æ –ø—Ä—è–º—É–π—Ç–µ –≤ —É–∫—Ä–∏—Ç—Ç—è!',
                'expected_icon': 'raketa.png',
                'expected_threat': 'raketa',
                'description': '–¢–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è - –ö–ê–ë—ã'
            },
            {
                'message': 'üí£ –ö–∏—ó–≤ –ó–∞–≥—Ä–æ–∑–∞ –ö–ê–ë!',
                'expected_icon': 'raketa.png',
                'expected_threat': 'raketa',
                'description': '–ö–ê–ë (–∫—Ä–∞—Ç–∫–∞—è —Ñ–æ—Ä–º–∞)'
            },
            {
                'message': 'üí£ –•–∞—Ä–∫—ñ–≤ –ö–µ—Ä–æ–≤–∞–Ω—ñ –∞–≤—ñ–∞—Ü—ñ–π–Ω—ñ –±–æ–º–±–∏!',
                'expected_icon': 'raketa.png',
                'expected_threat': 'raketa',
                'description': '–ö–µ—Ä–æ–≤–∞–Ω—ñ –∞–≤—ñ–∞—Ü—ñ–π–Ω—ñ –±–æ–º–±–∏'
            },
            {
                'message': '‚úàÔ∏è –•–∞—Ä–∫—ñ–≤ –õ—ñ—Ç–∞–∫–∏ –≤ –ø–æ–≤—ñ—Ç—Ä—ñ!',
                'expected_icon': 'avia.png',
                'expected_threat': 'avia',
                'description': '–î–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è - –∞–≤–∏–∞—Ü–∏—è (–Ω–µ –ö–ê–ë—ã)'
            },
            {
                'message': 'üõ∏ –û–¥–µ—Å–∞ –ë–ø–õ–ê!',
                'expected_icon': 'shahed.png',
                'expected_threat': 'shahed',
                'description': '–î–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è - –¥—Ä–æ–Ω—ã (–Ω–µ –ö–ê–ë—ã)'
            }
        ]
        
        for i, test in enumerate(test_messages, 1):
            print(f"–¢–µ—Å—Ç {i}: {test['description']}")
            print(f"  –°–æ–æ–±—â–µ–Ω–∏–µ: {test['message']}")
            
            try:
                result = process_message(test['message'], f"test_{i}", "2025-09-13", "test_channel")
                
                if result and len(result) > 0:
                    message_data = result[0]
                    place = message_data.get('place', '–Ω–µ –Ω–∞–π–¥–µ–Ω–æ')
                    threat_type = message_data.get('threat_type', '–Ω–µ –Ω–∞–π–¥–µ–Ω–æ')
                    marker_icon = message_data.get('marker_icon', '–Ω–µ –Ω–∞–π–¥–µ–Ω–æ')
                    
                    print(f"  –†–µ–∑—É–ª—å—Ç–∞—Ç:")
                    print(f"    –ú–µ—Å—Ç–æ: {place}")
                    print(f"    –¢–∏–ø —É–≥—Ä–æ–∑—ã: {threat_type}")
                    print(f"    –ò–∫–æ–Ω–∫–∞: {marker_icon}")
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                    if marker_icon == test['expected_icon'] and threat_type == test['expected_threat']:
                        print(f"    ‚úÖ –ü–†–ê–í–ò–õ–¨–ù–û: {test['expected_icon']}")
                    else:
                        print(f"    ‚ùå –ù–ï–ü–†–ê–í–ò–õ–¨–ù–û: –æ–∂–∏–¥–∞–ª—Å—è {test['expected_icon']}, –ø–æ–ª—É—á–µ–Ω {marker_icon}")
                        
                else:
                    print(f"    ‚ùå –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ")
                    
            except Exception as e:
                print(f"    ‚ùå –û–®–ò–ë–ö–ê: {e}")
            
            print()

    if __name__ == "__main__":
        test_kab_messages()

except ImportError as e:
    print(f"–û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
    print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ app.py –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ç–æ–π –∂–µ –ø–∞–ø–∫–µ")
