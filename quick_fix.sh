#!/bin/bash

# üîß –ë–´–°–¢–†–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ü–†–û–ë–õ–ï–ú
# –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞–π–¥–µ—Ç –∏ –∏—Å–ø—Ä–∞–≤–∏—Ç –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –ø—Ä–æ–±–ª–µ–º

echo "üîç NEPTUN QUICK FIX - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º"
echo "=================================================="

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–º–∞–Ω–¥—ã
check_command() {
    if command -v $1 >/dev/null 2>&1; then
        echo "‚úÖ $1 –Ω–∞–π–¥–µ–Ω"
    else
        echo "‚ùå $1 –Ω–µ –Ω–∞–π–¥–µ–Ω"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ–∞–π–ª–∞
check_file() {
    if [ -f "$1" ]; then
        echo "‚úÖ –§–∞–π–ª $1 —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
        return 0
    else
        echo "‚ùå –§–∞–π–ª $1 –Ω–µ –Ω–∞–π–¥–µ–Ω"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞
check_process() {
    if pgrep -f "$1" > /dev/null; then
        echo "‚úÖ –ü—Ä–æ—Ü–µ—Å—Å $1 –∑–∞–ø—É—â–µ–Ω"
        return 0
    else
        echo "‚ùå –ü—Ä–æ—Ü–µ—Å—Å $1 –Ω–µ –∑–∞–ø—É—â–µ–Ω"
        return 1
    fi
}

echo ""
echo "üîç –®–∞–≥ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π"
echo "----------------------------------------"

check_command python3
check_command pip3
check_command git

echo ""
echo "üîç –®–∞–≥ 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞"
echo "--------------------------------"

check_file "app.py"
check_file "requirements.txt"
check_file ".env"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä messages.json
if [ -f "messages.json" ]; then
    SIZE=$(stat -f%z messages.json 2>/dev/null || stat -c%s messages.json 2>/dev/null || echo "0")
    if [ "$SIZE" -gt 100 ]; then
        echo "‚úÖ messages.json ($SIZE –±–∞–π—Ç) - —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–∞–Ω–Ω—ã–µ"
    else
        echo "‚ö†Ô∏è  messages.json ($SIZE –±–∞–π—Ç) - —Å–ª–∏—à–∫–æ–º –º–∞–ª –∏–ª–∏ –ø—É—Å—Ç"
        NEED_FETCH_MESSAGES=1
    fi
else
    echo "‚ùå messages.json –Ω–µ –Ω–∞–π–¥–µ–Ω"
    NEED_FETCH_MESSAGES=1
fi

echo ""
echo "üîç –®–∞–≥ 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø—É—â–µ–Ω–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤"
echo "---------------------------------------"

check_process "app.py"
APP_RUNNING=$?

check_process "app_debug.py"
DEBUG_RUNNING=$?

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Ä—Ç 5000
if netstat -tulpn 2>/dev/null | grep -q ":5000 " || ss -tulpn 2>/dev/null | grep -q ":5000 "; then
    echo "‚úÖ –ü–æ—Ä—Ç 5000 –∑–∞–Ω—è—Ç"
    PORT_5000_BUSY=1
else
    echo "‚ùå –ü–æ—Ä—Ç 5000 —Å–≤–æ–±–æ–¥–µ–Ω"
    PORT_5000_BUSY=0
fi

echo ""
echo "üîç –®–∞–≥ 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
echo "-------------------------------"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –ø–∞–∫–µ—Ç—ã
python3 -c "import flask" 2>/dev/null && echo "‚úÖ Flask —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" || echo "‚ùå Flask –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
python3 -c "import telethon" 2>/dev/null && echo "‚úÖ Telethon —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" || echo "‚ùå Telethon –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
python3 -c "import requests" 2>/dev/null && echo "‚úÖ Requests —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" || echo "‚ùå Requests –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"

echo ""
echo "üîß –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø"
echo "============================"

# –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ 1: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
echo ""
echo "üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
if [ -f "requirements.txt" ]; then
    pip3 install -r requirements.txt --quiet
    echo "‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
else
    echo "‚ö†Ô∏è  requirements.txt –Ω–µ –Ω–∞–π–¥–µ–Ω, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–∞–∑–æ–≤—ã–µ –ø–∞–∫–µ—Ç—ã..."
    pip3 install flask telethon requests beautifulsoup4 --quiet
    echo "‚úÖ –ë–∞–∑–æ–≤—ã–µ –ø–∞–∫–µ—Ç—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
fi

# –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ 2: –°–æ–∑–¥–∞–Ω–∏–µ .env –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
if [ ! -f ".env" ]; then
    echo ""
    echo "üîß –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ .env..."
    cat > .env << 'EOF'
TELEGRAM_API_ID=24031340
TELEGRAM_API_HASH=your_api_hash_here
TELEGRAM_SESSION=your_session_string_here
EOF
    echo "‚úÖ –§–∞–π–ª .env —Å–æ–∑–¥–∞–Ω"
    echo "‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ .env —Ñ–∞–π–ª —Å –≤–∞—à–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏!"
fi

# –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ 3: –°–±–æ—Ä —Å–æ–æ–±—â–µ–Ω–∏–π –µ—Å–ª–∏ messages.json –ø—É—Å—Ç
if [ "$NEED_FETCH_MESSAGES" = "1" ]; then
    echo ""
    echo "üîß –ó–∞–ø—É—Å–∫ —Å–±–æ—Ä–∞ —Å–æ–æ–±—â–µ–Ω–∏–π Telegram..."
    if [ -f "telegram_fetcher_v2.py" ]; then
        timeout 30 python3 telegram_fetcher_v2.py || echo "–¢–∞–π–º-–∞—É—Ç —Å–±–æ—Ä–∞ —Å–æ–æ–±—â–µ–Ω–∏–π"
    elif [ -f "telegram_fetcher.py" ]; then
        timeout 30 python3 telegram_fetcher.py || echo "–¢–∞–π–º-–∞—É—Ç —Å–±–æ—Ä–∞ —Å–æ–æ–±—â–µ–Ω–∏–π"
    fi
    echo "‚úÖ –°–±–æ—Ä —Å–æ–æ–±—â–µ–Ω–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω (–∏–ª–∏ –ø—Ä–µ—Ä–≤–∞–Ω –ø–æ —Ç–∞–π–º-–∞—É—Ç—É)"
fi

# –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ 4: –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫
if [ "$APP_RUNNING" = "0" ] || [ "$DEBUG_RUNNING" = "0" ]; then
    echo ""
    echo "üîß –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
    pkill -f "python.*app.py" 2>/dev/null || true
    pkill -f "python.*app_debug.py" 2>/dev/null || true
    sleep 2
    echo "‚úÖ –°—Ç–∞—Ä—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã"
fi

# –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ 5: –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
if [ "$PORT_5000_BUSY" = "0" ]; then
    echo ""
    echo "üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
    
    if [ -f "app_debug.py" ]; then
        echo "–ó–∞–ø—É—Å–∫–∞–µ–º –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫—É—é –≤–µ—Ä—Å–∏—é..."
        nohup python3 app_debug.py > app_startup.log 2>&1 &
        APP_PID=$!
        echo "‚úÖ app_debug.py –∑–∞–ø—É—â–µ–Ω (PID: $APP_PID)"
    elif [ -f "app.py" ]; then
        echo "–ó–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –≤–µ—Ä—Å–∏—é..."
        nohup python3 app.py > app_startup.log 2>&1 &
        APP_PID=$!
        echo "‚úÖ app.py –∑–∞–ø—É—â–µ–Ω (PID: $APP_PID)"
    else
        echo "‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω –Ω–∏ app.py –Ω–∏ app_debug.py"
    fi
else
    echo ""
    echo "‚ö†Ô∏è  –ü–æ—Ä—Ç 5000 —É–∂–µ –∑–∞–Ω—è—Ç, –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ —É–∂–µ –∑–∞–ø—É—â–µ–Ω–æ"
fi

echo ""
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
sleep 5

echo ""
echo "üîç –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê"
echo "==================="

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—Å—Ç–∏–ª–æ—Å—å
if pgrep -f "python.*app" > /dev/null; then
    echo "‚úÖ –ü—Ä–æ—Ü–µ—Å—Å Python –∑–∞–ø—É—â–µ–Ω"
else
    echo "‚ùå –ü—Ä–æ—Ü–µ—Å—Å Python –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Ä—Ç
if netstat -tulpn 2>/dev/null | grep -q ":5000 " || ss -tulpn 2>/dev/null | grep -q ":5000 "; then
    echo "‚úÖ –ü–æ—Ä—Ç 5000 –∑–∞–Ω—è—Ç"
else
    echo "‚ùå –ü–æ—Ä—Ç 5000 –≤—Å–µ –µ—â–µ —Å–≤–æ–±–æ–¥–µ–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º API
echo "üåê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API..."
if command -v curl >/dev/null 2>&1; then
    if curl -s -o /dev/null -w "%{http_code}" http://localhost:5000/api/messages | grep -q "200"; then
        echo "‚úÖ API –æ—Ç–≤–µ—á–∞–µ—Ç (200 OK)"
    else
        echo "‚ùå API –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç –∏–ª–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—à–∏–±–∫—É"
    fi
else
    echo "‚ö†Ô∏è  curl –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç API"
fi

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–æ–≥–∏ –µ—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã
if [ -f "app_startup.log" ]; then
    echo ""
    echo "üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –ª–æ–≥–∞ –∑–∞–ø—É—Å–∫–∞:"
    tail -10 app_startup.log
fi

echo ""
echo "üéâ –ì–û–¢–û–í–û!"
echo "========="
echo ""
echo "–ï—Å–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—Å—Ç–∏–ª–æ—Å—å —É—Å–ø–µ—à–Ω–æ, –æ—Ç–∫—Ä–æ–π—Ç–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ:"
echo "üåê http://your-server:5000/"
echo ""
echo "–î–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:"
echo "üìä ./check_logs.sh monitor"
echo ""
echo "–î–ª—è –ø–æ–ª–Ω–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ:"
echo "üîç ./diagnose.sh"
echo ""

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —á—Ç–æ –¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µ
if pgrep -f "python.*app" > /dev/null; then
    echo "‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç!"
    echo ""
    echo "–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
    echo "1. –û—Ç–∫—Ä–æ–π—Ç–µ —Å–∞–π—Ç –≤ –±—Ä–∞—É–∑–µ—Ä–µ"
    echo "2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ –∫–∞—Ä—Ç–∞ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è"
    echo "3. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –º–µ—Ç–∫–∏ –ø–æ—è–≤–ª—è—é—Ç—Å—è"
    echo ""
    echo "–ï—Å–ª–∏ –º–µ—Ç–æ–∫ –Ω–µ—Ç - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram –≤ .env —Ñ–∞–π–ª–µ"
else
    echo "‚ùå –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª–æ—Å—å"
    echo ""
    echo "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ:"
    echo "1. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å .env —Ñ–∞–π–ª: nano .env"
    echo "2. –ó–∞–ø—É—Å—Ç–∏—Ç—å –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É: ./diagnose.sh"
    echo "3. –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–µ—Ç–∞–ª—å–Ω—ã–µ –ª–æ–≥–∏: ./check_logs.sh show"
    echo "4. –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Ä—É—á–Ω—É—é: python3 app_debug.py"
fi

echo ""
echo "=================================================="
echo "üîß QUICK FIX –∑–∞–≤–µ—Ä—à–µ–Ω"
