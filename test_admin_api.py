#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏ —Å Ukraine Alert API –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π
"""

import requests
import time

def test_admin_api_integration():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é API –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏"""
    print("üõ†Ô∏è –¢–µ—Å—Ç Ukraine Alert API –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏")
    print("=" * 50)
    
    base_url = "http://localhost:5000"
    
    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å –¥–æ—Å—Ç—É–ø–Ω–∞
    try:
        response = requests.get(f"{base_url}/admin")
        if response.status_code == 200:
            print("‚úÖ –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å –¥–æ—Å—Ç—É–ø–Ω–∞")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–æ–≤—ã—Ö –∫–Ω–æ–ø–æ–∫ –≤ HTML
            if "üá∫üá¶ API:" in response.text:
                print("‚úÖ –ö–Ω–æ–ø–∫–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è API –Ω–∞–π–¥–µ–Ω–∞ –≤ HTML")
            else:
                print("‚ùå –ö–Ω–æ–ø–∫–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è API –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
                
            if "testAPIConnection" in response.text:
                print("‚úÖ –§—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API –Ω–∞–π–¥–µ–Ω–∞")
            else:
                print("‚ùå –§—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
                
        else:
            print(f"‚ùå –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞: {response.status_code}")
            return False
            
    except requests.exceptions.ConnectionError:
        print("‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω")
        return False
    
    # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º API —ç–Ω–¥–ø–æ–∏–Ω—Ç
    try:
        response = requests.get(f"{base_url}/api_alerts")
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ API —ç–Ω–¥–ø–æ–∏–Ω—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç")
            print(f"   üìä –í—Å–µ–≥–æ —Ç—Ä–µ–≤–æ–≥: {data.get('total_api_alerts', 0)}")
            print(f"   üó∫Ô∏è –° –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏: {data.get('mapped_alerts', 0)}")
            print(f"   üìç –ú–∞—Ä–∫–µ—Ä–æ–≤: {len(data.get('markers', []))}")
        else:
            print(f"‚ùå API —ç–Ω–¥–ø–æ–∏–Ω—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {response.status_code}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ API —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞: {e}")
    
    # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    try:
        # –°–∏–º—É–ª–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –∫–∞–∫ –∏–∑ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏
        telegram_response = requests.get(f"{base_url}/data")
        api_response = requests.get(f"{base_url}/api_alerts")
        
        if telegram_response.status_code == 200 and api_response.status_code == 200:
            telegram_data = telegram_response.json()
            api_data = api_response.json()
            
            telegram_tracks = len(telegram_data.get('tracks', []))
            api_markers = len(api_data.get('markers', []))
            total = telegram_tracks + api_markers
            
            print(f"‚úÖ –ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:")
            print(f"   üì± Telegram —Ç—Ä–µ–∫–∏: {telegram_tracks}")
            print(f"   üá∫üá¶ API –º–∞—Ä–∫–µ—Ä—ã: {api_markers}")
            print(f"   üéØ –ò—Ç–æ–≥–æ: {total}")
            
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö: {e}")
    
    print("\nüéØ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –∞–¥–º–∏–Ω–∞:")
    print("1. –û—Ç–∫—Ä–æ–π—Ç–µ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å: http://localhost:5000/admin")
    print("2. –ù–∞–π–¥–∏—Ç–µ –∫–Ω–æ–ø–∫–∏ 'üá∫üá¶ API: OFF' –∏ 'üîó Test API'")
    print("3. –ù–∞–∂–º–∏—Ç–µ 'üîó Test API' –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è")
    print("4. –ù–∞–∂–º–∏—Ç–µ 'üá∫üá¶ API: OFF' —á—Ç–æ–±—ã –≤–∫–ª—é—á–∏—Ç—å (—Å—Ç–∞–Ω–µ—Ç 'üá∫üá¶ API: ON')")
    print("5. –ù–∞–∂–º–∏—Ç–µ 'üîÑ Refresh' —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å API –º–∞—Ä–∫–µ—Ä—ã –Ω–∞ –∫–∞—Ä—Ç–µ")
    
    return True

if __name__ == "__main__":
    test_admin_api_integration()
