#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –≥–æ—Ä–æ–¥–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from app import CITY_COORDS, UA_CITY_NORMALIZE, ensure_city_coords

cities_to_check = ['—Å–æ—Å–Ω—ñ–≤–∫–∞', '–¥—É–±–ª—è–Ω–∏', '–ª—å–≤—ñ–≤', '–±—É—Å—å–∫']

print("=== –ü–†–û–í–ï–†–ö–ê –ì–û–†–û–î–û–í –í –ë–ê–ó–ï –î–ê–ù–ù–´–• ===")

for city in cities_to_check:
    print(f"\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º: {city}")
    
    # –ü—Ä—è–º–æ–π –ø–æ–∏—Å–∫
    if city in CITY_COORDS:
        coords = CITY_COORDS[city]
        print(f"  ‚úÖ –ù–∞–π–¥–µ–Ω –Ω–∞–ø—Ä—è–º—É—é: {coords}")
        continue
    
    # –ü–æ–∏—Å–∫ —á–µ—Ä–µ–∑ –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—é
    if city in UA_CITY_NORMALIZE:
        normalized = UA_CITY_NORMALIZE[city]
        print(f"  üîÑ –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è: {city} -> {normalized}")
        if normalized in CITY_COORDS:
            coords = CITY_COORDS[normalized]
            print(f"  ‚úÖ –ù–∞–π–¥–µ–Ω –ø–æ—Å–ª–µ –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏: {coords}")
            continue
    
    # –ü–æ–∏—Å–∫ —á–µ—Ä–µ–∑ ensure_city_coords
    coords = ensure_city_coords(city)
    if coords:
        print(f"  ‚úÖ –ù–∞–π–¥–µ–Ω —á–µ—Ä–µ–∑ ensure_city_coords: {coords}")
    else:
        print(f"  ‚ùå –ù–ï –ù–ê–ô–î–ï–ù –Ω–∏–≥–¥–µ!")
        
        # –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –ø–æ—Ö–æ–∂–∏–µ
        print(f"  üîç –ò—â–µ–º –ø–æ—Ö–æ–∂–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è...")
        similar = [k for k in CITY_COORDS.keys() if city[:4] in k or k[:4] in city]
        if similar:
            print(f"    –ü–æ—Ö–æ–∂–∏–µ: {similar[:5]}")
        else:
            print(f"    –ü–æ—Ö–æ–∂–∏—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")

print("\n" + "="*50)
print("=== –ü–†–û–í–ï–†–ö–ê –ü–ê–¢–¢–ï–†–ù–û–í ===")

test_segments = [
    "2—Ö –ë–ø–õ–ê –∫—É—Ä—Å–æ–º –Ω–∞ –°–æ—Å–Ω—ñ–≤–∫—É",
    "2—Ö –ë–ø–õ–ê –ø–æ–≤–∑ –î—É–±–ª—è–Ω–∏ –∫—É—Ä—Å–æ–º –Ω–∞ –õ—å–≤—ñ–≤", 
    "–ë–ø–õ–ê –∫—É—Ä—Å–æ–º –Ω–∞ –ë—É—Å—å–∫"
]

import re

for segment in test_segments:
    print(f"\nüìù –°–µ–≥–º–µ–Ω—Ç: '{segment}'")
    
    # –ü–∞—Ç—Ç–µ—Ä–Ω 1: "–ë–ø–õ–ê –∫—É—Ä—Å–æ–º –Ω–∞ [city]"
    pattern1 = r'–±–ø–ª–∞\s+–∫—É—Ä—Å–æ–º?\s+–Ω–∞\s+(?:–Ω\.–ø\.?\s*)?([–∞-—è—ñ—ó—î“ë\'\-\s]+?)(?:\s|$)'
    match1 = re.search(pattern1, segment.lower())
    if match1:
        city = match1.group(1).strip()
        print(f"  ‚úÖ –ü–∞—Ç—Ç–µ—Ä–Ω 1 –Ω–∞—à–µ–ª: '{city}'")
    else:
        print(f"  ‚ùå –ü–∞—Ç—Ç–µ—Ä–Ω 1 –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª")
    
    # –ü–∞—Ç—Ç–µ—Ä–Ω 2: "[N]—Ö –ë–ø–õ–ê [location]"
    pattern2 = r'(\d+)?[x—Ö]?\s*–±–ø–ª–∞\s+(.+?)(?:\.|$)'
    match2 = re.search(pattern2, segment.lower())
    if match2:
        location = match2.group(2).strip()
        print(f"  ‚úÖ –ü–∞—Ç—Ç–µ—Ä–Ω 2 –Ω–∞—à–µ–ª: '{location}'")
    else:
        print(f"  ‚ùå –ü–∞—Ç—Ç–µ—Ä–Ω 2 –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª")
