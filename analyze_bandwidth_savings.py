#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ —ç–∫–æ–Ω–æ–º–∏–∏ —Ç—Ä–∞—Ñ–∏–∫–∞ –ø–æ—Å–ª–µ –∑–∞–º–µ–Ω—ã PNG –Ω–∞ SVG –º–∞—Ä–∫–µ—Ä—ã
"""

import os
import requests
import time

def get_file_size(file_path):
    """–ü–æ–ª—É—á–∏—Ç—å —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –≤ –±–∞–π—Ç–∞—Ö"""
    if os.path.exists(file_path):
        return os.path.getsize(file_path)
    return 0

def get_svg_size(marker_type, size=32):
    """–ü–æ–ª—É—á–∏—Ç—å —Ä–∞–∑–º–µ—Ä SVG –º–∞—Ä–∫–µ—Ä–∞ —á–µ—Ä–µ–∑ HTTP –∑–∞–ø—Ä–æ—Å"""
    try:
        url = f"http://127.0.0.1:5000/svg_marker/{marker_type}?size={size}"
        response = requests.get(url, timeout=5)
        if response.status_code == 200:
            return len(response.content)
        return 0
    except:
        return 0

def main():
    print("üöÄ –ê–ù–ê–õ–ò–ó –≠–ö–û–ù–û–ú–ò–ò –¢–†–ê–§–ò–ö–ê - PNG vs SVG –ú–ê–†–ö–ï–†–´")
    print("=" * 60)
    
    # –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –º–∞—Ä–∫–µ—Ä–æ–≤
    markers = [
        'shahed', 'avia', 'raketa', 'artillery', 'mlrs', 'fpv',
        'obstril', 'vibuh', 'pusk', 'rozved', 'rszv', 'korabel',
        'pvo', 'trivoga', 'vidboi'
    ]
    
    total_png_size = 0
    total_svg_size = 0
    results = []
    
    print(f"{'–ú–∞—Ä–∫–µ—Ä':<12} {'PNG (KB)':<10} {'SVG (KB)':<10} {'–≠–∫–æ–Ω–æ–º–∏—è':<10}")
    print("-" * 50)
    
    for marker in markers:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä PNG —Ñ–∞–π–ª–∞
        png_path = f"static/{marker}.png"
        png_size = get_file_size(png_path)
        
        # –ü–æ–ª—É—á–∞–µ–º —Ä–∞–∑–º–µ—Ä SVG
        svg_size = get_svg_size(marker)
        time.sleep(0.1)  # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
        
        if png_size > 0 and svg_size > 0:
            savings = ((png_size - svg_size) / png_size) * 100
            results.append({
                'marker': marker,
                'png_size': png_size,
                'svg_size': svg_size,
                'savings': savings
            })
            
            total_png_size += png_size
            total_svg_size += svg_size
            
            print(f"{marker:<12} {png_size/1024:.1f}KB     {svg_size/1024:.1f}KB     {savings:.1f}%")
        else:
            print(f"{marker:<12} {'N/A':<10} {svg_size/1024 if svg_size > 0 else 'N/A':<10} {'N/A':<10}")
    
    print("-" * 50)
    print(f"{'–ò–¢–û–ì–û:':<12} {total_png_size/1024:.1f}KB     {total_svg_size/1024:.1f}KB     {((total_png_size - total_svg_size) / total_png_size * 100) if total_png_size > 0 else 0:.1f}%")
    
    print("\nüìä –î–ï–¢–ê–õ–¨–ù–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
    print(f"‚Ä¢ –û–±—â–∏–π —Ä–∞–∑–º–µ—Ä PNG —Ñ–∞–π–ª–æ–≤: {total_png_size/1024:.1f} KB")
    print(f"‚Ä¢ –û–±—â–∏–π —Ä–∞–∑–º–µ—Ä SVG –º–∞—Ä–∫–µ—Ä–æ–≤: {total_svg_size/1024:.1f} KB")
    print(f"‚Ä¢ –ê–±—Å–æ–ª—é—Ç–Ω–∞—è —ç–∫–æ–Ω–æ–º–∏—è: {(total_png_size - total_svg_size)/1024:.1f} KB")
    print(f"‚Ä¢ –ü—Ä–æ—Ü–µ–Ω—Ç–Ω–∞—è —ç–∫–æ–Ω–æ–º–∏—è: {((total_png_size - total_svg_size) / total_png_size * 100) if total_png_size > 0 else 0:.1f}%")
    
    print(f"\nüíæ –í–õ–ò–Ø–ù–ò–ï –ù–ê BANDWIDTH:")
    monthly_requests = 100000  # –ü—Ä–∏–º–µ—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤ –º–∞—Ä–∫–µ—Ä–æ–≤ –≤ –º–µ—Å—è—Ü
    old_monthly_traffic = (total_png_size * monthly_requests) / (1024 * 1024)
    new_monthly_traffic = (total_svg_size * monthly_requests) / (1024 * 1024)
    
    print(f"‚Ä¢ –ü—Ä–∏ {monthly_requests:,} –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –º–µ—Å—è—Ü:")
    print(f"  - –°—Ç–∞—Ä—ã–π —Ç—Ä–∞—Ñ–∏–∫ (PNG): {old_monthly_traffic:.1f} MB")
    print(f"  - –ù–æ–≤—ã–π —Ç—Ä–∞—Ñ–∏–∫ (SVG): {new_monthly_traffic:.1f} MB")
    print(f"  - –≠–∫–æ–Ω–æ–º–∏—è —Ç—Ä–∞—Ñ–∏–∫–∞: {old_monthly_traffic - new_monthly_traffic:.1f} MB/–º–µ—Å—è—Ü")
    
    print(f"\n‚úÖ –ó–ê–î–ê–ß–ê –í–´–ü–û–õ–ù–ï–ù–ê!")
    print(f"–í—Å–µ {len([r for r in results if r['svg_size'] > 0])} PNG –∏–∫–æ–Ω–æ–∫ —É—Å–ø–µ—à–Ω–æ –∑–∞–º–µ–Ω–µ–Ω—ã –Ω–∞ JavaScript-–≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º—ã–µ SVG!")

if __name__ == "__main__":
    main()
