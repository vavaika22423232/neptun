#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
Debug regex pattern for region-city Shahed messages
"""

import re

def test_regex_pattern():
    print("=== –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è regex –ø–∞—Ç—Ç–µ—Ä–Ω—É –¥–ª—è —Ä–µ–≥—ñ–æ–Ω-–º—ñ—Å—Ç–æ ===")
    
    test_messages = [
        "–Ω–∞ –æ–¥–µ—â–∏–Ω—ñ 10 —à–∞—Ö–µ–¥—ñ–≤ –Ω–∞ –≤–∏–ª–∫–æ–≤–µ",
        "–Ω–∞ –¥–Ω—ñ–ø—Ä–æ–ø–µ—Ç—Ä–æ–≤—â–∏–Ω–∞ 1 —à–∞—Ö–µ–¥ –Ω–∞ —á–∞–ø–ª–∏–Ω–µ",
        "–Ω–∞ —Ö–∞—Ä–∫—ñ–≤—â–∏–Ω—ñ 5 —à–∞—Ö–µ–¥—ñ–≤ –Ω–∞ –∫—É–ø'—è–Ω—Å—å–∫",
        "–Ω–∞ —Å—É–º—â–∏–Ω—ñ 3 —à–∞—Ö–µ–¥–∏ –Ω–∞ –æ—Ö—Ç–∏—Ä–∫—É"
    ]
    
    # –ü–∞—Ç—Ç–µ—Ä–Ω –∑ –∫–æ–¥—É
    pattern = re.compile(r'–Ω–∞\s+([–∞-—è—ñ—ó—î“ë]+—â–∏–Ω[—ñ–∞—É]?)\s+(\d+)\s+—à–∞—Ö–µ–¥[—ñ—ó–≤]*\s+–Ω–∞\s+([–∞-—è—ñ—ó—î“ë\'\-\s]+)', re.IGNORECASE)
    
    for message in test_messages:
        print(f"\nüìç –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è: '{message}'")
        match = pattern.search(message.lower())
        
        if match:
            region, count, city = match.groups()
            print(f"  ‚úÖ –ó–ù–ê–ô–î–ï–ù–û: —Ä–µ–≥—ñ–æ–Ω='{region}', –∫—ñ–ª—å–∫—ñ—Å—Ç—å='{count}', –º—ñ—Å—Ç–æ='{city}'")
        else:
            print(f"  ‚ùå –ù–ï –ó–ù–ê–ô–î–ï–ù–û")
            
            # –°–ø—Ä–æ–±—É—î–º–æ –ø–æ–∫—Ä–æ–∫–æ–≤–æ
            parts = message.lower().split()
            print(f"     –ß–∞—Å—Ç–∏–Ω–∏: {parts}")
            
            # –ü–µ—Ä–µ–≤—ñ—Ä–∏–º–æ –∫–æ–∂–Ω—É —á–∞—Å—Ç–∏–Ω—É –æ–∫—Ä–µ–º–æ
            if '–Ω–∞' in parts:
                print(f"     '–Ω–∞' –∑–Ω–∞–π–¥–µ–Ω–æ")
            
            region_candidates = [part for part in parts if '—â–∏–Ω' in part]
            print(f"     –ö–∞–Ω–¥–∏–¥–∞—Ç–∏ —Ä–µ–≥—ñ–æ–Ω—É: {region_candidates}")
            
            numbers = [part for part in parts if part.isdigit()]
            print(f"     –ß–∏—Å–ª–∞: {numbers}")
            
            shahed_candidates = [part for part in parts if '—à–∞—Ö–µ–¥' in part]
            print(f"     –®–∞—Ö–µ–¥ –∫–∞–Ω–¥–∏–¥–∞—Ç–∏: {shahed_candidates}")

if __name__ == "__main__":
    test_regex_pattern()
