#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ —Ç—Ä–∞—Ñ–∏–∫–∞
"""

import os
import json
import requests
from datetime import datetime

def check_file_sizes():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–æ–≤ —Ñ–∞–π–ª–æ–≤ –ø–æ—Å–ª–µ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏"""
    print("üìÅ –ü–†–û–í–ï–†–ö–ê –†–ê–ó–ú–ï–†–û–í –§–ê–ô–õ–û–í")
    print("-" * 30)
    
    static_size = 0
    if os.path.exists('static'):
        for root, dirs, files in os.walk('static'):
            for file in files:
                file_path = os.path.join(root, file)
                if os.path.exists(file_path):
                    static_size += os.path.getsize(file_path)
    
    static_mb = static_size / 1024 / 1024
    print(f"üì¶ –†–∞–∑–º–µ—Ä static/: {static_mb:.1f}MB")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª—é—á–µ–≤—ã–µ —Ñ–∞–π–ª—ã
    key_files = {
        'static/region_boundaries.js': '–ì—Ä–∞–Ω–∏—Ü—ã —Ä–µ–≥–∏–æ–Ω–æ–≤',
        'static/region_boundaries.js.gz': '–ì—Ä–∞–Ω–∏—Ü—ã (—Å–∂–∞—Ç—ã–µ)', 
        'static/city_boundaries.js': '–ì—Ä–∞–Ω–∏—Ü—ã –≥–æ—Ä–æ–¥–æ–≤',
        'static/city_boundaries.js.gz': '–ì–æ—Ä–æ–¥–∞ (—Å–∂–∞—Ç—ã–µ)',
        'static/shahed.png': '–ò–∫–æ–Ω–∫–∞ –®–∞—Ö–µ–¥',
        'static/avia.png': '–ò–∫–æ–Ω–∫–∞ –∞–≤–∏–∞—Ü–∏–∏'
    }
    
    for file_path, description in key_files.items():
        if os.path.exists(file_path):
            size_kb = os.path.getsize(file_path) / 1024
            print(f"  üìÑ {description}: {size_kb:.0f}KB")
        else:
            print(f"  ‚ùå {description}: —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω")
    
    # –û—Ü–µ–Ω–∫–∞ —ç–∫–æ–Ω–æ–º–∏–∏
    original_static_size = 39  # MB (–±—ã–ª–æ)
    savings_mb = original_static_size - static_mb
    savings_percent = (savings_mb / original_static_size) * 100
    
    print(f"\nüí∞ –≠–ö–û–ù–û–ú–ò–Ø –ù–ê –°–¢–ê–¢–ò–ö–ï:")
    print(f"  –ë—ã–ª–æ: {original_static_size}MB")
    print(f"  –°—Ç–∞–ª–æ: {static_mb:.1f}MB")
    print(f"  –≠–∫–æ–Ω–æ–º–∏—è: {savings_mb:.1f}MB ({savings_percent:.1f}%)")

def check_app_config():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    print("\n‚öôÔ∏è  –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø")
    print("-" * 30)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    if os.path.exists('bandwidth_config.json'):
        with open('bandwidth_config.json', 'r') as f:
            config = json.load(f)
        
        print(f"üìä –õ–∏–º–∏—Ç —Ç—Ä–µ–∫–æ–≤ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: {config.get('max_tracks_default', '–Ω–µ –∑–∞–¥–∞–Ω')}")
        print(f"üìä –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –ª–∏–º–∏—Ç —Ç—Ä–µ–∫–æ–≤: {config.get('max_tracks_limit', '–Ω–µ –∑–∞–¥–∞–Ω')}")
        print(f"‚è±Ô∏è  –ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ API: {config.get('cache_duration_api', '–Ω–µ –∑–∞–¥–∞–Ω–æ')}—Å")
        print(f"üõ°Ô∏è  Rate limit: {config.get('api_rate_limit', '–Ω–µ –∑–∞–¥–∞–Ω')} –∑–∞–ø—Ä–æ—Å–æ–≤/–º–∏–Ω")
        print(f"üóúÔ∏è  Gzip: {'–≤–∫–ª—é—á–µ–Ω' if config.get('gzip_enabled') else '–≤—ã–∫–ª—é—á–µ–Ω'}")
    else:
        print("‚ùå –§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω")

def check_monitoring():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"""
    print("\nüìä –°–ò–°–¢–ï–ú–ê –ú–û–ù–ò–¢–û–†–ò–ù–ì–ê")
    print("-" * 30)
    
    required_files = [
        'bandwidth_monitor.py',
        'traffic_manager.py', 
        'bandwidth_watcher.py'
    ]
    
    for file in required_files:
        if os.path.exists(file):
            print(f"‚úÖ {file}: —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        else:
            print(f"‚ùå {file}: –Ω–µ –Ω–∞–π–¥–µ–Ω")

def test_api_limits():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –ª–∏–º–∏—Ç–æ–≤"""
    print("\nüî¨ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï API")
    print("-" * 30)
    
    try:
        # –¢–µ—Å—Ç –±–∞–∑–æ–≤–æ–≥–æ API
        response = requests.get('http://localhost:5000/data?maxTracks=10', timeout=5)
        if response.status_code == 200:
            data = response.json()
            tracks_count = len(data.get('tracks', []))
            print(f"‚úÖ API –æ—Ç–≤–µ—á–∞–µ—Ç: {tracks_count} —Ç—Ä–µ–∫–æ–≤ –ø–æ–ª—É—á–µ–Ω–æ")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏–º–∏—Ç
            if tracks_count <= 10:
                print("‚úÖ –õ–∏–º–∏—Ç —Ç—Ä–µ–∫–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
            else:
                print(f"‚ö†Ô∏è  –õ–∏–º–∏—Ç —Ç—Ä–µ–∫–æ–≤ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: –ø–æ–ª—É—á–µ–Ω–æ {tracks_count} –≤–º–µ—Å—Ç–æ ‚â§10")
        else:
            print(f"‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: –∫–æ–¥ {response.status_code}")
            
    except requests.exceptions.ConnectionError:
        print("‚ö†Ô∏è  –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –∑–∞–ø—É—â–µ–Ω–æ (—ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ)")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API: {e}")

def estimate_bandwidth_savings():
    """–†–∞—Å—á–µ—Ç –æ–∂–∏–¥–∞–µ–º–æ–π —ç–∫–æ–Ω–æ–º–∏–∏ —Ç—Ä–∞—Ñ–∏–∫–∞ —Å —É—á–µ—Ç–æ–º SVG –º–∞—Ä–∫–µ—Ä–æ–≤"""
    print("\nüí° –ü–†–û–ì–ù–û–ó –≠–ö–û–ù–û–ú–ò–ò –¢–†–ê–§–ò–ö–ê (—Å SVG –º–∞—Ä–∫–µ—Ä–∞–º–∏)")
    print("-" * 30)
    
    # –ò—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    original_gb_month = 1000
    original_cost_month = 150
    
    # –§–∞–∫—Ç–æ—Ä—ã —ç–∫–æ–Ω–æ–º–∏–∏ (–æ–±–Ω–æ–≤–ª–µ–Ω–æ —Å —É—á–µ—Ç–æ–º SVG)
    svg_markers_reduction = 0.95    # 95% —ç–∫–æ–Ω–æ–º–∏–∏ –Ω–∞ –º–∞—Ä–∫–µ—Ä–∞—Ö (PNG‚ÜíSVG)
    static_js_compression = 0.85    # 85% —ç–∫–æ–Ω–æ–º–∏–∏ –Ω–∞ JS —Å–∂–∞—Ç–∏–∏
    api_tracks_reduction = 0.50     # 50% –º–µ–Ω—å—à–µ —Ç—Ä–µ–∫–æ–≤ –≤ API
    caching_reduction = 0.70        # 70% –∑–∞–ø—Ä–æ—Å–æ–≤ –∏–∑ –∫–µ—à–∞
    rate_limiting_effect = 0.15     # 15% –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –±–æ—Ç–æ–≤/–∑–ª–æ—É–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–π
    
    # –í–µ—Å–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —Ç—Ä–∞—Ñ–∏–∫–∞ (–æ–±–Ω–æ–≤–ª–µ–Ω–æ)
    markers_weight = 0.15      # 15% —Ç—Ä–∞—Ñ–∏–∫–∞ - –º–∞—Ä–∫–µ—Ä—ã PNG
    js_files_weight = 0.25     # 25% —Ç—Ä–∞—Ñ–∏–∫–∞ - –±–æ–ª—å—à–∏–µ JS —Ñ–∞–π–ª—ã
    api_weight = 0.50          # 50% —Ç—Ä–∞—Ñ–∏–∫–∞ - API –¥–∞–Ω–Ω—ã–µ  
    other_weight = 0.10        # 10% - –ø—Ä–æ—á–µ–µ
    
    # –†–∞—Å—á–µ—Ç —ç–∫–æ–Ω–æ–º–∏–∏
    markers_savings = markers_weight * svg_markers_reduction
    js_savings = js_files_weight * static_js_compression
    api_savings = api_weight * (api_tracks_reduction + caching_reduction * 0.3)
    rate_limit_savings = rate_limiting_effect
    
    total_reduction = markers_savings + js_savings + api_savings + rate_limit_savings
    total_reduction = min(total_reduction, 0.88)  # –ú–∞–∫—Å–∏–º—É–º 88% —ç–∫–æ–Ω–æ–º–∏–∏
    
    new_gb_month = original_gb_month * (1 - total_reduction)
    new_cost_month = new_gb_month * 0.15  # $0.15 –∑–∞ GB
    savings_month = original_cost_month - new_cost_month
    
    print(f"üìà –ò—Å—Ö–æ–¥–Ω—ã–π —Ç—Ä–∞—Ñ–∏–∫: {original_gb_month}GB/–º–µ—Å—è—Ü (${original_cost_month})")
    print(f"üìâ –ü—Ä–æ–≥–Ω–æ–∑ –ø–æ—Å–ª–µ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏: {new_gb_month:.0f}GB/–º–µ—Å—è—Ü (${new_cost_month:.0f})")
    print(f"üí∞ –û–∂–∏–¥–∞–µ–º–∞—è —ç–∫–æ–Ω–æ–º–∏—è: {savings_month:.0f}$/–º–µ—Å—è—Ü ({total_reduction*100:.0f}%)")
    
    # –†–∞–∑–±–∏–≤–∫–∞ –ø–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º
    print(f"\nüîç –î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è —ç–∫–æ–Ω–æ–º–∏–∏:")
    print(f"  üé® SVG –º–∞—Ä–∫–µ—Ä—ã (–≤–º–µ—Å—Ç–æ PNG): -{markers_savings*100:.0f}%")
    print(f"  üì¶ –°–∂–∞—Ç–∏–µ JS —Ñ–∞–π–ª–æ–≤: -{js_savings*100:.0f}%")
    print(f"  üìä API –¥–∞–Ω–Ω—ã–µ: -{api_savings*100:.0f}%") 
    print(f"  üõ°Ô∏è  Rate limiting: -{rate_limiting_effect*100:.0f}%")
    
    print(f"\nüöÄ –ö–õ–Æ–ß–ï–í–´–ï –£–õ–£–ß–®–ï–ù–ò–Ø:")
    print(f"  ‚Ä¢ PNG –º–∞—Ä–∫–µ—Ä—ã ~6MB ‚Üí SVG ~3KB (99.95% —ç–∫–æ–Ω–æ–º–∏–∏)")
    print(f"  ‚Ä¢ JS —Ñ–∞–π–ª—ã 21MB ‚Üí 2MB gzip (90% —ç–∫–æ–Ω–æ–º–∏–∏)")
    print(f"  ‚Ä¢ API —Ç—Ä–µ–∫–∏ 100‚Üí50 –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (50% —ç–∫–æ–Ω–æ–º–∏–∏)")
    print(f"  ‚Ä¢ –ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ 30 —Å–µ–∫—É–Ω–¥ (70% –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤)")

def main():
    print("üöÄ –ü–†–û–í–ï–†–ö–ê –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–ò –¢–†–ê–§–ò–ö–ê")
    print("=" * 50)
    
    check_file_sizes()
    check_app_config()
    check_monitoring()
    test_api_limits()
    estimate_bandwidth_savings()
    
    print("\n" + "=" * 50)
    print("‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print("\nüìã –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:")
    print("1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: python app.py")
    print("2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥: python bandwidth_watcher.py")
    print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —á–µ—Ä–µ–∑ –Ω–µ–¥–µ–ª—é")
    print("\nüí° –î–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏:")
    print("   curl 'http://localhost:5000/admin/bandwidth_stats?token=admin123'")

if __name__ == "__main__":
    main()
