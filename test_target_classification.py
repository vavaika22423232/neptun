#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
Test various target/missile messages to ensure proper raketa.png classification
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from app import process_message

def test_various_target_messages():
    print("=== –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è —Ä—ñ–∑–Ω–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –ø—Ä–æ —Ü—ñ–ª—ñ/—Ä–∞–∫–µ—Ç–∏ ===")
    
    test_cases = [
        ("–ï–º–æ–¥–∂—ñ —Ä–∞–∫–µ—Ç–∞ + —Ü—ñ–ª—å", "**üöÄ –î–Ω—ñ–ø—Ä–æ (–î–Ω—ñ–ø—Ä–æ–ø–µ—Ç—Ä–æ–≤—Å—å–∫–∞ –æ–±–ª.)** –ó–∞–≥—Ä–æ–∑–∞ –∑–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è –≤–∏—Å–æ–∫–æ—à–≤–∏–¥–∫—ñ—Å–Ω–∏—Ö —Ü—ñ–ª–µ–π."),
        ("–ü—Ä–æ—Å—Ç–∞ —Ü—ñ–ª—å", "—Ü—ñ–ª—å –Ω–∞ –¥–Ω—ñ–ø—Ä–æ/–æ–±–ª–∞—Å—Ç—å"),
        ("–ú–Ω–æ–∂–∏–Ω–∞ —Ü—ñ–ª–µ–π", "–≤–∏—Å–æ–∫–æ—à–≤–∏–¥–∫—ñ—Å–Ω—ñ —Ü—ñ–ª—ñ –Ω–∞ –∫–∏—ó–≤"),
        ("–†–∞–∫–µ—Ç–∞", "—Ä–∞–∫–µ—Ç–∞ –Ω–∞ —Ö–∞—Ä–∫—ñ–≤"),
        ("–ë–ø–õ–ê (–¥–ª—è –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è)", "üõ∏ –ë–ø–õ–ê –Ω–∞ —Å—É–º–∏"),
        ("–®–∞—Ö–µ–¥ (–¥–ª—è –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è)", "—à–∞—Ö–µ–¥–∏ –Ω–∞ –ø–æ–ª—Ç–∞–≤—É"),
    ]
    
    expected_results = {
        "–ï–º–æ–¥–∂—ñ —Ä–∞–∫–µ—Ç–∞ + —Ü—ñ–ª—å": "raketa.png",
        "–ü—Ä–æ—Å—Ç–∞ —Ü—ñ–ª—å": "raketa.png", 
        "–ú–Ω–æ–∂–∏–Ω–∞ —Ü—ñ–ª–µ–π": "raketa.png",
        "–†–∞–∫–µ—Ç–∞": "raketa.png",
        "–ë–ø–õ–ê (–¥–ª—è –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è)": "shahed.png",
        "–®–∞—Ö–µ–¥ (–¥–ª—è –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è)": "shahed.png",
    }
    
    results = {}
    
    for test_name, message in test_cases:
        print(f"\nüìç {test_name}:")
        print(f"   –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: {message}")
        
        result = process_message(message, f"test_{test_name.replace(' ', '_')}", "2025-09-08 12:00:00", "test_channel")
        
        if result and isinstance(result, list) and len(result) > 0:
            marker = result[0]
            icon = marker.get('marker_icon', 'N/A')
            place = marker.get('place', 'N/A')
            threat_type = marker.get('threat_type', 'N/A')
            
            results[test_name] = icon
            expected = expected_results[test_name]
            
            if icon == expected:
                print(f"   ‚úÖ –ü–†–ê–í–ò–õ–¨–ù–û: {place} ‚Üí {icon} (—Ç–∏–ø: {threat_type})")
            else:
                print(f"   ‚ùå –ü–û–ú–ò–õ–ö–ê: {place} ‚Üí {icon}, –æ—á—ñ–∫—É–≤–∞–ª–æ—Å—è {expected} (—Ç–∏–ø: {threat_type})")
        else:
            print(f"   ‚ùå –ú–∞—Ä–∫–µ—Ä –Ω–µ —Å—Ç–≤–æ—Ä–µ–Ω–æ")
            results[test_name] = "NO_MARKER"
    
    # –ü—ñ–¥—Å—É–º–æ–∫
    print(f"\n{'='*60}")
    print("üìä –ü–Ü–î–°–£–ú–û–ö –¢–ï–°–¢–£–í–ê–ù–ù–Ø:")
    
    correct = 0
    total = len(test_cases)
    
    for test_name, expected in expected_results.items():
        actual = results.get(test_name, "NO_RESULT")
        if actual == expected:
            print(f"  ‚úÖ {test_name}: {actual}")
            correct += 1
        else:
            print(f"  ‚ùå {test_name}: {actual} (–æ—á—ñ–∫—É–≤–∞–ª–æ—Å—è {expected})")
    
    print(f"\nüéØ –†–µ–∑—É–ª—å—Ç–∞—Ç: {correct}/{total} —Ç–µ—Å—Ç—ñ–≤ –ø—Ä–æ–π—à–ª–∏ —É—Å–ø—ñ—à–Ω–æ")
    
    if correct == total:
        print("üéâ –í–°–Ü –¢–ï–°–¢–ò –ü–†–û–ô–®–õ–ò! –ö–ª–∞—Å–∏—Ñ—ñ–∫–∞—Ü—ñ—è –ø—Ä–∞—Ü—é—î –ø—Ä–∞–≤–∏–ª—å–Ω–æ.")
    else:
        print("‚ö†Ô∏è  –î–µ—è–∫—ñ —Ç–µ—Å—Ç–∏ –Ω–µ –ø—Ä–æ–π—à–ª–∏. –ü–æ—Ç—Ä—ñ–±–Ω—ñ –¥–æ–¥–∞—Ç–∫–æ–≤—ñ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è.")

if __name__ == "__main__":
    test_various_target_messages()
